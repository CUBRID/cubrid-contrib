<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="presv.adjst">
	
	<!-- 
		기록정리_정리기술
		: 기록물철 목록을 조회한다.
	 -->
	<resultMap id="findAdjstTrgtPagedList-result" class="rms.presv.adjst.domain.Adjst">
		<result property="folderId" 		column="FOLDER_ID" />			<!-- 기록물철ID -->
		<result property="erecordFlag" 		column="ERECORD_FLAG" />		<!-- 전자기록여부 -->
		<result property="orgCd" 			column="ORG_CD" />				<!-- 생산부서 -->
		<result property="orgNm" 			column="ORG_NM" />				<!-- 생산부서명 -->
		<result property="orgAbbrNm"		column="ORG_ABBR_NM" />			<!-- 생산부서명 -->
		<result property="clssNm" 			column="CLSS_NM" />				<!-- 분류체계명 -->
		<result property="title"			column="TITLE" />				<!-- 철제목 -->
		<result property="creatYyyy"		column="CREAT_YYYY" />			<!-- 생산년도 -->
		<result property="presvTermNm"		column="PRESV_TERM_NM" />		<!-- 보존기간명 -->
		<result property="creatSysNm"		column="CREAT_SYS_NM" />		<!-- 생산시스템명 -->
		<result property="adjstFlag" 		column="ADJST_FLAG" />		<!-- 상태 -->
		<result property="adjstFlagNm" 		column="ADJST_FLAG_NM" />		<!-- 상태 -->
	</resultMap>
	<select id="countAdjstTrgtPagedList" parameterClass="rms.presv.adjst.domain.Adjst" resultClass="java.lang.Long">
		SELECT COUNT(1)
        FROM TB_RDFOLDER A
        WHERE A.RECORD_CENTER_ID = #recordCenterId:VARCHAR#
        AND A.FOLDER_KEEP_STATE_CD IN ('01', '04')
        AND A.DISUSE_EVAL_PROG_FLAG = '0'
        <dynamic prepend="AND">
            <isNotEmpty prepend="AND" property="orgCd">
                A.ORG_CD = #orgCd:VARCHAR#
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="creatYyyyF">
                <isEmpty property="creatYyyyT">
               		A.CREAT_YYYY <![CDATA[>=]]> #creatYyyyF:VARCHAR#
               	</isEmpty>
               	<isNotEmpty property="creatYyyyT">
               		(A.CREAT_YYYY BETWEEN #creatYyyyF:VARCHAR# AND #creatYyyyT:VARCHAR#)
               	</isNotEmpty>
            </isNotEmpty>
	        <isNotEmpty property="presvTermCd">
		        <isEqual prepend="AND" property="presvTermCd" compareValue="25">
		            A.PRESV_TERM_CD IN ('20','25')
	            </isEqual>
		        <isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
                A.PRESV_TERM_CD = #presvTermCd:VARCHAR#
	            </isNotEqual>		            
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="title">
                (A.TITLE LIKE #title:VARCHAR# OR A.SUB_TITLE LIKE #title:VARCHAR# OR A.CORCT_TITLE LIKE #title:VARCHAR#)
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="clssId">
                (A.CLSS_DIV_CD= #clssDivCd:VARCHAR# AND A.CLSS_ID = #clssId:VARCHAR#)
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="creatSysCd">
                A.CREAT_SYS_CD = #creatSysCd:VARCHAR#
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="adjstFlag">
                NVL(A.ADJST_FLAG,'0') = #adjstFlag:VARCHAR#
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="erecordFlag">
                A.ERECORD_FLAG = #erecordFlag:VARCHAR#
            </isNotEmpty>
        </dynamic>
	</select>
	<select id="findAdjstTrgtPagedList" parameterClass="rms.presv.adjst.domain.Adjst" resultMap="findAdjstTrgtPagedList-result">
		SELECT G.folder_id
		      ,G.erecord_flag
		      ,G.org_cd
		      ,(SELECT Z.org_nm FROM TB_STORG Z WHERE Z.record_center_id = G.record_center_id AND Z.org_cd = G.org_cd) AS org_nm
		      ,(SELECT Z.org_abbr_nm FROM TB_STORG Z WHERE Z.record_center_id = G.record_center_id AND Z.org_cd = G.org_cd) AS org_abbr_nm
		      ,G.clss_nm
		      ,G.title
		      ,G.creat_yyyy
		      ,(SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd = 'RD07' AND Z.com_cd = DECODE(G.presv_term_cd, '20', '25', G.presv_term_cd)) AS presv_term_nm
		      ,(SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd = 'RD17' AND Z.com_cd = G.creat_sys_cd) AS creat_sys_nm
		      ,NVL(G.adjst_flag, '0') AS adjst_flag
		      ,CASE WHEN NVL(G.adjst_flag, 0) = '0' THEN  '미정리' WHEN G.adjst_flag = '1' THEN '정리' END  AS adjst_flag_nm
		FROM (
		    SELECT F.*
		    FROM(
		        SELECT ROWNUM AS rnum
		              ,E.*
		        FROM (
		            SELECT A.*
		            FROM TB_RDFOLDER A
		            WHERE A.RECORD_CENTER_ID = #recordCenterId:VARCHAR#
		            AND A.FOLDER_KEEP_STATE_CD IN ('01', '04')
		            AND A.DISUSE_EVAL_PROG_FLAG = '0'
		            <dynamic prepend="AND">
		                <isNotEmpty prepend="AND" property="orgCd">
		                    A.ORG_CD = #orgCd:VARCHAR#
		                </isNotEmpty>
		                <isNotEmpty prepend="AND" property="creatYyyyF">
		                	<isEmpty property="creatYyyyT">
		                		A.CREAT_YYYY <![CDATA[>=]]> #creatYyyyF:VARCHAR#
		                	</isEmpty>
		                	<isNotEmpty property="creatYyyyT">
		                		(A.CREAT_YYYY BETWEEN #creatYyyyF:VARCHAR# AND #creatYyyyT:VARCHAR#)
		                	</isNotEmpty>
		                </isNotEmpty>
				        <isNotEmpty property="presvTermCd">
					        <isEqual prepend="AND" property="presvTermCd" compareValue="25">
					            A.PRESV_TERM_CD IN ('20','25')
				            </isEqual>
					        <isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
		                    A.PRESV_TERM_CD = #presvTermCd:VARCHAR#
				            </isNotEqual>		            
		                </isNotEmpty>
		                <isNotEmpty prepend="AND" property="title">
		                    (A.TITLE LIKE #title:VARCHAR# OR A.SUB_TITLE LIKE #title:VARCHAR# OR A.CORCT_TITLE LIKE #title:VARCHAR#)
		                </isNotEmpty>
		                <isNotEmpty prepend="AND" property="clssId">
		                    (A.CLSS_DIV_CD= #clssDivCd:VARCHAR# AND A.CLSS_ID = #clssId:VARCHAR#)
		                </isNotEmpty>
		                <isNotEmpty prepend="AND" property="creatSysCd">
		                    A.CREAT_SYS_CD = #creatSysCd:VARCHAR#
		                </isNotEmpty>
		                <isNotEmpty prepend="AND" property="adjstFlag">
		                    NVL(A.ADJST_FLAG,'0') = #adjstFlag:VARCHAR#
		                </isNotEmpty>
			            <isNotEmpty prepend="AND" property="erecordFlag">
			                A.ERECORD_FLAG = #erecordFlag:VARCHAR#
			            </isNotEmpty>
		            </dynamic>
		            ORDER BY A.RECORD_CENTER_ID, A.TITLE
		        ) E
		        WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
		    ) F
		    WHERE F.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
		) G
		ORDER BY G.rnum
	</select>
	
	<!-- 
		기록정리_정리기술
		: 기록물철 정정제목등을 조회한다.
	 -->
	<resultMap id="findAdjstFolder-result" class="rms.presv.adjst.domain.Adjst">
		<result property="orgTitle" 		column="ORG_TITLE" />			<!-- 원제목 -->
		<result property="corctTitle" 		column="CORCT_TITLE" />			<!-- 정정제목 -->
		<result property="adjstDescr"		column="ADJST_DESCR" />			<!-- 정리기술 -->
		<result property="presvMethodCd"	column="PRESV_METHOD_CD" />		<!-- 보존방법 -->
		<result property="presvTypeCd"		column="PRESV_TYPE_CD" />		<!-- 보존형태 -->
	</resultMap>
	<select id="findAdjstFolder" parameterClass="rms.presv.adjst.domain.Adjst" resultMap="findAdjstFolder-result">
		SELECT ORG_TITLE
			  ,CORCT_TITLE
			  ,ADJST_DESCR
			  ,PRESV_METHOD_CD
			  ,PRESV_TYPE_CD
		FROM  TB_RDFOLDER
		WHERE FOLDER_ID = #folderId:VARCHAR#
		AND   RECORD_CENTER_ID = #recordCenterId:VARCHAR#
		<isNotEmpty prepend="AND" property="adjstFlag">
			ADJST_FLAG  = #adjstFlag:VARCHAR#
		</isNotEmpty>
	</select>

	<!-- 
		기록정리_정리기술
		: 기록물철 색인어 목록을 조회한다.
	 -->
	<resultMap id="findAdjstFolderKeywd-result" class="rms.presv.adjst.domain.Adjst">
		<result property="keyWd" 	column="KEYWD"	jdbcType="CLOB"		javaType="java.lang.String" />				<!-- 색인어 -->
	</resultMap>
	<select id="findAdjstFolderKeywd" parameterClass="rms.presv.adjst.domain.Adjst" resultMap="findAdjstFolderKeywd-result">
		SELECT KEYWD
		FROM  TB_RDFOLDERKEYWD
		WHERE FOLDER_ID = #folderId:VARCHAR#
		AND   RECORD_CENTER_ID = #recordCenterId:VARCHAR#
	</select>
		
	<!-- 
		기록정리_정리기술
		: DELETE(철색인어) 
	-->
	<delete id="deleteAdjstFolderKey" parameterClass="rms.presv.adjst.domain.Adjst">
	  	DELETE FROM TB_RDFOLDERKEYWD
		 WHERE FOLDER_ID = #folderId:VARCHAR#
		   AND RECORD_CENTER_ID = #recordCenterId:VARCHAR#
	</delete>
	
	<!-- 기록정리_정리기술
		: INSERT(철색인어) 
	-->
	<insert id="createAdjstFolderKey" parameterClass="rms.presv.adjst.domain.Adjst">
		INSERT INTO TB_RDFOLDERKEYWD (RECORD_CENTER_ID, FOLDER_ID,KEYWD_LEVL,KEYWD)
		VALUES ( #recordCenterId#, #folderId#
		       , (SELECT TRIM(TO_CHAR(NVL(MAX(KEYWD_LEVL),0) + 1, '0'))
		  		    FROM TB_RDFOLDERKEYWD
		 		   WHERE FOLDER_ID = #folderId:VARCHAR#
		 		     AND RECORD_CENTER_ID = #recordCenterId:VARCHAR#)
		 	   , #keyWd#)
	</insert>
	
	<!-- 
		기록정리_정리기술 
		: UPDATE(철:정리기술) 
	-->
	<update id="updateAdjstFolder" parameterClass="rms.presv.adjst.domain.Adjst">
		UPDATE TB_RDFOLDER
		   SET ADJST_DESCR = #adjstDescr:VARCHAR#		   
		     <isNotEmpty property="corctTitle">
		     	, TITLE = #corctTitle:VARCHAR#		     
		     	, CORCT_TITLE = #corctTitle:VARCHAR#
		     </isNotEmpty>
		     , PRESV_METHOD_CD = #presvMethodCd:VARCHAR#
		     <!--cubrid , ADJST_DTIME = (Select to_char(sysdate,'YYYYMMDDHHMMSS') from dual)-->
		     , ADJST_DTIME = (Select to_char(sys_datetime,'YYYYMMDDHHMMSS') from dual)
		     , ADJST_FLAG  = #adjstFlag:VARCHAR#
		     <isNotEqual property="presvMethodCd" compareValue="3">
		     	<isEqual property="presvTypeCd" compareValue="1">
		     		, MF_REQ_TYPE_CD = '3'
		     		, MF_PIC_STATE_CD = '1'
		     	</isEqual>
		     	<isEqual property="presvTypeCd" compareValue="2">
		     		, MF_REQ_TYPE_CD = '3'
		     		, MF_PIC_STATE_CD = '1'
		     		, SCAN_REQ_TYPE_CD = '3'
		     		, SCAN_PROG_STATE_CD = '2'
		     	</isEqual>
		     </isNotEqual>
		 WHERE FOLDER_ID = #folderId:VARCHAR#
		   AND RECORD_CENTER_ID = #recordCenterId:VARCHAR#
	</update>
	
	<!-- 
		기록정리_정리기술
		: UPDATE(철:정리기술)
	 -->
	<update id="updateFolderByAdjst" parameterClass="rms.presv.adjst.domain.Adjst">
		UPDATE	tb_rdfolder
		SET		presv_method_cd = #presvMethodCd:VARCHAR#
		<isEqual property="presvMethodCd" compareValue="3" open=",">
			presv_type_cd = '0',
			mf_pic_state_cd = '0',
			mf_req_type_cd = '0'
		</isEqual>
		<isNotEqual property="presvMethodCd" compareValue="3" open=",">
			presv_type_cd = #presvTypeCd:VARCHAR#,
			mf_pic_state_cd = '1',
			mf_req_type_cd = '3'
		</isNotEqual>
		WHERE	record_center_id = #recordCenterId:VARCHAR#
		AND		folder_id = #folderId:VARCHAR#
	</update>
	
	
	<!-- 
		기록정리_정리기술
		: 기록물건 목록을 조회한다.
	 -->
	<resultMap id="findAdjstRecordPagedList-result" class="rms.presv.adjst.domain.Adjst">
		<result property="recordId"         column="RECORD_ID" />
		<result property="recordCenterId"   column="RECORD_CENTER_ID" />
		<result property="orgTitle" 		column="ORG_TITLE" />			<!-- 원제목 -->
		<result property="title"            column="TITLE" />
		<result property="erecordFlag" 		column="ERECORD_FLAG" />		<!-- 전자기록여부 -->
		<result property="recordDetlTypeNm" column="RECORD_DETL_TYPE_NM" />
		<result property="creatRegDtime"    column="CREAT_REG_DTIME" />
		<result property="agentNm"          column="AGENT_NM" />
		<result property="erecordFlagNm"    column="ERECORD_FLAG_NM" />
		<result property="operReadRangeCd"  column="OPER_READ_RANGE_CD" />
	</resultMap>
	<select id="countAdjstRecordPagedList" parameterClass="rms.presv.adjst.domain.Adjst" resultClass="java.lang.Long">
		SELECT COUNT(1)
        FROM TB_RDRECORD A
        WHERE A.RECORD_CENTER_ID = #recordCenterId:VARCHAR#
        AND A.FOLDER_ID = #folderId:VARCHAR#
        AND A.OPER_READ_RANGE_CD != '03'
        AND A.OPER_READ_RANGE_CD IS NOT NULL
        <isNotEmpty prepend="AND" property="erecordFlag">
            A.ERECORD_FLAG = #erecordFlag:VARCHAR#
        </isNotEmpty>
	</select>
	<select id="findAdjstRecordPagedList" parameterClass="rms.presv.adjst.domain.Adjst" resultMap="findAdjstRecordPagedList-result">
		SELECT D.record_id
		      ,D.record_center_id
		      ,D.org_title
		      ,D.title
		      ,D.erecord_flag
		      ,(SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd = 'RD03' AND Z.com_cd = D.record_detl_type_cd) AS record_detl_type_nm
		      ,SUBSTR(D.creat_reg_dtime,0,8) AS creat_reg_dtime
		      ,D.duty_chrgr_nm AS agent_nm
		      ,(SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd = 'RD23' AND Z.com_cd = D.erecord_flag) AS erecord_flag_nm
		      ,D.oper_read_range_cd
		FROM (
		    SELECT C.*
		    FROM(
		        SELECT ROWNUM AS rnum
		              ,B.*
		        FROM (
		            SELECT *
		            FROM TB_RDRECORD A
		            WHERE A.RECORD_CENTER_ID = #recordCenterId:VARCHAR#
		            AND A.FOLDER_ID = #folderId:VARCHAR#
		            AND A.OPER_READ_RANGE_CD != '03'
		            AND A.OPER_READ_RANGE_CD IS NOT NULL
		            <isNotEmpty prepend="AND" property="erecordFlag">
		                A.ERECORD_FLAG = #erecordFlag:VARCHAR#
		            </isNotEmpty>
		            ORDER BY A.record_center_id, A.creat_reg_dtime, A.creat_reg_no
		        ) B
		        WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
		    ) C
		    WHERE C.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
		) D
		ORDER BY D.rnum
	</select>

	<!-- 
		기록정리_정리기술
		: SELECT(건:정정제목,정리기술) 
	-->
	<resultMap id="adjstRecord-result"		class="rms.presv.adjst.domain.Adjst">
		<result property="orgTitle" 		column="ORG_TITLE" />			<!-- 원제목 -->
		<result property="corctTitle" 		column="CORCT_TITLE" />			<!-- 정정제목 -->
		<result property="adjstDescr"		column="ADJST_DESCR" />			<!-- 정리기술 -->
		<result property="adjstPage"		column="RECORD_PAGE_CNT" />		<!-- 쪽수 -->
	</resultMap>
	<select id="findAdjstRecord" parameterClass="rms.presv.adjst.domain.Adjst" resultMap="adjstRecord-result">
		SELECT ORG_TITLE, CORCT_TITLE, ADJST_DESCR, RECORD_PAGE_CNT
		  FROM TB_RDRECORD
		 WHERE RECORD_ID = #recordId:VARCHAR#
		   AND RECORD_CENTER_ID = #recordCenterId:VARCHAR#
		<isNotEmpty prepend="AND" property="corctTitle">
			CORCT_TITLE  = #corctTitle:VARCHAR#
		</isNotEmpty>
	</select>
	
	<!-- 
		기록정리_정리기술
		: SELECT(건:색인어) 
	-->
	<resultMap id="findAdjstRecordKeywd-result"		class="rms.presv.adjst.domain.Adjst">
		<result property="keyWd" 			column="KEYWD"	jdbcType="CLOB"	javaType="java.lang.String" />				<!-- 색인어 -->
	</resultMap>
	<select id="findAdjstRecordKeywd" parameterClass="rms.presv.adjst.domain.Adjst" resultMap="findAdjstRecordKeywd-result">
		SELECT KEYWD
		  FROM TB_RDRECORDKEYWD
		 WHERE RECORD_ID = #recordId:VARCHAR#
		   AND RECORD_CENTER_ID = #recordCenterId:VARCHAR#
	</select>

	<!--
		기록정리_정리기술
		: DELETE(건색인어) 
	-->
	<delete id="deleteAdjstRecordKey" parameterClass="rms.presv.adjst.domain.Adjst">
	  	DELETE FROM TB_RDRECORDKEYWD
		 WHERE RECORD_ID = #recordId:VARCHAR#
		   AND RECORD_CENTER_ID = #recordCenterId:VARCHAR#
	</delete>
	
	<!-- 
		기록정리_정리기술
		: INSERT(건색인어) 
	-->
	<insert id="createAdjstRecordKey" parameterClass="rms.presv.adjst.domain.Adjst">
		INSERT INTO TB_RDRECORDKEYWD (RECORD_CENTER_ID, RECORD_ID,KEYWD_LEVL,KEYWD)
		VALUES (#recordCenterId#, #recordId#
		       , (SELECT TRIM(TO_CHAR(NVL(MAX(KEYWD_LEVL),0) + 1, '0'))
		  		    FROM TB_RDRECORDKEYWD
		 		   WHERE RECORD_ID = #recordId:VARCHAR#
		 		     AND RECORD_CENTER_ID = #recordCenterId:VARCHAR#)
		 	   , #keyWd#)
	</insert>
	
	<!-- 
		기록정리_정리기술 
		: INSERT(건:정리기술 히스토리) 
	-->
	<insert id="createAdjstRecordHistory" parameterClass="rms.presv.adjst.domain.Adjst">
	INSERT 
		  INTO TB_RDRECORDADHIST 
		       (SELECT RECORD_CENTER_ID, 
		              RECORD_ID, 
		              (SELECT NVL(MAX(CHNG_HIST_NO)+1,1) 
		                FROM TB_RDRECORDADHIST 
		               WHERE RECORD_CENTER_ID=#recordCenterId:VARCHAR#
		                     AND RECORD_ID= #recordId:VARCHAR#
		              ), 
		              TITLE, 
		              <isEqual property="erecordFlag" compareValue="2">
				      	#corctTitle:VARCHAR#, 
				      </isEqual>
				      <isNotEqual property="erecordFlag" compareValue="2">
				      	#orgTitle:VARCHAR#, 
				      </isNotEqual>
		              ADJST_DESCR, 
		              #adjstDescr:VARCHAR#, 
		              RECORD_PAGE_CNT, 
		              #adjstPage:VARCHAR#, 
		              <!--cubrid TO_CHAR(SYSDATE,'YYYYMMDDHHMISS') -->
		              TO_CHAR(sys_datetime,'YYYYMMDDHHMISS') 
		         FROM TB_RDRECORD 
		        WHERE RECORD_CENTER_ID=#recordCenterId:VARCHAR#
		              AND RECORD_ID= #recordId:VARCHAR# 
		       )		
	</insert>
	
	<!-- 
		기록정리_정리기술 
		: UPDATE(건:정리기술) 
	-->
	<update id="updateAdjstRecord" parameterClass="rms.presv.adjst.domain.Adjst">
		UPDATE TB_RDRECORD
		   SET ADJST_DESCR = #adjstDescr:VARCHAR#		   
		     <isEqual property="erecordFlag" compareValue="2">
		     	<isNotEmpty property="corctTitle">
		     		, CORCT_TITLE = #corctTitle:VARCHAR#
					, TITLE = #corctTitle:VARCHAR#
				</isNotEmpty>		     
		     </isEqual>
		     , RECORD_PAGE_CNT = #adjstPage:VARCHAR#
		 WHERE RECORD_ID = #recordId:VARCHAR#
		   AND RECORD_CENTER_ID = #recordCenterId:VARCHAR#
	</update>
	
	<!-- 
		기록정리_정리기술
		: UPDATE(건:철의 쪽수 업데이트) 
	-->
	<update id="updateAdjstFolderPageCount" parameterClass="rms.presv.adjst.domain.Adjst">
		UPDATE TB_RDFOLDER A
		SET RECORD_TOT_PAGE_CNT = (SELECT SUM(RECORD_PAGE_CNT) FROM TB_RDRECORD B WHERE B.RECORD_CENTER_ID = A.RECORD_CENTER_ID AND B.FOLDER_ID = A.FOLDER_ID)
		WHERE RECORD_CENTER_ID = #recordCenterId:VARCHAR#
		AND FOLDER_ID = (SELECT FOLDER_ID 
		         		 FROM TB_RDRECORD 
		        		 WHERE RECORD_CENTER_ID = #recordCenterId:VARCHAR# 
		              	 AND RECORD_ID = #recordId:VARCHAR#)
	</update>
	
	
	<!-- 
		기록정리_훼손기록정리
		: 기록물철 목록을 조회한다.
	 -->
	<resultMap id="findAdjstDamgPagedList-result" class="rms.presv.adjst.domain.Adjst">		
		<result property="recordId" 		column="RECORD_ID" />			<!-- 기록물건ID -->
		<result property="orgNm" 			column="ORG_NM" />				<!-- 생산부서명 -->
		<result property="orgAbbrNm"		column="ORG_ABBR_NM" />			<!-- 생산부서명 -->
		<result property="clssNm" 			column="CLSS_NM" />				<!-- 분류체계명 -->
		<result property="title"			column="TITLE" />				<!-- 철제목 -->
		<result property="creatYyyy"		column="CREAT_YYYY" />			<!-- 생산년도 -->
		<result property="presvTermNm"		column="PRESV_TERM_NM" />		<!-- 보존기간명 -->
		<result property="creatSysNm"		column="CREAT_SYS_NM" />		<!-- 생산시스템명 -->
		<result property="damgCnt" 			column="DAMG_CNT" />			<!-- 훼손여부 -->
		<result property="restrCnt"			column="RESTR_CNT" />			<!-- 복원여부 -->
		<result property="loseCnt" 			column="LOSE_CNT" />			<!-- 분실여부 -->	
		<result property="damgIgwanCnt" 	column="DAMG_IGWAN_CNT" />
	</resultMap>
	<select id="countAdjstDamgPagedList" parameterClass="rms.presv.adjst.domain.Adjst" resultClass="java.lang.Long">
<!-- 		SELECT COUNT(1)  -->
<!--         FROM TB_RDFOLDER A, TB_RDRECORD B, TB_RDRECORD_RESTORE C  -->
<!--         WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID  -->
<!--         AND B.RECORD_CENTER_ID=C.RECORD_CENTER_ID(+)  -->
<!--         AND B.RECORD_ID=C.RECORD_ID(+)  -->
<!--         AND A.FOLDER_ID = B.FOLDER_ID  -->
<!--         AND A.FOLDER_KEEP_STATE_CD IN ('01', '04')  -->
<!--         AND B.ERECORD_FLAG ='2'   -->
<!--         AND A.RECORD_CENTER_ID = #recordCenterId:VARCHAR# -->
<!--         <dynamic prepend="AND"> -->
<!--             <isNotEmpty prepend="AND" property="orgCd"> -->
<!--                 A.ORG_CD = #orgCd:VARCHAR# -->
<!--             </isNotEmpty> -->
<!--             <isNotEmpty prepend="AND" property="creatYyyyF"> -->
<!--                 (A.CREAT_YYYY BETWEEN #creatYyyyF:VARCHAR# AND #creatYyyyT:VARCHAR#) -->
<!--             </isNotEmpty> -->
<!--             <isNotEmpty prepend="AND" property="presvTermCd"> -->
<!--                 A.PRESV_TERM_CD = #presvTermCd:VARCHAR# -->
<!--             </isNotEmpty> -->
<!--             <isNotEmpty prepend="AND" property="title"> -->
<!--                 (B.TITLE LIKE #title:VARCHAR# OR B.SUB_TITLE LIKE #title:VARCHAR# OR B.CORCT_TITLE LIKE #title:VARCHAR#) -->
<!--             </isNotEmpty> -->
<!--             <isNotEmpty prepend="AND" property="clssId"> -->
<!--                 (A.CLSS_DIV_CD= #clssDivCd:VARCHAR# AND A.CLSS_ID = #clssId:VARCHAR#) -->
<!--             </isNotEmpty> -->
<!--             <isNotEmpty prepend="AND" property="creatSysCd"> -->
<!--                 A.CREAT_SYS_CD = #creatSysCd:VARCHAR# -->
<!--             </isNotEmpty> -->
<!--         </dynamic> -->
        SELECT COUNT(*) 
	  	FROM TB_RDFOLDER A
	  		,TB_RDRECORD B
	 	WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
	    AND A.FOLDER_ID = B.FOLDER_ID 
	    AND A.FOLDER_KEEP_STATE_CD IN ('01', '04') 
	    AND B.ERECORD_FLAG ='2'  
		AND A.RECORD_CENTER_ID = #recordCenterId:VARCHAR#
		<dynamic prepend="AND">
			<isNotEmpty prepend="AND" property="orgCd">
				A.ORG_CD = #orgCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="creatYyyyF">
				(A.CREAT_YYYY BETWEEN #creatYyyyF:VARCHAR# AND #creatYyyyT:VARCHAR#)
			</isNotEmpty>
	        <isNotEmpty property="presvTermCd">
		        <isEqual prepend="AND" property="presvTermCd" compareValue="25">
		            A.PRESV_TERM_CD IN ('20','25')
	            </isEqual>
		        <isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
				A.PRESV_TERM_CD = #presvTermCd:VARCHAR#
	            </isNotEqual>		            
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="title">
				(B.TITLE LIKE #title:VARCHAR# OR B.SUB_TITLE LIKE #title:VARCHAR# OR B.CORCT_TITLE LIKE #title:VARCHAR#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="clssId">
				(A.CLSS_DIV_CD= #clssDivCd:VARCHAR# AND A.CLSS_ID = #clssId:VARCHAR#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="creatSysCd">
				A.CREAT_SYS_CD = #creatSysCd:VARCHAR#
			</isNotEmpty>
		</dynamic>
	</select>
	<select id="findAdjstDamgPagedList" parameterClass="rms.presv.adjst.domain.Adjst" resultMap="findAdjstDamgPagedList-result">
<!-- 		SELECT G.* -->
<!-- 		FROM ( -->
<!-- 		    SELECT F.* -->
<!-- 		    FROM ( -->
<!-- 		        SELECT ROWNUM AS rnum -->
<!-- 		                ,E.* -->
<!-- 		        FROM ( -->
<!-- 		            SELECT B.RECORD_ID -->
<!-- 		                ,(SELECT ORG_NM FROM TB_STORG D WHERE D.RECORD_CENTER_ID = A.RECORD_CENTER_ID AND D.ORG_CD = A.ORG_CD ) AS ORG_NM -->
<!-- 		                ,(SELECT ORG_ABBR_NM FROM TB_STORG D WHERE D.RECORD_CENTER_ID = A.RECORD_CENTER_ID AND D.ORG_CD = A.ORG_CD ) AS ORG_ABBR_NM -->
<!-- 		                ,A.CLSS_NM -->
<!-- 		                ,B.TITLE -->
<!-- 		                ,A.CREAT_YYYY -->
<!-- 		                ,(SELECT COM_CD_NM FROM TB_ZZCOMCD D WHERE A.PRESV_TERM_CD = D.COM_CD AND D.COM_TYPE_CD = 'RD07') AS PRESV_TERM_NM -->
<!-- 		                ,(SELECT COM_CD_NM FROM TB_ZZCOMCD D WHERE A.CREAT_SYS_CD = D.COM_CD AND D.COM_TYPE_CD = 'RD17') AS CREAT_SYS_NM -->
<!-- 		                ,DECODE(C.DAMG_FLAG,'1','훼손','') AS DAMG_FLAG -->
<!-- 		                ,DECODE(C.RESTR_HANDL_YMD,'','','처리') AS RESTR_HANDL_YMD  -->
<!-- 		            FROM TB_RDFOLDER A, TB_RDRECORD B, TB_RDRECORD_RESTORE C  -->
<!-- 		            WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID  -->
<!-- 		            AND B.RECORD_CENTER_ID=C.RECORD_CENTER_ID(+)  -->
<!-- 		            AND B.RECORD_ID=C.RECORD_ID(+)  -->
<!-- 		            AND A.FOLDER_ID = B.FOLDER_ID  -->
<!-- 		            AND A.FOLDER_KEEP_STATE_CD IN ('01', '04')  -->
<!-- 		            AND B.ERECORD_FLAG ='2'   -->
<!-- 		            AND A.RECORD_CENTER_ID = #recordCenterId:VARCHAR# -->
<!-- 		            <dynamic prepend="AND"> -->
<!-- 		                <isNotEmpty prepend="AND" property="orgCd"> -->
<!-- 		                    A.ORG_CD = #orgCd:VARCHAR# -->
<!-- 		                </isNotEmpty> -->
<!-- 		                <isNotEmpty prepend="AND" property="creatYyyyF"> -->
<!-- 		                    (A.CREAT_YYYY BETWEEN #creatYyyyF:VARCHAR# AND #creatYyyyT:VARCHAR#) -->
<!-- 		                </isNotEmpty> -->
<!-- 		                <isNotEmpty prepend="AND" property="presvTermCd"> -->
<!-- 		                    A.PRESV_TERM_CD = #presvTermCd:VARCHAR# -->
<!-- 		                </isNotEmpty> -->
<!-- 		                <isNotEmpty prepend="AND" property="title"> -->
<!-- 		                    (B.TITLE LIKE #title:VARCHAR# OR B.SUB_TITLE LIKE #title:VARCHAR# OR B.CORCT_TITLE LIKE #title:VARCHAR#) -->
<!-- 		                </isNotEmpty> -->
<!-- 		                <isNotEmpty prepend="AND" property="clssId"> -->
<!-- 		                    (A.CLSS_DIV_CD= #clssDivCd:VARCHAR# AND A.CLSS_ID = #clssId:VARCHAR#) -->
<!-- 		                </isNotEmpty> -->
<!-- 		                <isNotEmpty prepend="AND" property="creatSysCd"> -->
<!-- 		                    A.CREAT_SYS_CD = #creatSysCd:VARCHAR# -->
<!-- 		                </isNotEmpty> -->
<!-- 		            </dynamic> -->
<!-- 		            ORDER BY A.ORG_CD, A.CLSS_ID, B.TITLE -->
<!-- 		        ) E -->
<!-- 		        WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER# -->
<!-- 		    ) F -->
<!-- 		    WHERE F.rnum <![CDATA[>=]]> #pagedStart:NUMBER# -->
<!-- 		) G -->
<!-- 		ORDER BY G.rnum -->
		SELECT G.*
		FROM (	
			SELECT F.*
			FROM (
				SELECT ROWNUM AS rnum
				  	  ,E.*
				FROM (		  
					SELECT B.RECORD_ID 
				     	  ,(SELECT ORG_NM FROM TB_STORG D WHERE D.ORG_CD = A.ORG_CD AND D.RECORD_CENTER_ID = A.RECORD_CENTER_ID) AS ORG_NM
				     	  ,(SELECT ORG_ABBR_NM FROM TB_STORG D WHERE D.ORG_CD = A.ORG_CD AND D.RECORD_CENTER_ID = A.RECORD_CENTER_ID) AS ORG_ABBR_NM
				     	  ,A.CLSS_NM
				     	  ,B.TITLE
				     	  ,A.CREAT_YYYY
				     	  ,(SELECT COM_CD_NM FROM TB_ZZCOMCD D WHERE DECODE(A.PRESV_TERM_CD, '20', '25', A.PRESV_TERM_CD) = D.COM_CD AND D.COM_TYPE_CD = 'RD07') AS PRESV_TERM_NM
				     	  ,(SELECT COM_CD_NM FROM TB_ZZCOMCD D WHERE A.CREAT_SYS_CD = D.COM_CD AND D.COM_TYPE_CD = 'RD17') AS CREAT_SYS_NM
				     	  ,(SELECT COUNT(*) FROM TB_RDRECORDDAMGLOSS Z WHERE Z.RECORD_CENTER_ID = B.RECORD_CENTER_ID AND Z.RECORD_ID = B.RECORD_ID AND PROC_CASE = '1' ) AS DAMG_CNT
				     	  ,(SELECT COUNT(*) FROM TB_RDRECORDDAMGLOSS Z WHERE Z.RECORD_CENTER_ID = B.RECORD_CENTER_ID AND Z.RECORD_ID = B.RECORD_ID AND PROC_CASE = '2' ) AS RESTR_CNT
				     	  ,(SELECT COUNT(*) FROM TB_RDRECORDDAMGLOSS Z WHERE Z.RECORD_CENTER_ID = B.RECORD_CENTER_ID AND Z.RECORD_ID = B.RECORD_ID AND PROC_CASE = '3' ) AS LOSE_CNT
				     	  ,(SELECT COUNT(*) FROM TB_RDRECORDDAMGLOSS Z WHERE Z.RECORD_CENTER_ID = B.RECORD_CENTER_ID AND Z.RECORD_ID = B.RECORD_ID AND PROC_CASE = '1' AND DAMG_HANDL_CD = '2' ) AS DAMG_IGWAN_CNT
					FROM TB_RDFOLDER A
						,TB_RDRECORD B
					WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
					AND   A.FOLDER_ID = B.FOLDER_ID
				 	AND   A.FOLDER_KEEP_STATE_CD IN ('01', '04') 
				 	AND   B.ERECORD_FLAG ='2'  
				 	AND   A.RECORD_CENTER_ID = #recordCenterId:VARCHAR#
				<dynamic prepend="AND">
				<isNotEmpty prepend="AND" property="orgCd">
					A.ORG_CD = #orgCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="creatYyyyF">
					(A.CREAT_YYYY BETWEEN #creatYyyyF:VARCHAR# AND #creatYyyyT:VARCHAR#)
				</isNotEmpty>
		        <isNotEmpty property="presvTermCd">
			        <isEqual prepend="AND" property="presvTermCd" compareValue="25">
			            A.PRESV_TERM_CD IN ('20','25')
		            </isEqual>
			        <isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
					A.PRESV_TERM_CD = #presvTermCd:VARCHAR#
		            </isNotEqual>		            
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="title">
					(B.TITLE LIKE #title:VARCHAR# OR B.SUB_TITLE LIKE #title:VARCHAR# OR B.CORCT_TITLE LIKE #title:VARCHAR#)
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="clssId">
					(A.CLSS_DIV_CD= #clssDivCd:VARCHAR# AND A.CLSS_ID = #clssId:VARCHAR#)
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="creatSysCd">
					A.CREAT_SYS_CD = #creatSysCd:VARCHAR#
				</isNotEmpty>
				</dynamic>
					ORDER BY A.ORG_CD, A.CLSS_ID, B.TITLE
				) E
				WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
    		) F
    		WHERE F.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
		) G 
		ORDER BY G.rnum
	</select>
	
	<!-- 
		기록정리_훼손기록정리
		: 훼손내용, 복원처리내용등을 저장한다.(CreateOrUpdate)
	 -->
	 
	<select id="countAdjstDamgRslt" parameterClass="rms.presv.adjst.domain.Adjst" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM TB_RDRECORD_RESTORE WHERE RECORD_CENTER_ID = #recordCenterId:VARCHAR# AND RECORD_ID = #recordId:VARCHAR#
	</select> 
	<insert id="createAdjstDamgRslt" parameterClass="rms.presv.adjst.domain.Adjst">
		INSERT INTO TB_RDRECORD_RESTORE (
			 RECORD_CENTER_ID, RECORD_ID, DAMG_FLAG, DAMG_CONT, DAMG_HANDL_CD
			,DAMG_HANDL_RSLT, RESTR_HANDL_YMD, RESTR_USER_INFO, REG_DTIME, REQUEST_CORP_CD
			,REQUEST_CORP_NM, REQUEST_ORG_CD, REQUEST_ORG_NM, REQUEST_USER_ID, REQUEST_USER_NM
			,REQUEST_USER_POS_RANK_NM 
		) (SELECT #recordCenterId:VARCHAR#, #recordId:VARCHAR#, #damgFlag:VARCHAR#, #damgCont:VARCHAR#, #damgHandlCd:VARCHAR#
			   	 ,#damgHandlRslt:VARCHAR#, #restrHandlYmd:VARCHAR#, #restrUserInfo:VARCHAR#
				 <!--cubrid ,TO_CHAR(SYSDATE,'yyyymmddhh24miss')-->
				 ,TO_CHAR(sys_datetime,'yyyymmddhh24miss')
				 , REQUEST_CORP_CD
			   	 ,REQUEST_CORP_NM, REQUEST_ORG_CD, REQUEST_ORG_NM, REQUEST_USER_ID, REQUEST_USER_NM
			   	 ,REQUEST_USER_POS_RANK_NM 
		   FROM (SELECT HUPPER_ORG_CD AS REQUEST_CORP_CD
          			   ,(SELECT ORG_NM FROM TB_STORG C WHERE C.RECORD_CENTER_ID = B.RECORD_CENTER_ID AND C.ORG_CD = B.HUPPER_ORG_CD) AS REQUEST_CORP_NM
          			   ,DEPT_CD AS REQUEST_ORG_CD
          			   ,ORG_NM AS REQUEST_ORG_NM
          			   ,USER_ID AS REQUEST_USER_ID
          			   ,USER_NM AS REQUEST_USER_NM
          			   ,(CASE WHEN POS IS NOT NULL AND RANK IS NOT NULL THEN POS||'/'||RANK
					          WHEN POS IS NOT NULL AND RANK IS NULL THEN POS
					          WHEN POS IS NULL AND RANK IS NOT NULL THEN RANK
					          ELSE ''
					     END) AS REQUEST_USER_POS_RANK_NM 
                 FROM TB_STUSER A, TB_STORG B 
                 WHERE A.DEPT_CD = B.ORG_CD 
		         AND USER_ID = #userId:VARCHAR#) 
		)
	</insert>
	<update id="updateAdjstDamgRslt" parameterClass="rms.presv.adjst.domain.Adjst">
		UPDATE TB_RDRECORD_RESTORE
		SET DAMG_FLAG 		 	= #damgFlag:VARCHAR#
		      ,DAMG_CONT 	 	= #damgCont:VARCHAR#
		      ,DAMG_HANDL_CD 	= #damgHandlCd:VARCHAR#
		      ,DAMG_HANDL_RSLT 	= #damgHandlRslt:VARCHAR#
		      ,RESTR_HANDL_YMD 	= #restrHandlYmd:VARCHAR#
		      ,RESTR_USER_INFO 	= #restrUserInfo:VARCHAR#
		      <!--cubrid ,REG_DTIME 		= TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')-->
		      ,REG_DTIME 		= TO_CHAR(sys_datetime, 'YYYYMMDDHH24MISS')
		WHERE RECORD_CENTER_ID 	= #recordCenterId:VARCHAR#
		AND RECORD_ID 			= #recordId:VARCHAR#
	</update>
	
	<!-- 
		기록정리_훼손기록정리
		:  훼손상태(훼손여부) 훼손내용 을 조회한다.
	 -->
	<resultMap id="findAdjstDamgStateInfo-result" class="rms.presv.adjst.domain.Adjst">
		<result property="orgNm" 			column="ORG_NM" />				<!-- 생산부서명 -->
		<result property="title"			column="TITLE" />				<!-- 철제목 -->
		<result property="damgFlag" 		column="DAMG_FLAG" />			<!-- 훼손여부 -->
		<result property="damgHandlCd"		column="DAMG_HANDL_CD" />		<!-- 처리방안 -->
		<result property="damgHandlNm"		column="DAMG_HANDL_NM" />		<!-- 처리방안 -->
		<result property="damgCont"			column="DAMG_CONT" />			<!-- 훼손내용 -->
	</resultMap>
	<select id="findAdjstDamgStateInfo" parameterClass="rms.presv.adjst.domain.Adjst" resultMap="findAdjstDamgStateInfo-result">
		SELECT (SELECT ORG_NM FROM TB_STORG C WHERE C.RECORD_CENTER_ID = A.RECORD_CENTER_ID AND C.ORG_CD = A.ORG_CD) AS ORG_NM
			  ,A.TITLE
			  ,B.DAMG_FLAG
			  ,B.DAMG_HANDL_CD
			  ,(SELECT COM_CD_NM FROM TB_ZZCOMCD C WHERE C.COM_TYPE_CD = 'RD33' AND C.COM_CD = B.DAMG_HANDL_CD ) AS DAMG_HANDL_NM
			  ,B.DAMG_CONT
		FROM TB_RDRECORD A, TB_RDRECORD_RESTORE B 
		WHERE A.RECORD_CENTER_ID=#recordCenterId:VARCHAR#
		AND A.RECORD_ID=#recordId:VARCHAR# 
		AND A.RECORD_CENTER_ID=B.RECORD_CENTER_ID
		AND A.RECORD_ID=B.RECORD_ID
	</select>
	
	<!-- 
		기록정리_훼손기록정리
		:  훼손상태(처리여부) 훼손내용 을 조회한다.
	 -->
	<resultMap id="findAdjstDamgRsltInfo-result" class="rms.presv.adjst.domain.Adjst">
		<result property="orgNm" 			column="ORG_NM" />				<!-- 생산부서명 -->
		<result property="title"			column="TITLE" />				<!-- 철제목 -->
		<result property="damgFlag" 		column="DAMG_FLAG" />			<!-- 훼손여부 -->
		<result property="damgHandlCd"		column="DAMG_HANDL_CD" />		<!-- 처리방안 -->
		<result property="damgHandlNm"		column="DAMG_HANDL_NM" />		<!-- 처리방안 -->
		<result property="damgCont"			column="DAMG_CONT" />			<!-- 훼손내용 -->
		<result property="damgHandlRslt"	column="DAMG_HANDL_RSLT" />		<!-- 복원처리내용 -->
		<result property="restrUserInfo"	column="RESTR_USER_INFO" />		<!-- 복원처리자 -->
		<result property="restrHandlYmd"	column="RESTR_HANDL_YMD" />		<!-- 복원처리일자 -->
	</resultMap>
	<select id="findAdjstDamgRsltInfo" parameterClass="rms.presv.adjst.domain.Adjst" resultMap="findAdjstDamgRsltInfo-result">
		SELECT (SELECT C.ORG_NM FROM TB_STORG C WHERE C.RECORD_CENTER_ID = A.RECORD_CENTER_ID AND C.ORG_CD = A.ORG_CD) AS ORG_NM
			  ,TITLE
			  ,NVL(DAMG_FLAG,0)AS DAMG_FLAG
			  ,(SELECT COM_CD_NM FROM TB_ZZCOMCD WHERE COM_TYPE_CD = 'RD33' AND COM_CD = DAMG_HANDL_CD ) AS DAMG_HANDL_NM
			  ,DAMG_CONT
			  ,DAMG_HANDL_CD
			  ,DAMG_HANDL_RSLT
			  ,RESTR_USER_INFO
			  ,RESTR_HANDL_YMD 
		FROM TB_RDRECORD A, TB_RDRECORD_RESTORE B 
		WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID(+) 
		AND A.RECORD_ID=B.RECORD_ID(+) 
		AND A.RECORD_CENTER_ID=#recordCenterId:VARCHAR#
		AND A.RECORD_ID=#recordId:VARCHAR#
	</select>
	
	<resultMap id="adjstDamgInfo-result"	class="rms.presv.adjst.domain.Adjst">
		<result property="orgNm" 			column="ORG_NM" />				<!-- 생산부서명 -->
		<result property="title"			column="TITLE" />				<!-- 철제목 -->
		<result property="procCont" 		column="PROC_CONT" />			<!-- 복원처리내용 -->
		<result property="recordId" 		column="RECORD_ID" />
		<result property="procSno" 			column="PROC_SNO" />
		<result property="damgHandlCd" 		column="DAMG_HANDL_CD" />
		<result property="maxProcSno" 		column="MAX_PROC_SNO" />
		<result property="restrUserInfo"	column="RESTR_USER_INFO" />
		<result property="procHandlYmd" 	column="PROC_HANDL_YMD" />
	</resultMap>
	
	<select id="findAdjstDamgInfo" parameterClass="rms.presv.adjst.domain.Adjst" resultMap="adjstDamgInfo-result">
	SELECT *
	FROM (
			<!--cubrid SELECT (SELECT C.ORG_NM FROM TB_STORG C WHERE C.ORG_CD = A.ORG_CD) AS ORG_NM, -->
                        SELECT ( SELECT C.ORG_NM FROM TB_STORG C , TB_RDRECORD A WHERE C.record_center_id = A.record_id AND C.ORG_CD = A.ORG_CD) AS ORG_NM, 
			       A.TITLE, 
			       B.PROC_CONT,
			       A.RECORD_ID,
			       NVL(B.PROC_SNO,'0') AS PROC_SNO,
			       DAMG_HANDL_CD,
			       NVL(C.MAX_PROC_SNO,'0') AS MAX_PROC_SNO,
			       B.RESTR_USER_INFO,
			       B.PROC_HANDL_YMD   
			FROM TB_RDRECORD A, 
			     (SELECT * 
			      FROM TB_RDRECORDDAMGLOSS 
			      WHERE RECORD_CENTER_ID=#recordCenterId:VARCHAR# 
			      AND RECORD_ID=#recordId:VARCHAR# 
			      AND PROC_CASE = #procCase:VARCHAR#
			<dynamic prepend="AND">
				<isNotEqual prepend="AND" property="procSno" compareValue="0">
					PROC_SNO = #procSno:NUMBER#
				</isNotEqual>
			</dynamic>		      
			      ) B ,
			      (SELECT RECORD_CENTER_ID, RECORD_ID,MAX(PROC_SNO) AS MAX_PROC_SNO
			      FROM TB_RDRECORDDAMGLOSS 
			      WHERE RECORD_CENTER_ID=#recordCenterId:VARCHAR# 
			      AND RECORD_ID=#recordId:VARCHAR# 
			      AND PROC_CASE = #procCase:VARCHAR#	
			      GROUP BY RECORD_CENTER_ID, RECORD_ID				      
			      ) C
		    WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID(+) 
		    AND A.RECORD_ID=B.RECORD_ID(+) 
		    AND A.RECORD_CENTER_ID = C.RECORD_CENTER_ID(+)
            AND A.RECORD_ID = C.RECORD_ID(+)
		    AND A.RECORD_CENTER_ID=#recordCenterId:VARCHAR#
	        AND A.RECORD_ID=#recordId:VARCHAR#
		    ORDER BY PROC_SNO DESC 
		  )
	WHERE ROWNUM = 1
	</select>
	
	<!-- 
		기록정리_비전자편철
		: 기록물철 목록을 조회한다.
	 -->
	<resultMap id="findAdjstLabelPagedList-result" class="rms.presv.adjst.domain.Adjst">
		<result property="orgCd" 			column="ORG_CD" />				<!-- 생산부서 -->
		<result property="orgNm" 			column="ORG_NM" />				<!-- 생산부서명 -->
		<result property="orgAbbrNm"		column="ORG_ABBR_NM" />			<!-- 생산부서명 -->
		<result property="creatYyyy"		column="CREAT_YYYY" />			<!-- 생산년도 -->
		<result property="title"			column="TITLE" />				<!-- 철제목 -->
		<result property="presvTermNm"		column="PRESV_TERM_NM" />		<!-- 보존기간명 -->
		<result property="folderId" 		column="FOLDER_ID" />			<!-- 기록물철ID -->
		<result property="creatSysNm"		column="CREAT_SYS_NM" />		<!-- 생산시스템명 -->
		<result property="folderType"		column="FOLDER_TYPE_DIV_CD" />	<!-- 기록물형태 -->
		<result property="mngNo"			column="MNG_No" />				<!-- 관리번호 -->
	</resultMap>
	<select id="countAdjstLabelPagedList" parameterClass="rms.presv.adjst.domain.Adjst" resultClass="java.lang.Long">
		SELECT COUNT(1)
        FROM TB_RDFOLDER A
        WHERE A.RECORD_CENTER_ID = #recordCenterId:VARCHAR#
        AND A.FOLDER_KEEP_STATE_CD IN ('01', '04')
        AND A.ERECORD_FLAG IN ('2','3')
        <dynamic prepend="AND">
            <isNotEmpty prepend="AND" property="orgCd">
                A.ORG_CD = #orgCd:VARCHAR#
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="creatYyyyF">
                <isEmpty property="creatYyyyT">
               		A.CREAT_YYYY <![CDATA[>=]]> #creatYyyyF:VARCHAR#
               	</isEmpty>
               	<isNotEmpty property="creatYyyyT">
               		(A.CREAT_YYYY BETWEEN #creatYyyyF:VARCHAR# AND #creatYyyyT:VARCHAR#)
               	</isNotEmpty>
            </isNotEmpty>
	        <isNotEmpty property="presvTermCd">
		        <isEqual prepend="AND" property="presvTermCd" compareValue="25">
		            A.PRESV_TERM_CD IN ('20','25')
	            </isEqual>
		        <isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
                A.PRESV_TERM_CD = #presvTermCd:VARCHAR#
	            </isNotEqual>		            
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="title">
                (A.TITLE LIKE #title:VARCHAR# OR A.SUB_TITLE LIKE #title:VARCHAR# OR A.CORCT_TITLE LIKE #title:VARCHAR#)
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="clssId">
                (A.CLSS_DIV_CD= #clssDivCd:VARCHAR# AND A.CLSS_ID = #clssId:VARCHAR#)
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="creatSysCd">
                A.CREAT_SYS_CD = #creatSysCd:VARCHAR#
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="regDtimeF">
                (SUBSTR(A.REG_DTIME,1,8) BETWEEN #regDtimeF:VARCHAR# AND #regDtimeT:VARCHAR#)
            </isNotEmpty>
        </dynamic>
	</select>
	<select id="findAdjstLabelPagedList" parameterClass="rms.presv.adjst.domain.Adjst" resultMap="findAdjstLabelPagedList-result">
		SELECT D.org_cd
		      ,(SELECT Z.org_nm FROM TB_STORG Z WHERE Z.record_center_id = D.record_center_id AND Z.org_cd = D.org_cd) AS org_nm
		      ,(SELECT Z.org_abbr_nm FROM TB_STORG Z WHERE Z.record_center_id = D.record_center_id AND Z.org_cd = D.org_cd) AS org_abbr_nm
		      ,D.creat_yyyy
		      ,D.title
		      ,(SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd = 'RD07' AND Z.com_cd = DECODE(D.presv_term_cd, '20', '25', D.presv_term_cd)) AS presv_term_nm
		      ,D.folder_id
		      ,D.take_yyyy||'-'||TRIM(TO_CHAR(D.take_yyyy_sno, '0000000000')) AS mng_no
		      ,(SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd = 'RD17' AND Z.com_cd = D.creat_sys_cd) AS creat_sys_nm
		      ,D.folder_type_div_cd
		FROM (
		    SELECT C.*
		    FROM (
		        SELECT ROWNUM AS rnum
		              ,B.*
		        FROM (
		            SELECT A.*
		            FROM TB_RDFOLDER A
		            WHERE A.RECORD_CENTER_ID = #recordCenterId:VARCHAR#
		            AND A.FOLDER_KEEP_STATE_CD IN ('01', '04')
		            AND A.ERECORD_FLAG IN ('2','3')
		            <dynamic prepend="AND">
		                <isNotEmpty prepend="AND" property="orgCd">
		                    A.ORG_CD = #orgCd:VARCHAR#
		                </isNotEmpty>
		                <isNotEmpty prepend="AND" property="creatYyyyF">
		                	<isEmpty property="creatYyyyT">
		                		A.CREAT_YYYY <![CDATA[>=]]> #creatYyyyF:VARCHAR#
		                	</isEmpty>
		                	<isNotEmpty property="creatYyyyT">
		                		(A.CREAT_YYYY BETWEEN #creatYyyyF:VARCHAR# AND #creatYyyyT:VARCHAR#)
		                	</isNotEmpty>
		                </isNotEmpty>
				        <isNotEmpty property="presvTermCd">
					        <isEqual prepend="AND" property="presvTermCd" compareValue="25">
					            A.PRESV_TERM_CD IN ('20','25')
				            </isEqual>
					        <isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
		                    A.PRESV_TERM_CD = #presvTermCd:VARCHAR#
				            </isNotEqual>		            
		                </isNotEmpty>
		                <isNotEmpty prepend="AND" property="title">
		                    (A.TITLE LIKE #title:VARCHAR# OR A.SUB_TITLE LIKE #title:VARCHAR# OR A.CORCT_TITLE LIKE #title:VARCHAR#)
		                </isNotEmpty>
		                <isNotEmpty prepend="AND" property="clssId">
		                    (A.CLSS_DIV_CD= #clssDivCd:VARCHAR# AND A.CLSS_ID = #clssId:VARCHAR#)
		                </isNotEmpty>
		                <isNotEmpty prepend="AND" property="creatSysCd">
		                    A.CREAT_SYS_CD = #creatSysCd:VARCHAR#
		                </isNotEmpty>
		                <isNotEmpty prepend="AND" property="regDtimeF">
		                    (SUBSTR(A.REG_DTIME,1,8) BETWEEN #regDtimeF:VARCHAR# AND #regDtimeT:VARCHAR#)
		                </isNotEmpty>
		            </dynamic>
		            ORDER BY A.ORG_CD, A.CLSS_ID, A.TITLE
		        ) B
		        WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
		    ) C
		    WHERE C.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
		) D
		ORDER BY D.rnum
	</select>
	
	<!-- 
		기록정리_비전자편철
		: 표지 대상 목록을 조회한다.
	 -->
	<resultMap id="findPrintDocCoverLabel-result" class="rms.presv.adjst.domain.Adjst">
		<result property="folderId" 		column="FOLDER_ID" />			<!-- 기록물철ID -->
		<result property="title"			column="TITLE" />				<!-- 철제목 -->
		<result property="orgCd"			column="ORG_CD" />				<!-- 기관코드 -->
		<result property="clssId"			column="CLSS_ID" />				<!-- 분류체계ID -->
		<result property="folderRegSeq"		column="FOLDER_REG_SEQ" />		<!-- 생산일련번호 -->
		<result property="hoNo" 			column="HO_NO" />				<!-- 권호수 -->
		<result property="creatYyyy" 		column="CREAT_YYYY" />			<!-- 생산년도 -->
		<result property="endYyyy" 			column="END_YYYY" />			<!-- 종료년도 -->
		<result property="orgNm" 			column="ORG_NM" />				<!-- 생산부서명 -->
		<result property="hoNoCnt"			column="HO_NO_CNT" />			<!-- 권호수 카운트 -->
		<result property="creatSysCd"	column="CREAT_SYS_CD" />    	   	<!-- 생산시스템코드 -->
	</resultMap>
	<select id="findPrintDocCoverLabel" parameterClass="rms.presv.adjst.domain.Adjst" resultMap="findPrintDocCoverLabel-result">
		SELECT A.CREAT_SYS_CD
			 , A.FOLDER_ID
		     , A.TITLE
			 , A.ORG_CD
			 , A.CLSS_ID
			 , A.FOLDER_REG_SEQ
			 , A.CREAT_YYYY
			 , A.HO_NO
			 , SUBSTR(A.FOLDER_CLOSE_DTIME,1,4) END_YYYY
			 , (SELECT B.ORG_NM
				  FROM TB_STORG B
				 WHERE A.ORG_CD = B.ORG_CD
				   AND A.RECORD_CENTER_ID = B.RECORD_CENTER_ID) ORG_NM
			 , (SELECT COUNT(HO_NO)
		      FROM TB_RDFOLDER
		      WHERE CREAT_SYS_CD = A.CREAT_SYS_CD
		      AND ORG_CD = A.ORG_CD
		      AND CLSS_ID = A.CLSS_ID
		      AND CREAT_YYYY = A.CREAT_YYYY
		      AND FOLDER_REG_SEQ = A.FOLDER_REG_SEQ) HO_NO_CNT
		FROM TB_RDFOLDER A
		WHERE A.RECORD_CENTER_ID = #recordCenterId:VARCHAR#
		AND A.FOLDER_ID = #folderId:VARCHAR#
	</select>
	
	<!-- 
		기록정리_비전자편철
		: 기록물철 형태를 조회한다.
	 -->
	<resultMap id="findPrintDocListLabelTypeList-result" class="rms.presv.adjst.domain.Adjst">
		<result property="folderType" 		column="FOLDER_TYPE_DIV_CD" />			<!-- 기록물철형태 -->
	</resultMap>
	<select id="findPrintDocListLabelTypeList" parameterClass="rms.presv.adjst.domain.Adjst" resultMap="findPrintDocListLabelTypeList-result">
		SELECT A.FOLDER_TYPE_DIV_CD
		FROM TB_RDFOLDER A
		WHERE A.RECORD_CENTER_ID = #recordCenterId:VARCHAR#
		AND A.FOLDER_ID = #folderId:VARCHAR#
	</select>
	
	<!-- 
		기록정리_비전자편철
		: 헤더정보를 조회한다.
	 -->
	<resultMap id="findPrintDocListLabelHead-result" class="rms.presv.adjst.domain.Adjst">
		<result property="folderId" 		column="FOLDER_ID" />
		<result property="orgCd" 			column="org_cd" />
		<result property="clssId" 			column="clss_id" />
		<result property="creatYyyy" 		column="creat_yyyy" />
		<result property="folderRegSeq" 	column="folder_reg_seq" />
		<result property="hoNo" 			column="ho_no" />
		<result property="title" 			column="TITLE" />
		<result property="creatYyyy" 		column="CREAT_YYYY" />
		<result property="folderTypeDivCd" 	column="FOLDER_TYPE_DIV_CD" />
	</resultMap>
	<select id="findPrintDocListLabelHead" parameterClass="rms.presv.adjst.domain.Adjst" resultMap="findPrintDocListLabelHead-result">
		SELECT FOLDER_ID
		      ,org_cd
		      ,clss_id
		      ,creat_yyyy
		      ,folder_reg_seq
		      ,ho_no
		      ,TITLE
			  ,CREAT_YYYY
			  ,FOLDER_TYPE_DIV_CD
		FROM TB_RDFOLDER
		WHERE RECORD_CENTER_ID = #recordCenterId:VARCHAR#
		AND FOLDER_ID = #folderId:VARCHAR#
	</select>
	
	<resultMap id="findPrintDocListLabel_Type1List-result"		class="rms.presv.adjst.domain.Adjst">
		<result property="regDtimeF" 			column="CREAT_REG_DTIME" />
		<result property="recordId" 			column="RECORD_ID" />
		<result property="docTitle" 			column="TITLE" />
		<result property="docReceiver" 			column="RECVER" />
		<result property="docSender" 			column="SENDER" />
		<result property="pageCnt" 				column="RECORD_PAGE_CNT" />
		<result property="electFlag" 			column="ERECORD_FLAG" />
	</resultMap>
	<select id="findPrintDocListLabel_Type1List" parameterClass="rms.presv.adjst.domain.Adjst" resultMap="findPrintDocListLabel_Type1List-result">
		SELECT to_char(to_date(A.CREAT_REG_DTIME,'YYYYMMDDHH24MISS'),'YYYY.MM.DD') CREAT_REG_DTIME
		     , DECODE(A.CREAT_SYS_CD,'02',A.CREAT_SYS_CD||'-'||SUBSTR(A.CREAT_REG_NO,0,7)||'-'||SUBSTR(A.CREAT_REG_NO,8,6),
		              '05',A.CREAT_SYS_CD||'-'||SUBSTR(A.CREAT_REG_NO,0,7)||'-'||SUBSTR(A.CREAT_REG_NO,8,6),
		              A.CREAT_SYS_CD||'-'||A.ORG_CD||'-'||SUBSTR(A.CREAT_REG_NO,8,6))
		              RECORD_ID
			 , A.TITLE
			 , A.RECVER
			 , A.SENDER
			 , A.RECORD_PAGE_CNT
			 , DECODE(A.ERECORD_FLAG, '1','전자','2','비전자','') ERECORD_FLAG
		  FROM TB_RDRECORD A
		 WHERE A.RECORD_CENTER_ID = #recordCenterId:VARCHAR#
		   AND A.FOLDER_ID = #folderId:VARCHAR#
		ORDER BY A.record_center_id, A.creat_reg_dtime, A.creat_reg_no
	</select>
	<resultMap id="findPrintDocListLabel_Type2List-result" class="rms.presv.adjst.domain.Adjst">
		<result property="recordId" 			column="RECORD_ID" />
		<result property="docTitle" 			column="TITLE" />
		<result property="sumry" 				column="AUDVIS_RECORD_SUMRY" jdbcType="CLOB" javaType="java.lang.String" />
		<result property="comCd" 				column="COM_CD_NM" />
	</resultMap>
	<select id="findPrintDocListLabel_Type2List" parameterClass="rms.presv.adjst.domain.Adjst" resultMap="findPrintDocListLabel_Type2List-result">
		SELECT DECODE(A.CREAT_SYS_CD,'02',A.CREAT_SYS_CD||'-'||SUBSTR(A.CREAT_REG_NO,0,7)||'-'||SUBSTR(A.CREAT_REG_NO,8,6),
		              '05',A.CREAT_SYS_CD||'-'||SUBSTR(A.CREAT_REG_NO,0,7)||'-'||SUBSTR(A.CREAT_REG_NO,8,6),
		              A.CREAT_SYS_CD||'-'||A.ORG_CD||'-'||SUBSTR(A.CREAT_REG_NO,8,6))
		              RECORD_ID
		     , A.TITLE
			 , A.AUDVIS_RECORD_SUMRY
			 , B.COM_CD_NM
		  FROM TB_RDRECORD A, TB_ZZCOMCD B
		 WHERE A.RECORD_CENTER_ID = #recordCenterId:VARCHAR#
		   AND A.FOLDER_ID = #folderId:VARCHAR#
		   AND (A.AUDVIS_RECORD_TYPE = B.COM_CD and B.COM_TYPE_CD = 'RD04')
		ORDER BY A.record_center_id, A.creat_reg_dtime, A.creat_reg_no
	</select>
	<resultMap id="findPrintDocListLabel_Type3List-result"		class="rms.presv.adjst.domain.Adjst">
		<result property="recordId" 			column="RECORD_ID" />
		<result property="docTitle" 			column="TITLE" />
		<result property="sumry" 				column="AUDVIS_RECORD_SUMRY"	jdbcType="CLOB"	javaType="java.lang.String" />
	</resultMap>
	<select id="findPrintDocListLabel_Type3List" parameterClass="rms.presv.adjst.domain.Adjst" resultMap="findPrintDocListLabel_Type3List-result">
		SELECT DECODE(A.CREAT_SYS_CD,'02',A.CREAT_SYS_CD||'-'||SUBSTR(A.CREAT_REG_NO,0,7)||'-'||SUBSTR(A.CREAT_REG_NO,8,6),
		              '05',A.CREAT_SYS_CD||'-'||SUBSTR(A.CREAT_REG_NO,0,7)||'-'||SUBSTR(A.CREAT_REG_NO,8,6),
		              A.CREAT_SYS_CD||'-'||A.ORG_CD||'-'||SUBSTR(A.CREAT_REG_NO,8,6))
		              RECORD_ID
		     , A.TITLE
			 , A.AUDVIS_RECORD_SUMRY
		  FROM TB_RDRECORD A
		 WHERE A.RECORD_CENTER_ID = #recordCenterId:VARCHAR#
		   AND A.FOLDER_ID = #folderId:VARCHAR#
		ORDER BY A.record_center_id, A.creat_reg_dtime, A.creat_reg_no
	</select>
	<resultMap id="findPrintDocListLabel_Type4List-result"		class="rms.presv.adjst.domain.Adjst">
		<result property="recordId" 			column="RECORD_ID" />
		<result property="docTitle" 			column="TITLE" />
		<result property="pageCnt" 				column="RECORD_PAGE_CNT" />
		<result property="electFlag" 			column="ERECORD_FLAG" />
	</resultMap>
	<select id="findPrintDocListLabel_Type4List" parameterClass="rms.presv.adjst.domain.Adjst" resultMap="findPrintDocListLabel_Type4List-result">
		SELECT DECODE(A.CREAT_SYS_CD,'02',A.CREAT_SYS_CD||'-'||SUBSTR(A.CREAT_REG_NO,0,7)||'-'||SUBSTR(A.CREAT_REG_NO,8,6),
		              '05',A.CREAT_SYS_CD||'-'||SUBSTR(A.CREAT_REG_NO,0,7)||'-'||SUBSTR(A.CREAT_REG_NO,8,6),
		              A.CREAT_SYS_CD||'-'||A.ORG_CD||'-'||SUBSTR(A.CREAT_REG_NO,8,6))
		              RECORD_ID
		     , A.TITLE
			 , A.RECORD_PAGE_CNT
			 , DECODE(A.ERECORD_FLAG, '1','전자','2','비전자','')	 ERECORD_FLAG
		  FROM TB_RDRECORD A
		 WHERE A.RECORD_CENTER_ID = #recordCenterId:VARCHAR#
		   AND A.FOLDER_ID = #folderId:VARCHAR#
		ORDER BY A.record_center_id, A.creat_reg_dtime, A.creat_reg_no
	</select>
	
	<update id="updateAdjstLoseRslt" parameterClass="rms.presv.adjst.domain.Adjst">
		UPDATE TB_RDRECORDDAMGLOSS
		   SET DAMG_HANDL_CD = #damgHandlCd:VARCHAR#
		     , PROC_CONT = #procCont:VARCHAR#
		     , RESTR_USER_INFO = #restrUserInfo:VARCHAR#
		     , PROC_HANDL_YMD = #procHandlYmd:VARCHAR#
		     , PROC_CORP_CD = (SELECT HUPPER_ORG_CD FROM TB_STUSER A,TB_STORG B WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID AND A.DEPT_CD = B.ORG_CD AND USER_ID = #userId:VARCHAR#)
		     , PROC_CORP_NM = (SELECT (SELECT FULL_ORG_NM FROM TB_STORG C WHERE C.RECORD_CENTER_ID = B.RECORD_CENTER_ID AND C.ORG_CD = B.HUPPER_ORG_CD ) AS PROC_CORP_NM FROM TB_STUSER A, TB_STORG B WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID AND A.DEPT_CD = B.ORG_CD AND USER_ID = #userId:VARCHAR#)
		     , PROC_ORG_CD = (SELECT DEPT_CD FROM TB_STUSER A,TB_STORG B WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID AND A.DEPT_CD = B.ORG_CD AND USER_ID = #userId:VARCHAR#)
		     , PROC_ORG_NM = (SELECT FULL_ORG_NM FROM TB_STUSER A,TB_STORG B WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID AND A.DEPT_CD = B.ORG_CD AND USER_ID = #userId:VARCHAR#)
		     , PROC_USER_ID = #userId:VARCHAR#
		     , PROC_USER_NM = (SELECT USER_NM FROM TB_STUSER A,TB_STORG B WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID AND A.DEPT_CD = B.ORG_CD AND USER_ID = #userId:VARCHAR#)
		     , PROC_USER_POS_RANK_NM =  (SELECT  (CASE WHEN POS IS NULL AND RANK IS NULL THEN ''
                                  WHEN POS IS NULL AND RANK IS NOT NULL THEN RANK
                                  WHEN POS IS NOT NULL AND RANK IS NULL THEN POS
                                  ELSE POS||'/'||RANK
                             END) FROM TB_STUSER A,TB_STORG B WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID AND A.DEPT_CD = B.ORG_CD AND USER_ID = #userId:VARCHAR#)
		 WHERE RECORD_ID = #recordId:VARCHAR#
		   AND RECORD_CENTER_ID = #recordCenterId:VARCHAR#
		   AND PROC_CASE = #procCase:VARCHAR#
		   AND PROC_SNO = #procSno:NUMBER#
	</update>
	
	<!-- Insert//훼손기록정리 저장 -->
	<insert id="InsertAdjstDamgRslt" parameterClass="rms.presv.adjst.domain.Adjst">
		INSERT INTO TB_RDRECORDDAMGLOSS
		(
			RECORD_CENTER_ID,
			RECORD_ID,
			PROC_CASE,
			PROC_SNO,
			DAMG_HANDL_CD,
			PROC_CONT,
			RESTR_USER_INFO,
			PROC_HANDL_YMD,
			REG_DTIME,
			PROC_CORP_CD,
			PROC_CORP_NM,
			PROC_ORG_CD,
			PROC_ORG_NM,
			PROC_USER_ID,
			PROC_USER_NM,
			PROC_USER_POS_RANK_NM
		) 
       (SELECT #recordCenterId:VARCHAR#, 
              #recordId:VARCHAR#, 
              #procCase:VARCHAR#, 
              ( SELECT NVL(MAX(PROC_SNO), 0) + 1 FROM TB_RDRECORDDAMGLOSS WHERE RECORD_CENTER_ID = #recordCenterId:VARCHAR#	AND RECORD_ID = #recordId:VARCHAR# AND PROC_CASE = #procCase:VARCHAR#), 
              #damgHandlCd:VARCHAR#, 
              #procCont:VARCHAR#,
              #restrUserInfo:VARCHAR#, 
              #procHandlYmd:VARCHAR#,
              <!--cubrid TO_CHAR(SYSDATE,'yyyymmddhh24miss'), -->
              TO_CHAR(sys_datetime,'yyyymmddhh24miss'), 
              PROC_CORP_CD,
			  PROC_CORP_NM,
			  PROC_ORG_CD,
			  PROC_ORG_NM,
			  PROC_USER_ID,
			  PROC_USER_NM,
			  PROC_USER_POS_RANK_NM
         FROM 
              (SELECT HUPPER_ORG_CD AS PROC_CORP_CD, 
                     (SELECT FULL_ORG_NM 
                       FROM TB_STORG C 
                      WHERE C.RECORD_CENTER_ID = B.RECORD_CENTER_ID
                        AND C.ORG_CD = B.HUPPER_ORG_CD 
                     ) AS PROC_CORP_NM, 
                     DEPT_CD AS PROC_ORG_CD, 
                     FULL_ORG_NM AS PROC_ORG_NM, 
                     USER_ID AS PROC_USER_ID, 
                     USER_NM AS PROC_USER_NM, 
                     (CASE WHEN POS IS NULL AND RANK IS NULL THEN ''
                                  WHEN POS IS NULL AND RANK IS NOT NULL THEN RANK
                                  WHEN POS IS NOT NULL AND RANK IS NULL THEN POS
                                  ELSE POS||'/'||RANK
                             END) AS PROC_USER_POS_RANK_NM 
                FROM TB_STUSER A, 
                     TB_STORG B 
               WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
                     AND A.DEPT_CD = B.ORG_CD 
                     AND USER_ID = #userId:VARCHAR# 
              ) 
       )
	</insert>
	
	
</sqlMap>
