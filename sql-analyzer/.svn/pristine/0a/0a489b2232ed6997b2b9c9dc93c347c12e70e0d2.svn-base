Read(log) : C:\eclipse\workspace\SqlMapXMLParser\rmsCubrid_daemon\xml\sqlMap-RecordSchema.xml

SelectRecordInfoMap
Syntax: In line 7, column 2710 before '( ###'1'RECORD_ID:VARCHAR#	;'
Syntax error: unexpected 'cast', expecting SELECT or VALUE or VALUES or '(' [CAS INFO-127.0.0.1:54330,1,14011],[SESSION-54],[URL-jdbc:cubrid:127.0.0.1:54330:rms:dba:********:].


-- Filename : C:\eclipse\workspace\SqlMapXMLParser\rmsCubrid_daemon\xml\sqlMap-RecordSchema.xml
-- Query    : select
-- Query Id : SelectRecordInfoMap

		SELECT A.RECORD_CENTER_ID		    , A.RECORD_ID		    , A.FOLDER_ID		    , A.CREAT_SYS_CD||'-'||A.ORG_CD||'-'||A.CREAT_YYYY||'-'		    		||(CASE WHEN A.CREAT_SYS_CD = '01' OR A.CREAT_SYS_CD = '04' THEN A.CREAT_REG_NO ELSE SUBSTR(A.CREAT_REG_NO, 8, 6) END)		            ||(CASE WHEN A.DTCH_REG_NO != '00' THEN ' ('||A.DTCH_REG_NO||')'		                    WHEN (SELECT COUNT(1) FROM TB_RDRECORD B WHERE B.RECORD_CENTER_ID=A.RECORD_CENTER_ID AND B.CREAT_SYS_CD=A.CREAT_SYS_CD AND B.ORG_CD=A.ORG_CD AND B.CREAT_YYYY=A.CREAT_YYYY AND B.CREAT_REG_NO=A.CREAT_REG_NO) > 1 THEN ' ('||A.DTCH_REG_NO||')'		               ELSE '' END) AS RECORD_KEY		    , A.CREAT_SYS_RECORD_ID		    , (SELECT Z.HUPPER_ORG_CD FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID=A.RECORD_CENTER_ID AND Z.ORG_CD=A.ORG_CD) AS RECORD_CENTER_ORG_CD		    , (SELECT (SELECT Y.FULL_ORG_NM FROM TB_STORG Y WHERE Y.RECORD_CENTER_ID=Z.RECORD_CENTER_ID AND Y.ORG_CD=Z.HUPPER_ORG_CD) FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID=A.RECORD_CENTER_ID AND Z.ORG_CD=A.ORG_CD) AS RECORD_CENTER_ORG_NM		    , A.ORG_CD		    , (SELECT Z.FULL_ORG_NM FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID=A.RECORD_CENTER_ID AND Z.ORG_CD=A.ORG_CD) AS ORG_NM		    , A.ORG_TITLE as TITLE		    , A.SUB_TITLE		    , A.CORCT_TITLE		    , A.ERECORD_FLAG		    , (CASE WHEN A.ERECORD_FLAG='1' THEN '전자기록물' WHEN A.ERECORD_FLAG='2' THEN '비전자기록물' WHEN A.ERECORD_FLAG='3' THEN '혼합기록물' ELSE '' END) AS ERECORD_NM		    , A.OPER_READ_RANGE_CD    	    , (SELECT Z.COM_CD_NM FROM TB_ZZCOMCD Z WHERE Z.COM_TYPE_CD='RD53' AND Z.COM_CD=A.OPER_READ_RANGE_CD) AS OPER_READ_RANGE_NM    	    , A.OPEN_DIV_CD            , (SELECT Z.COM_CD_NM FROM TB_ZZCOMCD Z WHERE Z.COM_TYPE_CD='RD05' AND Z.COM_CD=A.OPEN_DIV_CD) AS OPEN_DIV_NM            , A.OPEN_GRADE            , (CASE WHEN SUBSTR(A.OPEN_GRADE,1,1) = 'Y' THEN '1호,' ELSE '' END) ||              (CASE WHEN SUBSTR(A.OPEN_GRADE,2,1) = 'Y' THEN '2호,' ELSE '' END) ||              (CASE WHEN SUBSTR(A.OPEN_GRADE,3,1) = 'Y' THEN '3호,' ELSE '' END) ||              (CASE WHEN SUBSTR(A.OPEN_GRADE,4,1) = 'Y' THEN '4호,' ELSE '' END) ||              (CASE WHEN SUBSTR(A.OPEN_GRADE,5,1) = 'Y' THEN '5호,' ELSE '' END) ||              (CASE WHEN SUBSTR(A.OPEN_GRADE,6,1) = 'Y' THEN '6호,' ELSE '' END) ||              (CASE WHEN SUBSTR(A.OPEN_GRADE,7,1) = 'Y' THEN '7호,' ELSE '' END) ||              (CASE WHEN SUBSTR(A.OPEN_GRADE,8,1) = 'Y' THEN '8호,' ELSE '' END) AS OPEN_GRADE_NM            , A.PART_OPEN_RSN            , A.OPEN_LIMIT_PART						 , cast(A.OPEN_EXPT_DTIME AS datetime) AS OPEN_EXPT_DTIME			            , (CASE WHEN A.PROD_TYPE_CD IS NOT NULL THEN A.PROD_TYPE_CD ELSE (CASE WHEN A.RECORD_REG_DIV_CD IN ('1','3','5','6','7','8') THEN '0' ELSE '1' END) END) AS PROD_TYPE_CD            , (CASE WHEN A.PROD_TYPE_CD IS NOT NULL THEN DECODE(A.PROD_TYPE_CD,'0','생산','접수') ELSE (CASE WHEN A.RECORD_REG_DIV_CD IN ('1','3','5','6','7','8') THEN '생산' ELSE '접수' END) END) AS PROD_TYPE_NM						cast( ###'1'RECORD_ID:VARCHAR#	;

SelectArrCreatorCon
Semantic: before ' )) AS SORT		FROM  TB_RDRECORDCREAT A		WHERE A.RECORD_CENTER_I...'
Nested or invalid use of aggregate function. select [A].[AGENT_TYPE_CD], (select [Z].[COM_CD_NM] from [TB_ZZCOMCD] [Z] where [Z].[COM_CD]=[A].[AGENT_TYPE_CD] and [Z].[COM_TYPE_CD]= ?:19 ), (select (select [Y].[FULL_ORG_NM] from [TB_STORG] [Y] where [Y].[RECORD_CENTER_ID]=[Z].[RECORD_CENTER_ID] and [Y].[ORG_CD]=[Z].[HUPPER_ORG_CD]) from [TB_STORG] [Z] where [Z].[RECORD_CENTER_ID]=[A].[RECORD_CENTER_ID] and [Z].[ORG_CD]=[A].[AGENT_ORG_CD]), (select [Z].[HUPPER_ORG_CD] from [TB_STORG] [Z] where [Z].[RECORD_CENTER_ID]=[A].[RECORD_CENTER_ID] and [Z].[ORG_CD]=[A].[AGENT_ORG_CD]), nvl(case when [A].[AGENT_ORG_CD] is null  then [A].[AGENT_ORG_NM] else (select [Z].[FULL_ORG_NM] from [TB_STORG] [Z] where [Z].[RECORD_CENTER_ID]=[A].[RECORD_CENTER_ID] and [Z].[ORG_CD]=[A].[AGENT_ORG_CD]) end, [A].[AGENT_ORG_NM]), [A].[AGENT_ORG_CD], [A].[AGENT_NM], [A].[AGENT_ID], [A].[AGENT_POS_RANK_NM],  trim(both  from  to_char(row_number() over (par[CAS INFO-127.0.0.1:54330,1,14011],[SESSION-54],[URL-jdbc:cubrid:127.0.0.1:54330:rms:dba:********:].


-- Filename : C:\eclipse\workspace\SqlMapXMLParser\rmsCubrid_daemon\xml\sqlMap-RecordSchema.xml
-- Query    : select
-- Query Id : SelectArrCreatorCon

		SELECT A.AGENT_TYPE_CD		    , (SELECT Z.COM_CD_NM FROM TB_ZZCOMCD Z WHERE Z.COM_TYPE_CD='RD12' AND Z.COM_CD=A.AGENT_TYPE_CD) AS AGENT_TYPE_NM		    , (SELECT (SELECT Y.FULL_ORG_NM FROM TB_STORG Y WHERE Y.RECORD_CENTER_ID=Z.RECORD_CENTER_ID AND Y.ORG_CD=Z.HUPPER_ORG_CD) FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID=A.RECORD_CENTER_ID AND Z.ORG_CD=A.AGENT_ORG_CD) AS HUPPER_ORG_NM		    , (SELECT Z.HUPPER_ORG_CD FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID=A.RECORD_CENTER_ID AND Z.ORG_CD=A.AGENT_ORG_CD) AS HUPPER_ORG_CD		    , NVL(CASE WHEN A.AGENT_ORG_CD IS NULL THEN A.AGENT_ORG_NM 		               ELSE (SELECT Z.FULL_ORG_NM FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID = A.RECORD_CENTER_ID AND Z.ORG_CD = A.AGENT_ORG_CD)		          END, A.AGENT_ORG_NM) AS AGENT_ORG_NM		    , A.AGENT_ORG_CD		    , A.AGENT_NM		    , A.AGENT_ID		    , A.AGENT_POS_RANK_NM		    , TRIM(TO_CHAR(ROW_NUMBER() OVER (PARTITION BY AGENT_TYPE_CD ORDER BY AGENT_TYPE_CD, AGENT_SNO DESC))) AS SORT		FROM  TB_RDRECORDCREAT A		WHERE A.RECORD_CENTER_ID = '1'		AND   A.RECORD_ID = '1'		AND   (A.AGENT_TYPE_CD IN ('01','02','03','05','06','08','09','22') OR (A.AGENT_TYPE_CD = '28' AND (AGENT_DUTY_TYPE_CD != '07' OR AGENT_DUTY_TYPE_CD IS NULL)))		ORDER BY A.AGENT_SNO	;

SelectArrDescriptionCon
No statement to execute.[CAS INFO-127.0.0.1:54330,1,14011],[SESSION-54],[URL-jdbc:cubrid:127.0.0.1:54330:rms:dba:********:].


-- Filename : C:\eclipse\workspace\SqlMapXMLParser\rmsCubrid_daemon\xml\sqlMap-RecordSchema.xml
-- Query    : select
-- Query Id : SelectArrDescriptionCon

;

SelectArrSubjectCon
No statement to execute.[CAS INFO-127.0.0.1:54330,1,14011],[SESSION-54],[URL-jdbc:cubrid:127.0.0.1:54330:rms:dba:********:].


-- Filename : C:\eclipse\workspace\SqlMapXMLParser\rmsCubrid_daemon\xml\sqlMap-RecordSchema.xml
-- Query    : select
-- Query Id : SelectArrSubjectCon

;

SelectStorageCon_ExtentCon
Syntax: In line 7, column 2229 before END OF STATEMENT
Syntax error: unexpected ';', expecting ')' [CAS INFO-127.0.0.1:54330,1,14011],[SESSION-54],[URL-jdbc:cubrid:127.0.0.1:54330:rms:dba:********:].


-- Filename : C:\eclipse\workspace\SqlMapXMLParser\rmsCubrid_daemon\xml\sqlMap-RecordSchema.xml
-- Query    : select
-- Query Id : SelectStorageCon_ExtentCon

        SELECT TO_CHAR(NVL(SUM(EFILE_SUB_CNT),0)) AS EFILE_SUB_CNT            , TO_CHAR(NVL(SUM(EFILE_SIZE),0)) AS EFILE_SIZE            , TO_CHAR(NVL(SUM(RECORD_PAGE_CNT),0)) AS RECORD_PAGE_CNT            , TO_CHAR(NVL(SUM(EFILE_CNT),0)) AS EFILE_CNT            , TO_CHAR(NVL(SUM(PDF_A1_FILE_CNT),0)) AS PDF_A1_FILE_CNT        FROM (            (                SELECT COUNT(1) AS EFILE_SUB_CNT, 0 AS EFILE_SIZE, 0 AS RECORD_PAGE_CNT, 0 AS EFILE_CNT, 0 AS PDF_A1_FILE_CNT                FROM  TB_STORIGNFILE Z                WHERE (                EXISTS (                    SELECT RECORD_CENTER_ID, ORIGN_ID                    FROM  TB_RDRECORD                    WHERE RECORD_ID = '1'                    AND   RECORD_CENTER_ID = Z.RECORD_CENTER_ID                    AND   ORIGN_ID = Z.ORIGN_ID                )                AND   DOC_TYPE_CD NOT IN ('01','10','S1')            )            UNION ALL            (                SELECT 0 AS RECORD_SUB_CNT, NVL(SUM(FILE_SIZE),0) AS EFILE_SIZE, 0 AS RECORD_PAGE_CNT, COUNT(1) AS EFILE_CNT, 0 AS PDF_A1_FILE_CNT                FROM  TB_STORIGNFILE Z                WHERE                 EXISTS (                    SELECT RECORD_CENTER_ID, ORIGN_ID                    FROM  TB_RDRECORD                    WHERE RECORD_ID = '1'                    AND   RECORD_CENTER_ID = Z.RECORD_CENTER_ID                    AND   ORIGN_ID = Z.ORIGN_ID                )                AND   DOC_TYPE_CD NOT IN ('10','S1')            )            UNION ALL            (                SELECT 0 AS RECORD_SUB_CNT, 0 AS EFILE_SIZE, SUM(NVL(RECORD_PAGE_CNT,0)) AS RECORD_PAGE_CNT, 0 AS EFILE_CNT, 0 AS PDF_A1_FILE_CNT                FROM  TB_RDRECORD                WHERE RECORD_ID = '1'            )            UNION ALL            (                SELECT 0 AS RECORD_SUB_CNT, 0 AS EFILE_SIZE, 0 AS RECORD_PAGE_CNT, 0 AS EFILE_CNT, COUNT(1) AS PDF_A1_FILE_CNT                FROM  TB_STORIGNPDFA1FILE Z                WHERE                 EXISTS (                    SELECT RECORD_CENTER_ID, ORIGN_ID                    FROM  TB_RDRECORD                    WHERE RECORD_ID = '1'                    AND RECORD_CENTER_ID = Z.RECORD_CENTER_ID                    AND ORIGN_ID = Z.ORIGN_ID                )            )        )	;

SelectArrComponentPreservationHistoryCon
Syntax: invalid use of cast
  CAST ( expression AS data_type ) [CAS INFO-127.0.0.1:54330,1,14011],[SESSION-54],[URL-jdbc:cubrid:127.0.0.1:54330:rms:dba:********:].


-- Filename : C:\eclipse\workspace\SqlMapXMLParser\rmsCubrid_daemon\xml\sqlMap-RecordSchema.xml
-- Query    : select
-- Query Id : SelectArrComponentPreservationHistoryCon

		SELECT B.ORIGN_FILE_ID,		       '문서보존포맷변환' AS HIST_TYPE,		       B.FILE_NM AS ORIGN_FILE_NM,		       B.DOC_TYPE_CD,		       (CASE WHEN B.DOC_TYPE_CD = '01' THEN '본문' ELSE '첨부' END) AS DOC_TYPE_NM,		       NVL(B.VER,'1.0') AS VER,		       (CASE WHEN B.PDF_A1_TRANS_STATE='4' THEN '문서보존포맷변환 성공'		             WHEN D.FOLLOWUP_CAUSE IS NOT NULL THEN '문서보존포맷변환 실패(사유:'||D.FOLLOWUP_CAUSE||')'		             ELSE ''		        END) AS PDF_A1_FILE_DESC,		       C.PDF_A1_FILE_ID,		       C.FILE_NM AS PDF_A1_FILE_NM,				(CASE WHEN B.PDF_A1_TRANS_STATE='4' THEN cast(C.REG_DTIME AS datetime)			   ELSE cast(D.WORK_START_DTIME AS datetime) END) AS PDF_A1_REG_DTIME,		       B.ATTACH_FILE_MNG_INFO,		       cast(B.REG_DTIME AS datetime) AS REG_DTIME,			   		       (SELECT NVL(Z.REQUEST_CORP_CD,' ')		          FROM TB_STREQTRANS Z		         WHERE Z.RECORD_CENTER_ID = A.RECORD_CENTER_ID		           AND Z.RECORD_ID = A.RECORD_ID		           AND Z.JOB_ID = (SELECT MAX(Y.JOB_ID)		                             FROM TB_STREQTRANS Y		                            WHERE Y.RECORD_CENTER_ID = Z.RECORD_CENTER_ID		                              AND Y.RECORD_ID = Z.RECORD_ID)		        ) AS REQUEST_CORP_CD,		       (SELECT NVL(Z.REQUEST_CORP_NM,' ')		          FROM TB_STREQTRANS Z		         WHERE Z.RECORD_CENTER_ID = A.RECORD_CENTER_ID		           AND Z.RECORD_ID = A.RECORD_ID		           AND Z.JOB_ID = (SELECT MAX(Y.JOB_ID)		                             FROM TB_STREQTRANS Y		                            WHERE Y.RECORD_CENTER_ID = Z.RECORD_CENTER_ID		                              AND Y.RECORD_ID = Z.RECORD_ID)                ) AS REQUEST_CORP_NM,		       (SELECT Z.REQUEST_ORG_CD		          FROM TB_STREQTRANS Z		         WHERE Z.RECORD_CENTER_ID = A.RECORD_CENTER_ID		           AND Z.RECORD_ID = A.RECORD_ID		           AND Z.JOB_ID = (SELECT MAX(Y.JOB_ID)		                             FROM TB_STREQTRANS Y		                            WHERE Y.RECORD_CENTER_ID = Z.RECORD_CENTER_ID		                              AND Y.RECORD_ID = Z.RECORD_ID)                ) AS REQUEST_ORG_CD,		       (SELECT Z.REQUEST_ORG_NM		          FROM TB_STREQTRANS Z		         WHERE Z.RECORD_CENTER_ID = A.RECORD_CENTER_ID		           AND Z.RECORD_ID = A.RECORD_ID		           AND Z.JOB_ID = (SELECT MAX(Y.JOB_ID)		                             FROM TB_STREQTRANS Y		                            WHERE Y.RECORD_CENTER_ID = Z.RECORD_CENTER_ID		                              AND Y.RECORD_ID = Z.RECORD_ID)                ) AS REQUEST_ORG_NM,		       (SELECT Z.REQUEST_USER_ID		          FROM TB_STREQTRANS Z		         WHERE Z.RECORD_CENTER_ID = A.RECORD_CENTER_ID		           AND Z.RECORD_ID = A.RECORD_ID		           AND Z.JOB_ID = (SELECT MAX(Y.JOB_ID)		                             FROM TB_STREQTRANS Y		                            WHERE Y.RECORD_CENTER_ID = Z.RECORD_CENTER_ID		                              AND Y.RECORD_ID = Z.RECORD_ID)                ) AS REQUEST_USER_ID,		       (SELECT Z.REQUEST_USER_NM		          FROM TB_STREQTRANS Z		         WHERE Z.RECORD_CENTER_ID = A.RECORD_CENTER_ID		           AND Z.RECORD_ID = A.RECORD_ID		           AND Z.JOB_ID = (SELECT MAX(Y.JOB_ID)		                             FROM TB_STREQTRANS Y		                            WHERE Y.RECORD_CENTER_ID = Z.RECORD_CENTER_ID		                              AND Y.RECORD_ID = Z.RECORD_ID)                ) AS REQUEST_USER_NM,		       (SELECT Z.REQUEST_USER_POS_RANK_NM		          FROM TB_STREQTRANS Z		         WHERE Z.RECORD_CENTER_ID = A.RECORD_CENTER_ID		           AND Z.RECORD_ID = A.RECORD_ID		           AND Z.JOB_ID = (SELECT MAX(Y.JOB_ID)		                             FROM TB_STREQTRANS Y		                            WHERE Y.RECORD_CENTER_ID = Z.RECORD_CENTER_ID		                              AND Y.RECORD_ID = Z.RECORD_ID)                ) AS REQUEST_USER_POS_RANK_NM		  FROM TB_RDRECORD A,		       TB_STORIGNFILE B,		       TB_STORIGNPDFA1FILE C,		       (SELECT W.*		          FROM		          (		               SELECT ROW_NUMBER() OVER (PARTITION BY H.ORIGN_FILE_ID ORDER BY H.WORK_HIST_ID DESC) AS SORT,		                      H.*		                 FROM TB_STWORKHIST H		                WHERE H.FORMAT_DIV_CD = '0'		           ) W		         WHERE W.SORT = 1) D		 WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID		   AND A.ORIGN_ID = B.ORIGN_ID		   AND B.RECORD_CENTER_ID = C.RECORD_CENTER_ID(+)		   AND B.ORIGN_ID = C.ORIGN_ID(+)		   AND B.DOC_TYPE_CD = C.DOC_TYPE_CD(+)		   AND B.DOC_TYPE_SNO = C.DOC_TYPE_SNO(+)		   AND B.ORIGN_FILE_ID = D.ORIGN_FILE_ID(+)		   AND B.DOC_TYPE_CD NOT IN ('10','S1')		   AND B.ORIGN_FILE_ID = '1' 		UNION ALL		SELECT A.ORIGN_FILE_ID,		       '바이러스검출' AS HIST_TYPE,		       B.FILE_NM AS ORIGN_FILE_NM,		       A.DOC_TYPE_CD,		       (CASE WHEN A.DOC_TYPE_CD = '01' THEN '본문' ELSE '첨부' END) AS DOC_TYPE_NM,		       NVL(A.VER,'1.0') AS VER,		       (CASE WHEN C.ATTACH_FILE_TYPE = '01' THEN '원문 : ' || C.VIRUS_INFECTION_CONT		             WHEN C.ATTACH_FILE_TYPE = '02' THEN '문서보존포맷 : ' || C.VIRUS_INFECTION_CONT		             WHEN C.ATTACH_FILE_TYPE = '03' THEN '장기보존포맷 : ' || C.VIRUS_INFECTION_CONT		             ELSE ''		        END) AS PDF_A1_FILE_DESC,		       B.FILE_NM AS PDF_A1_FILE_ID,		       B.FILE_NM AS PDF_A1_FILE_NM,			   				cast(C.VIRUS_INFECTION_DTIME AS datetime) AS PDF_A1_REG_DTIME,							   		       '' AS ATTACH_FILE_MNG_INFO,		       NULL AS REG_DTIME,		       C.REQUEST_CORP_CD,		       C.REQUEST_CORP_NM,		       C.REQUEST_ORG_CD,		       C.REQUEST_ORG_NM,		       C.REQUEST_USER_ID,		       C.REQUEST_USER_NM,		       C.REQUEST_USER_POS_RANK_NM		  FROM (		           SELECT A.RECORD_CENTER_ID,		                  A.RECORD_TAKE_SEQ,		                  C.DOC_TYPE_CD,		                  C.DOC_TYPE_SNO,		                  C.ORIGN_FILE_ID,		                  C.VER		             FROM TB_TKRECORD A,		                  TB_RDRECORD B,		                  TB_STORIGNFILE C		            WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID		              AND A.RECORD_TAKE_SEQ = B.RECORD_TAKE_SEQ		              AND B.RECORD_CENTER_ID = C.RECORD_CENTER_ID		              AND B.ORIGN_ID = C.ORIGN_ID		              AND C.DOC_TYPE_CD NOT IN ('10','S1')		              AND C.ORIGN_FILE_ID = '1'		        ) A,		       TB_TKATTACHFILE B,		       TB_TKVIRUSCHECK C		 WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID		   AND A.RECORD_TAKE_SEQ = B.RECORD_TAKE_SEQ		   AND A.DOC_TYPE_CD = B.DOC_TYPE_CD		   AND A.DOC_TYPE_SNO = B.DOC_TYPE_SNO		   AND B.RECORD_CENTER_ID = C.RECORD_CENTER_ID		   AND B.RECORD_TAKE_SEQ = C.RECORD_TAKE_SEQ		   AND B.ATTACH_FILE_TYPE = C.ATTACH_FILE_TYPE		   AND B.REG_SEQ = C.REG_SEQ		   AND C.VIRUS_CHECK_FLAG = '1'		   AND C.VIRUS_INFECTION_FLAG = '1'		UNION ALL		SELECT A.ORIGN_FILE_ID,		       '바이러스치료' AS HIST_TYPE,		       B.FILE_NM AS ORIGN_FILE_NM,		       A.DOC_TYPE_CD,		       (CASE WHEN A.DOC_TYPE_CD = '01' THEN '본문' ELSE '첨부' END) AS DOC_TYPE_NM,		       NVL(A.VER,'1.0') AS VER,		       (CASE WHEN C.ATTACH_FILE_TYPE = '01' THEN '원문 : '		             WHEN C.ATTACH_FILE_TYPE = '02' THEN '문서보존포맷 : '		             WHEN C.ATTACH_FILE_TYPE = '03' THEN '장기보존포맷 : '		             ELSE ''		        END) || (CASE WHEN C.VIRUS_CLEAN_APPLY_FLAG = '1' THEN '바이러스 치료적용'		                      WHEN C.VIRUS_CLEAN_APPLY_FLAG = '2' AND C.VIRUS_CLEAN_FLAG = '2' THEN '바이러스 치료불가'		                      WHEN C.VIRUS_CLEAN_APPLY_FLAG = '2' AND C.VIRUS_CLEAN_FLAG = '1' THEN '바이러스 치료파일 미적용'		                      ELSE ''		                 END) AS PDF_A1_FILE_DESC,		       B.FILE_NM AS PDF_A1_FILE_ID,		       B.FILE_NM AS PDF_A1_FILE_NM,				 cast(C.VIRUS_CLEAN_APPLY_DTIME AS datetime) AS PDF_A1_REG_DTIME,							   		       '' AS ATTACH_FILE_MNG_INFO,		       NULL AS REG_DTIME,		       C.REQUEST_CORP_CD,		       C.REQUEST_CORP_NM,		       C.REQUEST_ORG_CD,		       C.REQUEST_ORG_NM,		       C.REQUEST_USER_ID,		       C.REQUEST_USER_NM,		       C.REQUEST_USER_POS_RANK_NM		  FROM (		           SELECT A.RECORD_CENTER_ID,		                  A.RECORD_TAKE_SEQ,		                  C.DOC_TYPE_CD,		                  C.DOC_TYPE_SNO,		                  C.ORIGN_FILE_ID,		                  C.VER		             FROM TB_TKRECORD A,		                  TB_RDRECORD B,		                  TB_STORIGNFILE C		            WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID		              AND A.RECORD_TAKE_SEQ = B.RECORD_TAKE_SEQ		              AND B.RECORD_CENTER_ID = C.RECORD_CENTER_ID		              AND B.ORIGN_ID = C.ORIGN_ID		              AND C.DOC_TYPE_CD NOT IN ('10','S1')		              AND C.ORIGN_FILE_ID = '1'		        ) A,		       TB_TKATTACHFILE B,		       TB_TKVIRUSCHECK C		 WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID		   AND A.RECORD_TAKE_SEQ = B.RECORD_TAKE_SEQ		   AND A.DOC_TYPE_CD = B.DOC_TYPE_CD		   AND A.DOC_TYPE_SNO = B.DOC_TYPE_SNO		   AND B.RECORD_CENTER_ID = C.RECORD_CENTER_ID		   AND B.RECORD_TAKE_SEQ = C.RECORD_TAKE_SEQ		   AND B.ATTACH_FILE_TYPE = C.ATTACH_FILE_TYPE		   AND B.REG_SEQ = C.REG_SEQ		   AND C.VIRUS_CHECK_FLAG = '1'		   AND C.VIRUS_CLEAN_APPLY_FLAG IN ('1','2')		UNION ALL		SELECT A.ORIGN_FILE_ID,		       '바이러스검출' AS HIST_TYPE,		       A.FILE_NM AS ORIGN_FILE_NM,		       A.DOC_TYPE_CD,		       (CASE WHEN A.DOC_TYPE_CD = '01' THEN '본문' ELSE '첨부' END) AS DOC_TYPE_NM,		       NVL(A.VER,'1.0') AS VER,		       '원문 : ' || B.VIRUS_INFECTION_CONT AS PDF_A1_FILE_DESC,		       A.FILE_NM AS PDF_A1_FILE_ID,		       A.FILE_NM AS PDF_A1_FILE_NM,			   			   			   cast( ###'1'ORIGN_FILE_ID:VARCHAR'1'ORIGN_FILE_ID:VARCHAR'1'ORIGN_FILE_ID:VARCHAR'1'ORIGN_FILE_ID:VARCHAR'1'ORIGN_FILE_ID:VARCHAR# 		ORDER BY PDF_A1_REG_DTIME	;


Close(log) : C:\eclipse\workspace\SqlMapXMLParser\rmsCubrid_daemon\xml\sqlMap-RecordSchema.xml
