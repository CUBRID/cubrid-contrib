<?xml version="1.0" encoding="EUC-KR" ?>

<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="FolderSchema">
	
	<!-- 기록물철 공통정보 조회 -->
	<!-- M22 기록식별자, M35 기록물명, M40 기술, M46 전자기록물여부, M76 생산이력, M102 보존기간정보, M105 보존장소, M106 권한 -->
	<resultMap id="SelectFolderInfoMap_resultMap" class="java.util.HashMap">
		<result property="RECORD_CENTER_ID"			column="RECORD_CENTER_ID"/>
		<result property="FOLDER_ID"				column="FOLDER_ID"/>
		<result property="FOLDER_KEY"				column="FOLDER_KEY"/>
		<result property="CREAT_SYS_FOLDER_ID"		column="CREAT_SYS_FOLDER_ID"/>
		<result property="TITLE"					column="TITLE"/>
		<result property="SUB_TITLE"				column="SUB_TITLE"/>
		<result property="CORCT_TITLE"				column="CORCT_TITLE"/>
		<result property="FOLDER_TYPE_DIV_CD"		column="FOLDER_TYPE_DIV_CD"/>
		<result property="FOLDER_TYPE_DIV_NM"		column="FOLDER_TYPE_DIV_NM"/>
		<result property="ERECORD_FLAG"				column="ERECORD_FLAG"/>
		<result property="ERECORD_NM"				column="ERECORD_NM"/>
		<result property="CLSS_DIV_CD"				column="CLSS_DIV_CD"/>
		<result property="CLSS_DIV_NM"				column="CLSS_DIV_NM"/>
		<result property="CLSS_ID"					column="CLSS_ID"/>
		<result property="CREAT_SYS_CD"				column="CREAT_SYS_CD"/>
		<result property="CREAT_SYS_NM"				column="CREAT_SYS_NM"/>
		<result property="RECORD_CENTER_ORG_CD"		column="RECORD_CENTER_ORG_CD"/>
		<result property="RECORD_CENTER_ORG_NM"		column="RECORD_CENTER_ORG_NM"/>
		<result property="ORG_CD"					column="ORG_CD"/>
		<result property="ORG_NM"					column="ORG_NM"/>
		<result property="FOLDER_START_DTIME"		column="FOLDER_START_DTIME"/>
		<result property="FOLDER_CLOSE_DTIME"		column="FOLDER_CLOSE_DTIME"/>
		<result property="FUNSH_END_DTIME"			column="FUNSH_END_DTIME"/>
		<result property="FUNSH_RSN"				column="FUNSH_RSN"/>
		<result property="OLD_FOLDER_CREAT_ORG_NM"	column="OLD_FOLDER_CREAT_ORG_NM"/>
		<result property="OLD_FOLDER_CLSS_NO"		column="OLD_FOLDER_CLSS_NO"/>
		<result property="PRESV_TERM_CD"			column="PRESV_TERM_CD"/>
		<result property="PRESV_TERM_NM"			column="PRESV_TERM_NM"/>
		<result property="PRESV_TERM_FIX_RSN"		column="PRESV_TERM_FIX_RSN"/>
		<result property="PRESV_AREA_CD"			column="PRESV_AREA_CD"/>
		<result property="PRESV_AREA_NM"			column="PRESV_AREA_NM"/>
		<result property="OPER_READ_RANGE_CD"		column="OPER_READ_RANGE_CD"/>
		<result property="OPER_READ_RANGE_NM"		column="OPER_READ_RANGE_NM"/>
		<result property="ADJST_DESCR"				column="ADJST_DESCR"/>
		<result property="CREAT_PURPS"				column="CREAT_PURPS"/>
		<result property="SUMRY"					column="SUMRY" jdbcType="CLOB" javaType="java.lang.String"/>
	</resultMap>
	<!-- 2014.08.01 M71 분류체계 유형의 구전자문서 선택값 변경으로 인하여 쿼리 수정 -->
	<select id="SelectFolderInfoMap" parameterClass="java.util.HashMap" resultMap="SelectFolderInfoMap_resultMap">
		SELECT A.RECORD_CENTER_ID
		    , A.FOLDER_ID
		    , A.CREAT_SYS_CD||'-'||A.ORG_CD||'-'||A.CLSS_ID||'-'||A.CREAT_YYYY||'-'||A.FOLDER_REG_SEQ
		            ||(CASE WHEN A.HO_NO != '001' THEN ' ('||A.HO_NO||')'
		                    WHEN (SELECT COUNT(1) FROM TB_RDFOLDER B WHERE B.RECORD_CENTER_ID=A.RECORD_CENTER_ID AND B.CREAT_SYS_CD=A.CREAT_SYS_CD AND B.ORG_CD=A.ORG_CD AND B.CLSS_ID=A.CLSS_ID AND B.CREAT_YYYY=A.CREAT_YYYY AND B.FOLDER_REG_SEQ=A.FOLDER_REG_SEQ) > 1 THEN ' ('||A.HO_NO||')'
		                    ELSE '' END) AS FOLDER_KEY
		    , A.CREAT_SYS_FOLDER_ID
		    , A.ORG_TITLE as TITLE
		    , A.SUB_TITLE
		    , A.CORCT_TITLE
		    , A.FOLDER_TYPE_DIV_CD
		    , (CASE WHEN A.FOLDER_TYPE_DIV_CD='1' THEN '일반문서'
			        WHEN A.FOLDER_TYPE_DIV_CD='2' THEN '도면/지도류'
			        WHEN A.FOLDER_TYPE_DIV_CD='3' THEN '사진필름류'
			        WHEN A.FOLDER_TYPE_DIV_CD='4' THEN '녹음동영상류'
			        WHEN A.FOLDER_TYPE_DIV_CD='5' THEN '카드류' END) AS FOLDER_TYPE_DIV_NM
		    , A.ERECORD_FLAG
		    , (CASE WHEN A.ERECORD_FLAG='1' THEN '전자기록물' WHEN A.ERECORD_FLAG='2' THEN '비전자기록물' WHEN A.ERECORD_FLAG='3' THEN '혼합기록물' ELSE '' END) AS ERECORD_NM
		    , A.CLSS_DIV_CD
            , (CASE WHEN A.CLSS_DIV_CD='1' THEN 'BRM' 
                    WHEN A.CLSS_DIV_CD='2' AND A.CREAT_SYS_CD != '06' THEN '기록물분류기준' 
                    WHEN A.CLSS_DIV_CD='2' AND A.CREAT_SYS_CD = '06' THEN '공문서분류체계' 
                    ELSE '' 
                END) AS CLSS_DIV_NM
		    , A.CLSS_ID
		    , A.CREAT_SYS_CD
		    , (CASE WHEN A.CREAT_SYS_CD='01' THEN '업무관리시스템(08년이전)'
		            WHEN A.CREAT_SYS_CD='02' THEN '전자문서시스템'
		            WHEN A.CREAT_SYS_CD='03' THEN '기록관리시스템'
		            WHEN A.CREAT_SYS_CD='04' THEN '업무관리시스템(08년이후)'
		            WHEN A.CREAT_SYS_CD='06' THEN '구전자문서시스템'
		            WHEN A.CREAT_SYS_CD='05' THEN (CASE WHEN A.VRMS_FLAG='1' THEN (CASE WHEN A.EXT_SYS_CD='01' THEN '업무관리시스템(08년이전)' WHEN A.EXT_SYS_CD='02' THEN '전자문서시스템' ELSE '기록관리시스템' END) WHEN A.MIG_FLAG='1' THEN '자료관시스템' ELSE '행정DB구축' END )
		        END) AS CREAT_SYS_NM
		    , (SELECT Z.HUPPER_ORG_CD FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID=A.RECORD_CENTER_ID AND Z.ORG_CD=A.ORG_CD) AS RECORD_CENTER_ORG_CD
		    , (SELECT (SELECT Y.FULL_ORG_NM FROM TB_STORG Y WHERE Y.RECORD_CENTER_ID=Z.RECORD_CENTER_ID AND Y.ORG_CD=Z.HUPPER_ORG_CD) FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID=A.RECORD_CENTER_ID AND Z.ORG_CD=A.ORG_CD) AS RECORD_CENTER_ORG_NM
		    , A.ORG_CD
		    , (SELECT Z.FULL_ORG_NM FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID=A.RECORD_CENTER_ID AND Z.ORG_CD=A.ORG_CD) AS ORG_NM
			
			<!--cubrid
		    , TO_DATE(A.FOLDER_START_DTIME, 'YYYYMMDDHH24MISS') AS FOLDER_START_DTIME
		    , TO_DATE(A.FOLDER_CLOSE_DTIME, 'YYYYMMDDHH24MISS') AS FOLDER_CLOSE_DTIME
			-->

			<!--cubrid begin-->
			, cast(A.FOLDER_START_DTIME AS datetime) AS FOLDER_START_DTIME
		    , cast(A.FOLDER_CLOSE_DTIME AS datetime) AS FOLDER_CLOSE_DTIME
			<!--cubrid end-->
			
		    , A.FUNSH_END_DTIME
		    , A.FUNSH_RSN
		    , A.OLD_FOLDER_CREAT_ORG_NM
		    , A.OLD_FOLDER_CLSS_NO
		    , A.PRESV_TERM_CD
		    , (SELECT Z.COM_CD_NM FROM TB_ZZCOMCD Z WHERE Z.COM_TYPE_CD='RD07' AND Z.COM_CD=A.PRESV_TERM_CD) AS PRESV_TERM_NM
		    , A.PRESV_TERM_FIX_RSN
		    ,  A.PRESV_AREA_CD
		    , (SELECT Z.COM_CD_NM FROM TB_ZZCOMCD Z WHERE Z.COM_TYPE_CD='RD10' AND Z.COM_CD=A.PRESV_AREA_CD) AS PRESV_AREA_NM
		    , A.OPER_READ_RANGE_CD
    	    , (SELECT Z.COM_CD_NM FROM TB_ZZCOMCD Z WHERE Z.COM_TYPE_CD='RD53' AND Z.COM_CD=A.OPER_READ_RANGE_CD) AS OPER_READ_RANGE_NM
    	    , A.ADJST_DESCR
    	    , A.CREAT_PURPS
    	    , A.SUMRY
		FROM  TB_RDFOLDER A
		WHERE A.FOLDER_ID = #FOLDER_ID:VARCHAR#
	</select>
	
	<!-- M12 생산자 -->
	<!-- 누락정보(기관코드) 추가, 생산자유형 변경.. 2014.07.25 이옥찬.. -->
	<!-- 행위자 코드에 22(작성자)도 포함되도록 수정 처리 2015.03.31 김도형 -->
	<select id="SelectArrCreatorCon" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT FOLDER_ID, A.AGENT_TYPE_CD
		    , (SELECT Z.COM_CD_NM FROM TB_ZZCOMCD Z WHERE Z.COM_TYPE_CD='RD12' AND Z.COM_CD=A.AGENT_TYPE_CD) AS AGENT_TYPE_NM
		    , (SELECT (SELECT Y.FULL_ORG_NM FROM TB_STORG Y WHERE Y.RECORD_CENTER_ID=Z.RECORD_CENTER_ID AND Y.ORG_CD=Z.HUPPER_ORG_CD) FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID=A.RECORD_CENTER_ID AND Z.ORG_CD=A.AGENT_ORG_CD) AS HUPPER_ORG_NM
		    , (SELECT Z.HUPPER_ORG_CD FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID=A.RECORD_CENTER_ID AND Z.ORG_CD=A.AGENT_ORG_CD) AS HUPPER_ORG_CD
		    , NVL(CASE WHEN A.AGENT_ORG_CD IS NULL THEN A.AGENT_ORG_NM 
		               ELSE (SELECT Z.FULL_ORG_NM FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID = A.RECORD_CENTER_ID AND Z.ORG_CD = A.AGENT_ORG_CD)
		          END, A.AGENT_ORG_NM) AS AGENT_ORG_NM
		    , A.AGENT_ORG_CD
		    , A.AGENT_NM
		    , A.AGENT_ID
		    , A.AGENT_POS_RANK_NM
		FROM  TB_RDFOLDERCREAT A
		WHERE A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
		AND   A.FOLDER_ID = #FOLDER_ID:VARCHAR#
		AND   A.AGENT_TYPE_CD IN ('19','28','22')
	</select>
	
	<!-- M58 크기 (M47 저장정보 내부) -->
	<!-- 건카운트로 장기보존포맷변환 카운트 하는 부분 변경 및 추가.. 2014.07.25 이옥찬.. -->
	<select id="SelectStorageCon_ExtentCon" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	   SELECT TO_CHAR(NVL(SUM(RECORD_CNT),0)) AS RECORD_CNT
		    , TO_CHAR(NVL(SUM(EFILE_CNT),0)) AS EFILE_CNT
		    , TO_CHAR(NVL(SUM(RECORD_PAGE_CNT),0)) AS RECORD_PAGE_CNT
		    , TO_CHAR(NVL(SUM(EFILE_SIZE),0)) AS EFILE_SIZE
		    , TO_CHAR(NVL(SUM(RECORD_NEO_CNT),0)) AS RECORD_NEO_CNT
		FROM
		(
		      SELECT COUNT(1) AS RECORD_CNT, SUM(NVL(RECORD_PAGE_CNT,0)) AS RECORD_PAGE_CNT, 0 AS EFILE_CNT, 0 AS EFILE_SIZE, 0 AS RECORD_NEO_CNT
		        FROM TB_RDRECORD
		       WHERE RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
		         AND FOLDER_ID = #FOLDER_ID:VARCHAR#

		      UNION ALL

<!-- 		      SELECT 0 AS RECORD_CNT, 0 AS RECORD_PAGE_CNT, COUNT(1) AS EFILE_CNT, NVL(SUM(FILE_SIZE),0) AS EFILE_SIZE, 0 AS RECORD_NEO_CNT -->
<!-- 		        FROM TB_STORIGNFILE -->
<!-- 		       WHERE (RECORD_CENTER_ID, ORIGN_ID) -->
<!-- 		          IN ( -->
<!-- 			            SELECT RECORD_CENTER_ID, ORIGN_ID -->
<!-- 			              FROM TB_RDRECORD -->
<!-- 		                 WHERE RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR# -->
<!-- 		                   AND FOLDER_ID = #FOLDER_ID:VARCHAR# -->
<!-- 		              ) -->
<!-- 		         AND DOC_TYPE_CD NOT IN ('10','S1') -->

			SELECT 0 AS RECORD_CNT, 0 AS RECORD_PAGE_CNT, COUNT(1) AS EFILE_CNT, NVL(SUM(C.FILE_SIZE),0) AS EFILE_SIZE, 0 AS RECORD_NEO_CNT
			  FROM TB_RDRECORD A,
			       TB_STRECORDORIGN B,
			       TB_STORIGNFILE C
			 WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
			   AND A.RECORD_ID = B.RECORD_ID
			   AND B.RECORD_CENTER_ID = C.RECORD_CENTER_ID
			   AND B.ORIGN_ID = C.ORIGN_ID
			   AND A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
			   AND A.FOLDER_ID = #FOLDER_ID:VARCHAR#
			   AND C.DOC_TYPE_CD NOT IN ('10','S1')

		      UNION ALL

		      SELECT 0 AS RECORD_CNT, 0 AS EFILE_CNT, 0 AS RECORD_PAGE_CNT, 0 AS EFILE_SIZE, COUNT(1) AS RECORD_NEO_CNT
		        FROM TB_STORIGNNEOFILE Z
		       WHERE 
		          EXISTS (
			            SELECT RECORD_CENTER_ID, ORIGN_ID
			              FROM TB_RDRECORD
		                 WHERE RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
		                   AND FOLDER_ID = #FOLDER_ID:VARCHAR#
                                   AND RECORD_CENTER_ID = Z.RECORD_CENTER_ID
                                   AND ORIGN_ID = Z.ORIGN_ID
		              )
		          AND DEL_FLAG = '0'
		)

	</select>
	
	<!-- M67 구조정보 (M47 저장정보 내부) : 기록물분철 목록 -->
	<select id="SelectStorageCon_StructureInfoCon_Folder" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT C.CREAT_SYS_CD||'-'||C.ORG_CD||'-'||C.CLSS_ID||'-'||C.CREAT_YYYY||'-'||C.FOLDER_REG_SEQ||' ('||C.HO_NO||')' AS OBJECT_ID
		    , C.TITLE AS OBJECT_TITLE
		FROM  TB_RDFOLDER C
		WHERE 
		EXISTS (
		    SELECT A.CREAT_SYS_CD, A.ORG_CD, A.CLSS_ID, A.CREAT_YYYY, A.FOLDER_REG_SEQ
		    FROM  TB_RDFOLDER A
		    WHERE A.FOLDER_ID = #FOLDER_ID:VARCHAR#
		    AND   (SELECT COUNT(1) FROM TB_RDFOLDER B WHERE B.CREAT_SYS_CD=A.CREAT_SYS_CD AND B.ORG_CD=A.ORG_CD AND B.CLSS_ID=A.CLSS_ID AND B.CREAT_YYYY=A.CREAT_YYYY AND B.FOLDER_REG_SEQ=A.FOLDER_REG_SEQ) > 1
                    AND   A.CREAT_SYS_CD = C.CREAT_SYS_CD
                    AND   A.ORG_CD = C.ORG_CD
                    AND   A.CLSS_ID = C.CLSS_ID
                    AND   A.CREAT_YYYY = C.CREAT_YYYY
                    AND   A.FOLDER_REG_SEQ = C.FOLDER_REG_SEQ
		)
		AND C.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
		ORDER BY C.RECORD_CENTER_ID, C.CREAT_SYS_CD, C.ORG_CD, C.CLSS_ID, C.CREAT_YYYY, C.FOLDER_REG_SEQ, C.HO_NO
	</select>
	
	<!-- M67 구조정보 (M47 저장정보 내부) : 기록물건 목록 -->
	<select id="SelectStorageCon_StructureInfoCon_Record" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT A.CREAT_SYS_CD||'-'||A.ORG_CD||'-'||A.CREAT_YYYY||'-'||A.CREAT_REG_NO
		            ||(CASE WHEN A.DTCH_REG_NO != '00' THEN ' ('||A.DTCH_REG_NO||')'
		                    WHEN (SELECT COUNT(1) FROM TB_RDRECORD B WHERE B.RECORD_CENTER_ID=A.RECORD_CENTER_ID AND B.CREAT_SYS_CD=A.CREAT_SYS_CD AND B.ORG_CD=A.ORG_CD AND B.CREAT_YYYY=A.CREAT_YYYY AND B.CREAT_REG_NO=A.CREAT_REG_NO) > 1 THEN ' ('||A.DTCH_REG_NO||')'
		               ELSE '' END) AS OBJECT_ID
		    , A.ORG_TITLE AS OBJECT_TITLE
		FROM  TB_RDRECORD A
		WHERE A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
		  AND A.FOLDER_ID = #FOLDER_ID:VARCHAR#
		ORDER BY A.RECORD_CENTER_ID, A.CREAT_SYS_CD, A.ORG_CD, A.CREAT_YYYY, A.CREAT_REG_NO, A.DTCH_REG_NO
	</select>
	
	<!-- M72 분류값 (M70 분류 내부) : 1.단위과제 -->
	<select id="SelectClassificationValueCon_Clss" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT A.BIS_CLSS_ID AS CLSS_ID
		    , A.BIS_CLSS_NM AS CLSS_NM
		    , A.LEVL AS CLSS_LEVL
		    , (CASE WHEN A.LEVL = 1 THEN '정책분야'
		            WHEN A.LEVL = 2 THEN '정책영역'
		            WHEN A.LEVL = 3 THEN '대기능'
		            WHEN A.LEVL = 4 THEN '중기능'
		            WHEN A.LEVL = 5 THEN '소기능'
		            WHEN A.LEVL = 6 THEN '단위과제' END) AS CLSS_LEVL_NM
		FROM (
		    SELECT BIS_CLSS_ID
		        , BIS_CLSS_NM
		        , LEVL
		    FROM  TB_ZZBISCLSS START WITH BIS_CLSS_ID = #CLSS_ID:VARCHAR#
		    CONNECT BY PRIOR UPPER_BIS_CLSS_ID = BIS_CLSS_ID
		) A
		WHERE A.LEVL > 0
		ORDER BY A.LEVL
	</select>
	
	<!-- M72 분류값 (M70 분류 내부) : 2.단위업무 -->
	<select id="SelectClassificationValueCon_Unit" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		(
		    SELECT LRG_CD AS CLSS_ID, LRG_NM AS CLSS_NM, 1 AS CLSS_LEVL, '대기능' AS CLSS_LEVL_NM
		    FROM  TB_ZZUNIT
		    WHERE RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
		    AND   UNIT_CD = #CLSS_ID:VARCHAR#
		    AND   LRG_CD IS NOT NULL
		)
		UNION
		(
		    SELECT MID_CD AS CLSS_ID, MID_NM AS CLSS_NM, 2 AS CLSS_LEVL, '중기능' AS CLSS_LEVL_NM
		    FROM  TB_ZZUNIT
		    WHERE RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
		    AND   UNIT_CD = #CLSS_ID:VARCHAR#
		    AND   MID_CD IS NOT NULL
		)
		UNION
		(
		    SELECT SML_CD AS CLSS_ID, SML_NM AS CLSS_NM, 3 AS CLSS_LEVL, '소기능' AS CLSS_LEVL_NM
		    FROM  TB_ZZUNIT
		    WHERE RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
		    AND   UNIT_CD = #CLSS_ID:VARCHAR#
		    AND   SML_CD IS NOT NULL
		)
		UNION
		(
		    SELECT UNIT_CD AS CLSS_ID, UNIT_NM AS CLSS_NM, 4 AS CLSS_LEVL, '단위업무' AS CLSS_LEVL_NM
		    FROM  TB_ZZUNIT
		    WHERE RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
		    AND   UNIT_CD = #CLSS_ID:VARCHAR#
		)
	</select>
	
	<!-- M72 분류값 (M70 분류 내부) : 3.구전자문서 2014.08.01 추가.. 단위업무가 없는 경우에... 99999999 등록..-->
	<select id="SelectClassificationValueCon_Old_Unit" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT LRG_CD AS CLSS_ID,
		       LRG_NM AS CLSS_NM,
		       1 AS CLSS_LEVL,
		       '대기능' AS CLSS_LEVL_NM
		  FROM TB_ZZUNIT
		 WHERE RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
		   AND UNIT_CD = #CLSS_ID:VARCHAR#
		   AND UNIT_CD != '99999999'
		   AND LRG_CD IS NOT NULL
		UNION
		SELECT MID_CD AS CLSS_ID,
		       MID_NM AS CLSS_NM,
		       2 AS CLSS_LEVL,
		       '중기능' AS CLSS_LEVL_NM
		  FROM TB_ZZUNIT
		 WHERE RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
		   AND UNIT_CD = #CLSS_ID:VARCHAR#
		   AND UNIT_CD != '99999999'
		   AND MID_CD IS NOT NULL
		UNION
		SELECT SML_CD AS CLSS_ID,
		       SML_NM AS CLSS_NM,
		       3 AS CLSS_LEVL,
		       '소기능' AS CLSS_LEVL_NM
		 FROM  TB_ZZUNIT
		 WHERE RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
		   AND UNIT_CD = #CLSS_ID:VARCHAR#
		   AND UNIT_CD != '99999999'
		   AND SML_CD IS NOT NULL
		UNION
		SELECT UNIT_CD AS CLSS_ID,
		       (CASE WHEN UNIT_CD = '99999999' THEN '구전자문서' ELSE UNIT_NM END) AS CLSS_NM,
		       4 AS CLSS_LEVL,
		       (CASE WHEN UNIT_CD = '99999999' THEN '세분류(단위업무)' ELSE '단위업무' END) AS CLSS_LEVL_NM
		  FROM TB_ZZUNIT
		 WHERE RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
		   AND UNIT_CD = #CLSS_ID:VARCHAR#
	</select>
	
	<!-- M118 관리이력 -->
	<!-- 2014.08.01 기록관으로 이관, 기록관에서 인수는 생산시스템에서 기록관으로 인수될때의 관리 이력.. 
	     2014.08.01 기록관에서 인수 데이터 추가, 기록관으로 이관은 데이터 없음..
	     2014.08.01 기관간 인수인계 관련 정보 수정.. 기관간인수인계 시에는 인수 확정 일이 REG_DTIME 으로 들어감..
	     2014.08.02 담당 주무관님과 표준과 주무관님 협의에 의해 관리이력은 관리일시, 행위자 유형이 없으면 의미 없는 데이터이므로 둘중에 하나라도 없으면 이력에서 제외..
	     2014.08.04 등록인수 기록물 관리기관에서 등록으로 추가.. -->
	<select id="SelectArrManagementHistoryCon" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT F.EVENT_TYPE, F.EVENT_DESCRIPTION
		     , F.EVENT_DATE_TIME
		     , F.EVENT_CORPORATE_NAME
		     , F.EVENT_CORPORATE_CODE, F.EVENT_SECTION_NAME, F.EVENT_SECTION_CODE
		     , F.EVENT_PERSON_NAME, F.EVENT_PERSION_CODE, F.EVENT_POSITION_NAME, F.EVENT_POSITION_CODE
		     , F.CHANGED_ELEMENT_NAME_1, F.CHANGED_ELEMENT_VALUE_1, F.CHANGED_ELEMENT_NAME_2, F.CHANGED_ELEMENT_VALUE_2
		FROM (
		    (
		        SELECT P.EVENT_TYPE, P.EVENT_DESCRIPTION
				     , NVL(P.EVENT_DATE_TIME, CASE WHEN P.CREAT_SYS_CD='02' OR P.CREAT_SYS_CD='06' THEN TO_DATE('99991231235959', 'YYYYMMDDHH24MISS') ELSE P.EVENT_DATE_TIME END) as EVENT_DATE_TIME
				     , NVL(P.EVENT_CORPORATE_NAME, CASE WHEN P.CREAT_SYS_CD='02' OR P.CREAT_SYS_CD='06' THEN '기관명없음' ELSE P.EVENT_CORPORATE_NAME END) as EVENT_CORPORATE_NAME
				     , P.EVENT_CORPORATE_CODE, P.EVENT_SECTION_NAME, P.EVENT_SECTION_CODE
				     , P.EVENT_PERSON_NAME, P.EVENT_PERSION_CODE, P.EVENT_POSITION_NAME, P.EVENT_POSITION_CODE
				     , P.CHANGED_ELEMENT_NAME_1, P.CHANGED_ELEMENT_VALUE_1, P.CHANGED_ELEMENT_NAME_2, P.CHANGED_ELEMENT_VALUE_2
				  FROM
				  (
				       SELECT (CASE WHEN A.TAKE_TAKOVR_DIV_CD='1' THEN '생산기관간 인수'
				                    WHEN A.TAKE_TAKOVR_DIV_CD='2' THEN '생산기관간 인계' END) AS EVENT_TYPE
				           , '' AS EVENT_DESCRIPTION
						   
						   <!--cubrid
				           , TO_DATE(A.TAKE_TAKOVR_CREAT_DTIME, 'YYYYMMDDHH24MISS') AS EVENT_DATE_TIME
						   -->
						   
							<!--cubrid begin-->
							, cast(A.TAKE_TAKOVR_CREAT_DTIME AS datetime) AS EVENT_DATE_TIME
							<!--cubrid end-->
						   
				           , (SELECT (SELECT Y.FULL_ORG_NM FROM TB_STORG Y WHERE Y.RECORD_CENTER_ID=Z.RECORD_CENTER_ID AND Y.ORG_CD=Z.HUPPER_ORG_CD) FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID=A.RECORD_CENTER_ID AND Z.ORG_CD=A.TAKE_TAKOVR_ORG_CD) AS EVENT_CORPORATE_NAME
				           , (SELECT Z.HUPPER_ORG_CD FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID=A.RECORD_CENTER_ID AND Z.ORG_CD=A.TAKE_TAKOVR_ORG_CD) AS EVENT_CORPORATE_CODE
				           , (SELECT Z.FULL_ORG_NM FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID=A.RECORD_CENTER_ID AND Z.ORG_CD=A.TAKE_TAKOVR_ORG_CD) AS EVENT_SECTION_NAME
				           , A.TAKE_TAKOVR_ORG_CD AS EVENT_SECTION_CODE
				           , '' AS EVENT_PERSON_NAME
				           , '' AS EVENT_PERSION_CODE
				           , '' AS EVENT_POSITION_NAME
				           , '' AS EVENT_POSITION_CODE
				           , '생산부서' AS CHANGED_ELEMENT_NAME_1
				           , A.TAKE_TAKOVR_ORG_CD AS CHANGED_ELEMENT_VALUE_1
				           , '' AS CHANGED_ELEMENT_NAME_2
				           , '' AS CHANGED_ELEMENT_VALUE_2
				           , B.CREAT_SYS_CD
				       FROM  TB_RDFOLDERTAKETAKOVR A, TB_RDFOLDER B
				       WHERE A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
				       AND   A.FOLDER_ID = #FOLDER_ID:VARCHAR#
				       AND   A.TAKE_TAKOVR_DIV_CD IN ('1','2')
				       AND   A.TAKE_MNG_NO IS NOT NULL
				       AND   A.FOLDER_ID = B.FOLDER_ID
				       AND   A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
				   ) P
		    )
		    UNION ALL
		    (
		        SELECT (CASE WHEN REVIEW_OPIN='1' THEN '폐기' WHEN REVIEW_OPIN='2' THEN '보류' WHEN REVIEW_OPIN='3' THEN '보존기간재책정' END) AS EVENT_TYPE
		            , A.REVIEW_RSN AS EVENT_DESCRIPTION
					
					<!--cubrid
		            , TO_DATE(A.REVIEW_YMD||'000000', 'YYYYMMDDHH24MISS') AS EVENT_DATE_TIME
					-->

					<!--cubrid begin-->
					, TO_DATETIME(A.REVIEW_YMD||'000000', 'YYYYMMDDHH24MISS') AS EVENT_DATE_TIME
					<!--cubrid end-->
					
		            , (SELECT (SELECT Y.FULL_ORG_NM FROM TB_STORG Y WHERE Y.RECORD_CENTER_ID=Z.RECORD_CENTER_ID AND Y.ORG_CD=Z.HUPPER_ORG_CD) FROM TB_STORG Z, TB_STUSER U WHERE Z.RECORD_CENTER_ID=U.RECORD_CENTER_ID AND Z.ORG_CD=U.DEPT_CD AND U.USER_ID=A.RECORD_CHRGR_ID) AS EVENT_CORPORATE_NAME
		            , (SELECT Z.HUPPER_ORG_CD FROM TB_STORG Z, TB_STUSER U WHERE Z.RECORD_CENTER_ID=U.RECORD_CENTER_ID AND Z.ORG_CD=U.DEPT_CD AND U.USER_ID=A.RECORD_CHRGR_ID) AS EVENT_CORPORATE_CODE
		            , (SELECT O.FULL_ORG_NM FROM TB_STORG O, TB_STUSER U WHERE O.RECORD_CENTER_ID=U.RECORD_CENTER_ID AND O.ORG_CD=U.DEPT_CD AND U.USER_ID=A.RECORD_CHRGR_ID) AS EVENT_SECTION_NAME
		            , (SELECT U.DEPT_CD FROM TB_STUSER U WHERE U.USER_ID=A.RECORD_CHRGR_ID) AS EVENT_SECTION_CODE
		            , (SELECT U.USER_NM FROM TB_STUSER U WHERE U.USER_ID=A.RECORD_CHRGR_ID) AS EVENT_PERSON_NAME
		            , A.RECORD_CHRGR_ID AS EVENT_PERSION_CODE
		            , (SELECT (CASE WHEN (LENGTH(U.POS)!=0 AND LENGTH(U.RANK)!=0) THEN U.POS||','||U.RANK ELSE U.POS||U.RANK END) FROM TB_STUSER U WHERE U.USER_ID=A.RECORD_CHRGR_ID) AS EVENT_POSITION_NAME
		            , '' AS EVENT_POSITION_CODE
		            , '보존기간' AS CHANGED_ELEMENT_NAME_1
		            , (CASE WHEN REVIEW_OPIN='3' THEN A.CUR_PRESV_TERM_CD END) AS CHANGED_ELEMENT_VALUE_1
		            , '보존기간책정근거' AS CHANGED_ELEMENT_NAME_2
		            , (CASE WHEN REVIEW_OPIN='3' THEN A.REVIEW_RSN END) AS CHANGED_ELEMENT_VALUE_2
		        FROM  TB_DFDISUSEOPINHIST A, TB_RDFOLDER B
		        WHERE A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
		        AND   A.FOLDER_ID = #FOLDER_ID:VARCHAR#
		        AND   A.REVIEW_OPIN IN ('1','2','3')
		        AND   A.FOLDER_ID = B.FOLDER_ID
		    )
		    UNION ALL
		    (
				SELECT '기록관에서 인수' AS EVENT_TYPE,
				       '' AS EVENT_DESCRIPTION,
					   
					   <!--cubrid
				       TO_DATE(C.TAKE_YMD||'000000', 'YYYYMMDDHH24MISS') AS EVENT_DATE_TIME,
					   -->

						<!--cubrid begin-->
						TO_DATETIME(C.TAKE_YMD||'000000', 'YYYYMMDDHH24MISS') AS EVENT_DATE_TIME,
						<!--cubrid end-->
					   
				       (SELECT (SELECT E.FULL_ORG_NM FROM TB_STORG E WHERE E.RECORD_CENTER_ID = D.RECORD_CENTER_ID AND E.ORG_CD = D.HUPPER_ORG_CD) FROM TB_STORG D WHERE D.RECORD_CENTER_ID = C.RECORD_CENTER_ID AND D.ORG_CD = C.TAKE_ORG_CD) AS EVENT_CORPORATE_NAME,
				       (SELECT D.HUPPER_ORG_CD FROM TB_STORG D WHERE D.RECORD_CENTER_ID = C.RECORD_CENTER_ID AND D.ORG_CD = C.TAKE_ORG_CD) AS EVENT_CORPORATE_CODE,
				       (SELECT D.FULL_ORG_NM FROM TB_STORG D WHERE D.RECORD_CENTER_ID = C.RECORD_CENTER_ID AND D.ORG_CD = C.TAKE_ORG_CD) AS EVENT_SECTION_NAME,
				       C.TAKE_ORG_CD AS EVENT_SECTION_CODE,
				       C.TAKE_USER_NM AS EVENT_PERSON_NAME,
				       C.TAKE_USER_ID AS EVENT_PERSION_CODE,
				       C.TAKE_USER_POS_NM AS EVENT_POSITION_NAME,
				       '' AS EVENT_POSITION_CODE,
				       '' AS CHANGED_ELEMENT_NAME_1,
		               '' AS CHANGED_ELEMENT_VALUE_1,
				       '' AS CHANGED_ELEMENT_NAME_2,
		               '' AS CHANGED_ELEMENT_VALUE_2
				  FROM TB_TKFOLDER A,
				       TB_RDFOLDER B,
				       TB_TKORGTAKEPLAN C
				 WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
				   AND A.FOLDER_TAKE_SEQ = B.FOLDER_TAKE_SEQ
				   AND A.RECORD_CENTER_ID = C.RECORD_CENTER_ID
				   AND A.TAKE_YYYY = C.TAKE_YYYY
				   AND A.TAKE_ORG_CD = C.TAKE_ORG_CD
				   AND A.CREAT_SYS_CD = C.CREAT_SYS_CD
				   AND A.TAKE_SNO = C.TAKE_SNO
				   AND B.CREAT_SYS_CD != '03'
				   AND C.TAKE_YMD IS NOT NULL
				   AND B.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
				   AND B.FOLDER_ID = #FOLDER_ID:VARCHAR#
		    )
		    UNION ALL
		    (
			    SELECT '기록물 관리기관에서 등록' AS EVENT_TYPE,
				       '' AS EVENT_DESCRIPTION,
					   
					   <!--cubrid
				       TO_DATE(A.REG_DTIME, 'YYYYMMDDHH24MISS') AS EVENT_DATE_TIME,
					   -->
					   
						<!--cubrid begin-->
						cast(A.REG_DTIME AS datetime) AS EVENT_DATE_TIME,
						<!--cubrid end-->
					   
				       (SELECT (SELECT E.FULL_ORG_NM FROM TB_STORG E WHERE E.RECORD_CENTER_ID = D.RECORD_CENTER_ID AND E.ORG_CD = D.HUPPER_ORG_CD) FROM TB_STORG D WHERE D.RECORD_CENTER_ID = A.RECORD_CENTER_ID AND D.ORG_CD = NVL(A.CREAT_USER_ORG_CD, A.ORG_CD)) AS EVENT_CORPORATE_NAME,
				       (SELECT D.HUPPER_ORG_CD FROM TB_STORG D WHERE D.RECORD_CENTER_ID = A.RECORD_CENTER_ID AND D.ORG_CD = NVL(A.CREAT_USER_ORG_CD, A.ORG_CD)) AS EVENT_CORPORATE_CODE,
				       (SELECT D.FULL_ORG_NM FROM TB_STORG D WHERE D.RECORD_CENTER_ID = A.RECORD_CENTER_ID AND D.ORG_CD = NVL(A.CREAT_USER_ORG_CD, A.ORG_CD)) AS EVENT_SECTION_NAME,
				       A.CREAT_USER_ORG_CD AS EVENT_SECTION_CODE,
				       A.CREAT_USER_NM AS EVENT_PERSON_NAME,
				       A.CREAT_USER_ID AS EVENT_PERSION_CODE,
				       A.CREAT_USER_POS_RANK_NM AS EVENT_POSITION_NAME,
				       '' AS EVENT_POSITION_CODE,
				       '' AS CHANGED_ELEMENT_NAME_1,
		               '' AS CHANGED_ELEMENT_VALUE_1,
				       '' AS CHANGED_ELEMENT_NAME_2,
		               '' AS CHANGED_ELEMENT_VALUE_2
				  FROM TB_RDFOLDER A
				 WHERE A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
				   AND A.FOLDER_ID = #FOLDER_ID:VARCHAR#
				   AND A.CREAT_SYS_CD = '03'
		    )
		    UNION ALL
		    (
			    SELECT '기록관간 인수' AS EVENT_TYPE,
				       '' AS EVENT_DESCRIPTION,
					   
					   <!--cubrid
				       TO_DATE(A.TAKE_END_YMD||'000000', 'YYYYMMDDHH24MISS') AS EVENT_DATE_TIME,
					   -->
					   
						<!--cubrid begin-->
						 TO_DATETIME(A.TAKE_END_YMD||'000000', 'YYYYMMDDHH24MISS') AS EVENT_DATE_TIME,
						<!--cubrid end-->
					   
				       A.TAKE_REP_NM AS EVENT_CORPORATE_NAME,
				       A.TAKE_REP_CD AS EVENT_CORPORATE_CODE,
				       '' AS EVENT_SECTION_NAME,
				       '' AS EVENT_SECTION_CODE,
				       A.TAKE_USER_NM AS EVENT_PERSON_NAME,
				       '' AS EVENT_PERSION_CODE,
				       '' AS EVENT_POSITION_NAME,
				       '' AS EVENT_POSITION_CODE,
				       '' AS CHANGED_ELEMENT_NAME_1,
				       '' AS CHANGED_ELEMENT_VALUE_1,
				       '' AS CHANGED_ELEMENT_NAME_2,
				       '' AS CHANGED_ELEMENT_VALUE_2
				  FROM TB_DFTAKEPLAN A,
				       TB_RCTAKEFOLDERLIST B
				 WHERE A.TAKE_REP_CD = B.TAKE_REP_CD
				   AND A.TAKE_YYYY = B.TAKE_YYYY
				   AND A.TAKE_SNO = B.TAKE_SNO
				   AND A.TAKE_PROG_STATE_CD = '04'
				   AND A.TAKE_END_YMD IS NOT NULL
				   AND B.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
				   AND B.RD_FOLDER_ID = #FOLDER_ID:VARCHAR#
		    )
		) F
		ORDER BY F.EVENT_DATE_TIME
	</select>
	
	<!-- M147 보존이력 -->
	<select id="SelectArrPreservationHistoryCon" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT F.ACTION_TYPE, F.ACTION_DESCRIPTION, F.ACTION_DATE_TIME
		    , F.ACTION_CORPORATE_NAME, F.ACTION_CORPORATE_CODE, F.ACTION_SECTION_NAME, F.ACTION_SECTION_CODE
		    , F.ACTION_PERSON_NAME, F.ACTION_PERSION_CODE, F.ACTION_POSITION_NAME, F.ACTION_POSITION_CODE
		FROM (
		    (
		        SELECT '매체수록(광디스크)' AS ACTION_TYPE
		            , '' AS ACTION_DESCRIPTION
					
					<!--cubrid
		            , TO_DATE(B.CHK_YMD||'000000', 'YYYYMMDDHH24MISS') AS ACTION_DATE_TIME
					-->

					<!--cubrid begin-->
					, TO_DATETIME(B.CHK_YMD||'000000', 'YYYYMMDDHH24MISS') AS ACTION_DATE_TIME
					<!--cubrid end-->
					
					
		            , (SELECT (SELECT Y.FULL_ORG_NM FROM TB_STORG Y WHERE Y.RECORD_CENTER_ID=Z.RECORD_CENTER_ID AND Y.ORG_CD=Z.HUPPER_ORG_CD) FROM TB_STORG Z, TB_STUSER U WHERE Z.RECORD_CENTER_ID=U.RECORD_CENTER_ID AND Z.ORG_CD=U.DEPT_CD AND U.USER_ID=B.CHK_USER_ID) AS ACTION_CORPORATE_NAME
		            , (SELECT Z.HUPPER_ORG_CD FROM TB_STORG Z, TB_STUSER U WHERE Z.RECORD_CENTER_ID=U.RECORD_CENTER_ID AND Z.ORG_CD=U.DEPT_CD AND U.USER_ID=B.CHK_USER_ID) AS ACTION_CORPORATE_CODE
		            , (SELECT O.FULL_ORG_NM FROM TB_STORG O, TB_STUSER U WHERE O.RECORD_CENTER_ID=U.RECORD_CENTER_ID AND O.ORG_CD=U.DEPT_CD AND U.USER_ID=B.CHK_USER_ID) AS ACTION_SECTION_NAME
		            , (SELECT U.DEPT_CD FROM TB_STUSER U WHERE U.USER_ID=B.CHK_USER_ID) AS ACTION_SECTION_CODE
		            , (SELECT U.USER_NM FROM TB_STUSER U WHERE U.USER_ID=B.CHK_USER_ID) AS ACTION_PERSON_NAME
		            , B.CHK_USER_ID AS ACTION_PERSION_CODE
		            , (SELECT (CASE WHEN (LENGTH(U.POS)!=0 AND LENGTH(U.RANK)!=0) THEN U.POS||','||U.RANK ELSE U.POS||U.RANK END) FROM TB_STUSER U WHERE U.USER_ID=B.CHK_USER_ID) AS ACTION_POSITION_NAME
		            , '' AS ACTION_POSITION_CODE
		        FROM  (SELECT * FROM TB_SROPTIDISK_FLD WHERE FOLDER_ID = #FOLDER_ID:VARCHAR#) A
		            , (SELECT * FROM TB_SROPTIDISK_MST WHERE CHK_YMD IS NOT NULL) B
		        WHERE B.RECORD_CENTER_ID = A.RECORD_CENTER_ID
		        AND   B.ORG_CD = A.ORG_CD
		        AND   B.SEQ = A.SEQ
		    )
		    UNION ALL
		    (
		        SELECT DISTINCT '매체수록(M/F)' AS ACTION_TYPE
		            , '' AS ACTION_DESCRIPTION
					
					<!--cubrid
		            , (SELECT TO_DATE(Z.PIC_REG_YMD||'000000', 'YYYYMMDDHH24MISS')
					-->

					<!--cubrid begin-->
					, (SELECT TO_DATETIME(Z.PIC_REG_YMD||'000000', 'YYYYMMDDHH24MISS')
					<!--cubrid end-->

					
					FROM TB_SRMFPIC Z WHERE Z.RECORD_CENTER_ID=B.RECORD_CENTER_ID AND Z.PIC_SNO=B.PIC_SNO) AS ACTION_DATE_TIME
		            , ' ' AS ACTION_CORPORATE_NAME
		            , ' ' AS ACTION_CORPORATE_CODE
		            , '' AS ACTION_SECTION_NAME
		            , '' AS ACTION_SECTION_CODE
		            , (SELECT Z.PIC_USER_NM FROM TB_SRMFPIC Z WHERE Z.RECORD_CENTER_ID=B.RECORD_CENTER_ID AND Z.PIC_SNO=B.PIC_SNO) AS ACTION_PERSON_NAME
		            , '' AS ACTION_PERSION_CODE
		            , '' AS ACTION_POSITION_NAME
		            , '' AS ACTION_POSITION_CODE
		        FROM  TB_RDFOLDER A
		            , TB_SRMFPICDETL B
		        WHERE A.FOLDER_ID = #FOLDER_ID:VARCHAR#
		        AND   A.MF_PIC_STATE_CD = '3'
		        AND   A.FOLDER_ID = B.FOLDER_ID
		        AND   A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
		        AND   EXISTS (SELECT 1 FROM TB_SRMFPIC Z WHERE Z.RECORD_CENTER_ID=B.RECORD_CENTER_ID AND Z.PIC_SNO=B.PIC_SNO AND Z.PIC_REG_YMD IS NOT NULL)
		    )
		    UNION ALL
		    (
		        SELECT '매체수록(아카이빙 스토리지)' AS ACTION_TYPE
		            , '' AS ACTION_DESCRIPTION
					
					<!--cubrid
		            , (SELECT TO_DATE(MAX(Y.REG_DTIME), 'YYYYMMDDHH24MISS')
					-->
					
					<!--cubrid begin-->
					, (SELECT cast(MAX(Y.REG_DTIME) AS datetime)
					<!--cubrid end-->
					
					FROM TB_RDRECORD Z, TB_STORIGNFILE Y WHERE Z.RECORD_CENTER_ID=A.RECORD_CENTER_ID AND Z.FOLDER_ID=A.FOLDER_ID AND Y.RECORD_CENTER_ID=Z.RECORD_CENTER_ID AND Y.ORIGN_ID=Z.ORIGN_ID AND Y.DOC_TYPE_CD IN ('10','S1')) AS ACTION_DATE_TIME
		            , ' ' AS ACTION_CORPORATE_NAME
		            , ' ' AS ACTION_CORPORATE_CODE
		            , '' AS ACTION_SECTION_NAME
		            , '' AS ACTION_SECTION_CODE
		            , '' AS ACTION_PERSON_NAME
		            , '' AS ACTION_PERSION_CODE
		            , '' AS ACTION_POSITION_NAME
		            , '' AS ACTION_POSITION_CODE
		        FROM  TB_RDFOLDER A
		        WHERE A.FOLDER_ID = #FOLDER_ID:VARCHAR#
		        AND   EXISTS (SELECT 1 FROM TB_RDRECORD Z, TB_STORIGNFILE Y, TB_STMEDIUM X WHERE Z.RECORD_CENTER_ID=A.RECORD_CENTER_ID AND Z.FOLDER_ID=A.FOLDER_ID AND Y.RECORD_CENTER_ID=Z.RECORD_CENTER_ID AND Y.ORIGN_ID=Z.ORIGN_ID AND Y.DOC_TYPE_CD IN ('10','S1') AND Y.RECORD_CENTER_ID=X.RECORD_CENTER_ID AND X.MEDIUM_ID=Y.MEDIUM_ID AND X.MEDIUM_CD='02')
		    )
		    UNION ALL
		    (
				SELECT '바이러스검출' AS ACTION_TYPE,
				       TRIM(TO_CHAR(ACTION_DESCRIPTION,'9,999,999')) || '건 검출' AS ACTION_DESCRIPTION,
				       ACTION_DATE_TIME,
				       ACTION_CORPORATE_NAME,
				       ACTION_CORPORATE_CODE,
				       ACTION_SECTION_NAME,
				       ACTION_SECTION_CODE,
				       ACTION_PERSON_NAME,
				       ACTION_PERSION_CODE,
				       ACTION_POSITION_NAME,
				       '' AS ACTION_POSITION_CODE
				  FROM
				  (
						SELECT COUNT(1) AS ACTION_DESCRIPTION,
								<!--cubrid
						       MAX(TO_DATE(VIRUS_INFECTION_DTIME,'YYYYMMDDHH24MISS')) AS ACTION_DATE_TIME,
							   -->
							   
								<!--cubrid begin-->
								MAX(cast(VIRUS_INFECTION_DTIME AS datetime)) AS ACTION_DATE_TIME,
								<!--cubrid end-->
							   
						       MAX(ACTION_CORPORATE_NAME) AS ACTION_CORPORATE_NAME,
						       MAX(ACTION_CORPORATE_CODE) AS ACTION_CORPORATE_CODE,
						       MAX(ACTION_SECTION_NAME) AS ACTION_SECTION_NAME,
						       MAX(ACTION_SECTION_CODE) AS ACTION_SECTION_CODE,
						       MAX(ACTION_PERSON_NAME) AS ACTION_PERSON_NAME,
						       MAX(ACTION_PERSION_CODE) AS ACTION_PERSION_CODE,
						       MAX(ACTION_POSITION_NAME) AS ACTION_POSITION_NAME
						  FROM
						  (
								SELECT RECORD_CENTER_ID,
								       RECORD_ID,
								       MAX(VIRUS_INFECTION_DTIME) AS VIRUS_INFECTION_DTIME,
								       MAX(REQUEST_CORP_NM) AS ACTION_CORPORATE_NAME,
								       MAX(REQUEST_CORP_CD) AS ACTION_CORPORATE_CODE,
								       MAX(REQUEST_ORG_NM) AS ACTION_SECTION_NAME,
								       MAX(REQUEST_ORG_CD) AS ACTION_SECTION_CODE,
								       MAX(REQUEST_USER_NM) AS ACTION_PERSON_NAME,
								       MAX(REQUEST_USER_ID) AS ACTION_PERSION_CODE,
								       MAX(REQUEST_USER_POS_RANK_NM) AS ACTION_POSITION_NAME
								  FROM
								  (
										SELECT B.RECORD_CENTER_ID,
										       B.RECORD_ID,
										       C.VIRUS_INFECTION_DTIME,
										       C.REQUEST_CORP_NM,
										       C.REQUEST_CORP_CD,
										       C.REQUEST_ORG_NM,
										       C.REQUEST_ORG_CD,
										       C.REQUEST_USER_NM,
										       C.REQUEST_USER_ID,
										       C.REQUEST_USER_POS_RANK_NM
										  FROM TB_RDFOLDER A,
										       TB_RDRECORD B,
										       TB_TKVIRUSCHECK C
										 WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
										   AND A.FOLDER_ID = B.FOLDER_ID
										   AND B.RECORD_CENTER_ID = C.RECORD_CENTER_ID
										   AND B.RECORD_TAKE_SEQ = C.RECORD_TAKE_SEQ
										   AND A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
										   AND A.FOLDER_ID = #FOLDER_ID:VARCHAR#
										   AND C.VIRUS_CHECK_FLAG = '1'
										   AND C.VIRUS_INFECTION_FLAG = '1'
										UNION ALL
										SELECT B.RECORD_CENTER_ID,
										       B.RECORD_ID,
										       D.VIRUS_INFECTION_DTIME,
										       D.REQUEST_CORP_NM,
										       D.REQUEST_CORP_CD,
										       D.REQUEST_ORG_NM,
										       D.REQUEST_ORG_CD,
										       D.REQUEST_USER_NM,
										       D.REQUEST_USER_ID,
										       D.REQUEST_USER_POS_RANK_NM
										  FROM TB_RDFOLDER A,
										       TB_RDRECORD B,
										       TB_STORIGNFILE C,
										       TB_STORIGNVIRUSCHK D
										 WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
										   AND A.FOLDER_ID = B.FOLDER_ID
										   AND B.RECORD_CENTER_ID = C.RECORD_CENTER_ID
										   AND B.ORIGN_ID = C.ORIGN_ID
										   AND C.ORIGN_FILE_ID = D.FILE_ID
										   AND A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
										   AND A.FOLDER_ID = #FOLDER_ID:VARCHAR#
										   AND D.FILE_TYPE = 'OF'
										   AND D.VIRUS_CHECK_FLAG = '1'
										   AND D.VIRUS_INFECTION_FLAG = '1'
										UNION ALL
										SELECT B.RECORD_CENTER_ID,
										       B.RECORD_ID,
										       E.VIRUS_INFECTION_DTIME,
										       E.REQUEST_CORP_NM,
										       E.REQUEST_CORP_CD,
										       E.REQUEST_ORG_NM,
										       E.REQUEST_ORG_CD,
										       E.REQUEST_USER_NM,
										       E.REQUEST_USER_ID,
										       E.REQUEST_USER_POS_RANK_NM
										  FROM TB_RDFOLDER A,
										       TB_RDRECORD B,
										       TB_STORIGNFILE C,
										       TB_STORIGNPDFA1FILE D,
										       TB_STORIGNVIRUSCHK E
										 WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
										   AND A.FOLDER_ID = B.FOLDER_ID
										   AND B.RECORD_CENTER_ID = C.RECORD_CENTER_ID
										   AND B.ORIGN_ID = C.ORIGN_ID
										   AND C.RECORD_CENTER_ID = D.RECORD_CENTER_ID
										   AND C.ORIGN_ID = D.ORIGN_ID
										   AND C.DOC_TYPE_CD = D.DOC_TYPE_CD
										   AND C.DOC_TYPE_SNO = D.DOC_TYPE_SNO
										   AND D.PDF_A1_FILE_ID = E.FILE_ID
										   AND A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
										   AND A.FOLDER_ID = #FOLDER_ID:VARCHAR#
										   AND E.FILE_TYPE = 'PF'
										   AND E.VIRUS_CHECK_FLAG = '1'
										   AND E.VIRUS_INFECTION_FLAG = '1'
								   )
								GROUP BY RECORD_CENTER_ID, RECORD_ID
						   )
				   )
				 WHERE ACTION_DESCRIPTION <![CDATA[<>]]> 0
		    )
		    UNION ALL
		    (
				SELECT '바이러스치료' AS ACTION_TYPE,
				       TRIM(TO_CHAR(ACTION_DESCRIPTION,'9,999,999')) || '건 치료' AS ACTION_DESCRIPTION,
				       ACTION_DATE_TIME,
				       ACTION_CORPORATE_NAME,
				       ACTION_CORPORATE_CODE,
				       ACTION_SECTION_NAME,
				       ACTION_SECTION_CODE,
				       ACTION_PERSON_NAME,
				       ACTION_PERSION_CODE,
				       ACTION_POSITION_NAME,
				       '' AS ACTION_POSITION_CODE
				  FROM
				  (
						SELECT COUNT(1) AS ACTION_DESCRIPTION,
								<!--cubrid
						       MAX(TO_DATE(VIRUS_CLEAN_APPLY_DTIME,'YYYYMMDDHH24MISS')) AS ACTION_DATE_TIME,
							   -->

								<!--cubrid begin-->
								MAX(cast(VIRUS_CLEAN_APPLY_DTIME AS datetime)) AS ACTION_DATE_TIME,
								<!--cubrid end-->
							   
						       MAX(ACTION_CORPORATE_NAME) AS ACTION_CORPORATE_NAME,
						       MAX(ACTION_CORPORATE_CODE) AS ACTION_CORPORATE_CODE,
						       MAX(ACTION_SECTION_NAME) AS ACTION_SECTION_NAME,
						       MAX(ACTION_SECTION_CODE) AS ACTION_SECTION_CODE,
						       MAX(ACTION_PERSON_NAME) AS ACTION_PERSON_NAME,
						       MAX(ACTION_PERSION_CODE) AS ACTION_PERSION_CODE,
						       MAX(ACTION_POSITION_NAME) AS ACTION_POSITION_NAME
						  FROM
						  (
								SELECT RECORD_CENTER_ID,
								       RECORD_ID,
								       MAX(VIRUS_CLEAN_APPLY_DTIME) AS VIRUS_CLEAN_APPLY_DTIME,
								       MAX(REQUEST_CORP_NM) AS ACTION_CORPORATE_NAME,
								       MAX(REQUEST_CORP_CD) AS ACTION_CORPORATE_CODE,
								       MAX(REQUEST_ORG_NM) AS ACTION_SECTION_NAME,
								       MAX(REQUEST_ORG_CD) AS ACTION_SECTION_CODE,
								       MAX(REQUEST_USER_NM) AS ACTION_PERSON_NAME,
								       MAX(REQUEST_USER_ID) AS ACTION_PERSION_CODE,
								       MAX(REQUEST_USER_POS_RANK_NM) AS ACTION_POSITION_NAME
								  FROM
								  (
										SELECT A.RECORD_CENTER_ID,
										       A.RECORD_ID,
										       B.VIRUS_CLEAN_APPLY_DTIME,
										       B.REQUEST_CORP_NM,
										       B.REQUEST_CORP_CD,
										       B.REQUEST_ORG_NM,
										       B.REQUEST_ORG_CD,
										       B.REQUEST_USER_NM,
										       B.REQUEST_USER_ID,
										       B.REQUEST_USER_POS_RANK_NM
										  FROM TB_RDRECORD A,
										       TB_TKVIRUSCHECK B
										 WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
										   AND A.RECORD_TAKE_SEQ = B.RECORD_TAKE_SEQ
										   AND A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
										   AND A.FOLDER_ID = #FOLDER_ID:VARCHAR#
										   AND B.VIRUS_CHECK_FLAG = '1'
										   AND B.VIRUS_CLEAN_APPLY_FLAG = '1'
										UNION ALL
										SELECT B.RECORD_CENTER_ID,
										       B.RECORD_ID,
										       D.VIRUS_CLEAN_APPLY_DTIME,
										       D.REQUEST_CORP_NM,
										       D.REQUEST_CORP_CD,
										       D.REQUEST_ORG_NM,
										       D.REQUEST_ORG_CD,
										       D.REQUEST_USER_NM,
										       D.REQUEST_USER_ID,
										       D.REQUEST_USER_POS_RANK_NM
										  FROM TB_RDFOLDER A,
										       TB_RDRECORD B,
										       TB_STORIGNFILE C,
										       TB_STORIGNVIRUSCHK D
										 WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
										   AND A.FOLDER_ID = B.FOLDER_ID
										   AND B.RECORD_CENTER_ID = C.RECORD_CENTER_ID
										   AND B.ORIGN_ID = C.ORIGN_ID
										   AND C.ORIGN_FILE_ID = D.FILE_ID
										   AND A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
										   AND A.FOLDER_ID = #FOLDER_ID:VARCHAR#
										   AND D.FILE_TYPE = 'OF'
										   AND D.VIRUS_CHECK_FLAG = '1'
										   AND D.VIRUS_CLEAN_APPLY_FLAG = '1'
										UNION ALL
										SELECT B.RECORD_CENTER_ID,
										       B.RECORD_ID,
										       E.VIRUS_CLEAN_APPLY_DTIME,
										       E.REQUEST_CORP_NM,
										       E.REQUEST_CORP_CD,
										       E.REQUEST_ORG_NM,
										       E.REQUEST_ORG_CD,
										       E.REQUEST_USER_NM,
										       E.REQUEST_USER_ID,
										       E.REQUEST_USER_POS_RANK_NM
										  FROM TB_RDFOLDER A,
										       TB_RDRECORD B,
										       TB_STORIGNFILE C,
										       TB_STORIGNPDFA1FILE D,
										       TB_STORIGNVIRUSCHK E
										 WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
										   AND A.FOLDER_ID = B.FOLDER_ID
										   AND B.RECORD_CENTER_ID = C.RECORD_CENTER_ID
										   AND B.ORIGN_ID = C.ORIGN_ID
										   AND C.RECORD_CENTER_ID = D.RECORD_CENTER_ID
										   AND C.ORIGN_ID = D.ORIGN_ID
										   AND C.DOC_TYPE_CD = D.DOC_TYPE_CD
										   AND C.DOC_TYPE_SNO = D.DOC_TYPE_SNO
										   AND D.PDF_A1_FILE_ID = E.FILE_ID
										   AND A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
										   AND A.FOLDER_ID = #FOLDER_ID:VARCHAR#
										   AND E.FILE_TYPE = 'PF'
										   AND E.VIRUS_CHECK_FLAG = '1'
										   AND E.VIRUS_CLEAN_APPLY_FLAG = '1'
								   )
								GROUP BY RECORD_CENTER_ID, RECORD_ID
						   )
				   )
				 WHERE ACTION_DESCRIPTION <![CDATA[<>]]> 0
		    )
		    UNION ALL
		    (
				SELECT ACTION_TYPE,
				       ACTION_DESCRIPTION,
				       ACTION_DATE_TIME,
				       ACTION_CORPORATE_NAME,
				       ACTION_CORPORATE_CODE,
				       ACTION_SECTION_NAME,
				       ACTION_SECTION_CODE,
				       ACTION_PERSON_NAME,
				       ACTION_PERSION_CODE,
				       ACTION_POSITION_NAME,
				       ACTION_POSITION_CODE
				  FROM
				  (
						SELECT '훼손사항' AS ACTION_TYPE,
						       COUNT(1) AS CNT,
						       TRIM(TO_CHAR(COUNT(1),'9,999,999')) || '건 훼손'  AS ACTION_DESCRIPTION,
							   
							   <!--cubrid
						       MAX(TO_DATE(C.REG_DTIME, 'YYYYMMDDHH24MISS')) AS ACTION_DATE_TIME,
							   -->

								<!--cubrid begin-->
								MAX(cast(C.REG_DTIME AS datetime)) AS ACTION_DATE_TIME,
								<!--cubrid end-->
							   
						       MAX(C.REQUEST_CORP_NM) AS ACTION_CORPORATE_NAME,
						       MAX(C.REQUEST_CORP_CD) AS ACTION_CORPORATE_CODE,
						       MAX(C.REQUEST_ORG_NM) AS ACTION_SECTION_NAME,
						       MAX(C.REQUEST_ORG_CD) AS ACTION_SECTION_CODE,
						       MAX(C.REQUEST_USER_NM) AS ACTION_PERSON_NAME,
						       MAX(C.REQUEST_USER_ID) AS ACTION_PERSION_CODE,
						       MAX(C.REQUEST_USER_POS_RANK_NM) AS ACTION_POSITION_NAME,
						       '' AS ACTION_POSITION_CODE
						  FROM TB_RDFOLDER A,
						       TB_RDRECORD B,
						       TB_RDRECORD_RESTORE C
						 WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
						   AND A.FOLDER_ID = B.FOLDER_ID
						   AND B.RECORD_CENTER_ID = C.RECORD_CENTER_ID
						   AND B.RECORD_ID = C.RECORD_ID
						   AND A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
						   AND A.FOLDER_ID = #FOLDER_ID:VARCHAR#
						   AND C.DAMG_FLAG = '1'
						UNION ALL
						SELECT '복원' AS ACTION_TYPE,
						       COUNT(1) AS CNT,
						       TRIM(TO_CHAR(COUNT(1),'9,999,999')) || '건 복원' AS ACTION_DESCRIPTION,
							   
							   <!--cubrid
						       MAX(TO_DATE(C.RESTR_HANDL_YMD||'000000', 'YYYYMMDDHH24MISS')) AS ACTION_DATE_TIME,
							   -->

								<!--cubrid begin-->
								MAX(TO_DATETIME(C.RESTR_HANDL_YMD||'000000', 'YYYYMMDDHH24MISS')) AS ACTION_DATE_TIME,
								<!--cubrid end-->
							   
						       MAX(C.REQUEST_CORP_NM) AS ACTION_CORPORATE_NAME,
						       MAX(C.REQUEST_CORP_CD) AS ACTION_CORPORATE_CODE,
						       MAX(C.REQUEST_ORG_NM) AS ACTION_SECTION_NAME,
						       MAX(C.REQUEST_ORG_CD) AS ACTION_SECTION_CODE,
						       MAX(C.REQUEST_USER_NM) AS ACTION_PERSON_NAME,
						       MAX(C.REQUEST_USER_ID) AS ACTION_PERSION_CODE,
						       MAX(C.REQUEST_USER_POS_RANK_NM) AS ACTION_POSITION_NAME,
						       '' AS ACTION_POSITION_CODE
						  FROM TB_RDFOLDER A,
						       TB_RDRECORD B,
						       TB_RDRECORD_RESTORE C
						 WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
						   AND A.FOLDER_ID = B.FOLDER_ID
						   AND B.RECORD_CENTER_ID = C.RECORD_CENTER_ID
						   AND B.RECORD_ID = C.RECORD_ID
						   AND A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
						   AND A.FOLDER_ID = #FOLDER_ID:VARCHAR#
						   AND C.RESTR_HANDL_YMD IS NOT NULL
				   )
				 WHERE CNT <![CDATA[<>]]> 0
		    )
		    UNION ALL
		    (
		        SELECT '보존포맷변환' AS ACTION_TYPE
		            , '' AS ACTION_DESCRIPTION
					
					<!--cubrid
		            , TO_DATE(A.TRANS_FIN_DTIME, 'YYYYMMDDHH24MISS') AS ACTION_DATE_TIME
					-->

					<!--cubrid begin-->
					, cast(A.TRANS_FIN_DTIME AS datetime) AS ACTION_DATE_TIME
					<!--cubrid end-->
					
		            , B.REQUEST_CORP_NM AS ACTION_CORPORATE_NAME
		            , B.REQUEST_CORP_CD AS ACTION_CORPORATE_CODE
		            , B.REQUEST_ORG_NM AS ACTION_SECTION_NAME
		            , B.REQUEST_ORG_CD AS ACTION_SECTION_CODE
		            , B.REQUEST_USER_NM AS ACTION_PERSON_NAME
		            , B.REQUEST_USER_ID AS ACTION_PERSION_CODE
		            , B.REQUEST_USER_POS_RANK_NM AS ACTION_POSITION_NAME
		            , '' AS ACTION_POSITION_CODE
		        FROM  TB_STFOLDERNEOFILE A,
		              (SELECT R.* FROM TB_STREQTRANS R WHERE R.NEO_GUBUN = '1' AND R.REQUEST_STATUS = 'C' AND R.REFLECTION_FLAG = 'O') B
		        WHERE A.FOLDER_ID = B.FOLDER_ID
		        AND   A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
		        AND   A.FOLDER_ID = #FOLDER_ID:VARCHAR#
		        AND   A.DEL_FLAG = '0'
		    )
		) F
		ORDER BY F.ACTION_DATE_TIME
	</select>
	
	<!-- M160 관계정보 -->
	<select id="SelectArrRelationCon" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT '참조' AS REL_TYPE
		    , A.REL_TRGT_ID
		    , A.REL_DESCR
		FROM  TB_RDFOLDERREL A
        WHERE A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
        AND   A.FOLDER_ID = #FOLDER_ID:VARCHAR#
        AND   A.REL_TRGT_ID IS NOT NULL
		ORDER BY A.RECORD_CENTER_ID, A.FOLDER_ID, A.REL_TYPE_CD, A.REL_SEQ
	</select>
	
</sqlMap>