<?xml version="1.0" encoding="EUC-KR" ?>

<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="RecordSchema">
	
	<!-- 기록물건 공통정보 조회 -->
	<!-- M22 기록식별자, M35 기록물명, M46 전자기록물여부, M76 생산이력, M105 보존장소, M106 권한 -->
	<resultMap id="SelectRecordInfoMap_resultMap" class="java.util.HashMap">
		<result property="RECORD_CENTER_ID" 	column="RECORD_CENTER_ID"/>
		<result property="RECORD_ID"			column="RECORD_ID"/>
		<result property="FOLDER_ID"			column="FOLDER_ID"/>
		<result property="RECORD_KEY"			column="RECORD_KEY"/>
		<result property="CREAT_SYS_RECORD_ID"	column="CREAT_SYS_RECORD_ID"/>
		<result property="RECORD_CENTER_ORG_CD"	column="RECORD_CENTER_ORG_CD"/>
		<result property="RECORD_CENTER_ORG_NM"	column="RECORD_CENTER_ORG_NM"/>
		<result property="ORG_CD"				column="ORG_CD"/>
		<result property="ORG_NM"				column="ORG_NM"/>
		<result property="TITLE"				column="TITLE"/>
		<result property="SUB_TITLE"			column="SUB_TITLE"/>
		<result property="CORCT_TITLE"			column="CORCT_TITLE"/>
		<result property="ERECORD_FLAG"			column="ERECORD_FLAG"/>
		<result property="ERECORD_NM"			column="ERECORD_NM"/>
		<result property="OPER_READ_RANGE_CD"	column="OPER_READ_RANGE_CD"/>
		<result property="OPER_READ_RANGE_NM"	column="OPER_READ_RANGE_NM"/>
		<result property="OPEN_DIV_CD"			column="OPEN_DIV_CD"/>
		<result property="OPEN_DIV_NM"			column="OPEN_DIV_NM"/>
		<result property="OPEN_GRADE"			column="OPEN_GRADE"/>
		<result property="OPEN_GRADE_NM"		column="OPEN_GRADE_NM"/>
		<result property="PART_OPEN_RSN"		column="PART_OPEN_RSN"/>
		<result property="OPEN_LIMIT_PART"		column="OPEN_LIMIT_PART"/>
		<result property="OPEN_EXPT_DTIME"		column="OPEN_EXPT_DTIME"/>
		<result property="PROD_TYPE_CD"			column="PROD_TYPE_CD"/>
		<result property="PROD_TYPE_NM"			column="PROD_TYPE_NM"/>
		<result property="CREAT_REG_DTIME"		column="CREAT_REG_DTIME"/>
		<result property="REG_DTIME"			column="REG_DTIME"/>
		<result property="ENFORC_YMD"			column="ENFORC_YMD"/>
		<result property="RECORD_DETL_TYPE_CD"	column="RECORD_DETL_TYPE_CD"/>
		<result property="RECORD_DETL_TYPE_NM"	column="RECORD_DETL_TYPE_NM"/>
		<result property="ADJST_DESCR"			column="ADJST_DESCR"/>
		<result property="RECORD_SUMRY"			column="RECORD_SUMRY"	jdbcType="CLOB"	javaType="java.lang.String"/>
	</resultMap>
	<!-- 2014.08.06 M98 구기록물정보의 생산기관명, 문서번호 추가 -->
	<!-- 2014.09.19 업무관리시스템인 경우와 나머지인 경우 식별자 구분 관련 쿼리 변경 -->
	<!-- 2014.10.09 부서명 FULL NAME 으로.. -->
	<!-- 2015.07.13 김경수 공동형 지청 부서명도 가져올 수 있도록 수정 오류로 원복 -->
	<select id="SelectRecordInfoMap" parameterClass="java.util.HashMap" resultMap="SelectRecordInfoMap_resultMap">
		SELECT A.RECORD_CENTER_ID
		    , A.RECORD_ID
		    , A.FOLDER_ID
		    , A.CREAT_SYS_CD||'-'||A.ORG_CD||'-'||A.CREAT_YYYY||'-'
		    		||(CASE WHEN A.CREAT_SYS_CD = '01' OR A.CREAT_SYS_CD = '04' THEN A.CREAT_REG_NO ELSE SUBSTR(A.CREAT_REG_NO, 8, 6) END)
		            ||(CASE WHEN A.DTCH_REG_NO != '00' THEN ' ('||A.DTCH_REG_NO||')'
		                    WHEN (SELECT COUNT(1) FROM TB_RDRECORD B WHERE B.RECORD_CENTER_ID=A.RECORD_CENTER_ID AND B.CREAT_SYS_CD=A.CREAT_SYS_CD AND B.ORG_CD=A.ORG_CD AND B.CREAT_YYYY=A.CREAT_YYYY AND B.CREAT_REG_NO=A.CREAT_REG_NO) > 1 THEN ' ('||A.DTCH_REG_NO||')'
		               ELSE '' END) AS RECORD_KEY
		    , A.CREAT_SYS_RECORD_ID
		    , (SELECT Z.HUPPER_ORG_CD FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID=A.RECORD_CENTER_ID AND Z.ORG_CD=A.ORG_CD) AS RECORD_CENTER_ORG_CD
		    , (SELECT (SELECT Y.FULL_ORG_NM FROM TB_STORG Y WHERE Y.RECORD_CENTER_ID=Z.RECORD_CENTER_ID AND Y.ORG_CD=Z.HUPPER_ORG_CD) FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID=A.RECORD_CENTER_ID AND Z.ORG_CD=A.ORG_CD) AS RECORD_CENTER_ORG_NM
		    , A.ORG_CD
		    , (SELECT Z.FULL_ORG_NM FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID=A.RECORD_CENTER_ID AND Z.ORG_CD=A.ORG_CD) AS ORG_NM
		    , A.ORG_TITLE as TITLE
		    , A.SUB_TITLE
		    , A.CORCT_TITLE
		    , A.ERECORD_FLAG
		    , (CASE WHEN A.ERECORD_FLAG='1' THEN '전자기록물' WHEN A.ERECORD_FLAG='2' THEN '비전자기록물' WHEN A.ERECORD_FLAG='3' THEN '혼합기록물' ELSE '' END) AS ERECORD_NM
		    , A.OPER_READ_RANGE_CD
    	    , (SELECT Z.COM_CD_NM FROM TB_ZZCOMCD Z WHERE Z.COM_TYPE_CD='RD53' AND Z.COM_CD=A.OPER_READ_RANGE_CD) AS OPER_READ_RANGE_NM
    	    , A.OPEN_DIV_CD
            , (SELECT Z.COM_CD_NM FROM TB_ZZCOMCD Z WHERE Z.COM_TYPE_CD='RD05' AND Z.COM_CD=A.OPEN_DIV_CD) AS OPEN_DIV_NM
            , A.OPEN_GRADE
            , (CASE WHEN SUBSTR(A.OPEN_GRADE,1,1) = 'Y' THEN '1호,' ELSE '' END) ||
              (CASE WHEN SUBSTR(A.OPEN_GRADE,2,1) = 'Y' THEN '2호,' ELSE '' END) ||
              (CASE WHEN SUBSTR(A.OPEN_GRADE,3,1) = 'Y' THEN '3호,' ELSE '' END) ||
              (CASE WHEN SUBSTR(A.OPEN_GRADE,4,1) = 'Y' THEN '4호,' ELSE '' END) ||
              (CASE WHEN SUBSTR(A.OPEN_GRADE,5,1) = 'Y' THEN '5호,' ELSE '' END) ||
              (CASE WHEN SUBSTR(A.OPEN_GRADE,6,1) = 'Y' THEN '6호,' ELSE '' END) ||
              (CASE WHEN SUBSTR(A.OPEN_GRADE,7,1) = 'Y' THEN '7호,' ELSE '' END) ||
              (CASE WHEN SUBSTR(A.OPEN_GRADE,8,1) = 'Y' THEN '8호,' ELSE '' END) AS OPEN_GRADE_NM
            , A.PART_OPEN_RSN
            , A.OPEN_LIMIT_PART
            , TO_DATE(A.OPEN_EXPT_DTIME, 'YYYYMMDDHH24MISS') AS OPEN_EXPT_DTIME
            , (CASE WHEN A.PROD_TYPE_CD IS NOT NULL THEN A.PROD_TYPE_CD ELSE (CASE WHEN A.RECORD_REG_DIV_CD IN ('1','3','5','6','7','8') THEN '0' ELSE '1' END) END) AS PROD_TYPE_CD
            , (CASE WHEN A.PROD_TYPE_CD IS NOT NULL THEN DECODE(A.PROD_TYPE_CD,'0','생산','접수') ELSE (CASE WHEN A.RECORD_REG_DIV_CD IN ('1','3','5','6','7','8') THEN '생산' ELSE '접수' END) END) AS PROD_TYPE_NM
            , TO_DATE(A.CREAT_REG_DTIME, 'YYYYMMDDHH24MISS') AS CREAT_REG_DTIME
            , (CASE WHEN A.ERECORD_FLAG='2'  THEN TO_DATE(A.NONELECT_REG_DTIME, 'YYYYMMDDHH24MISS')
                    WHEN A.CREAT_SYS_CD='03' THEN TO_DATE(A.REG_DTIME, 'YYYYMMDDHH24MISS')
                END) AS REG_DTIME
            , TO_DATE(TRIM(ENFORC_YMD), 'YYYYMMDDHH24MISS') AS ENFORC_YMD
            , A.RECORD_DETL_TYPE_CD
            , (SELECT Z.COM_CD_NM FROM TB_ZZCOMCD Z WHERE Z.COM_TYPE_CD='RD03' AND Z.COM_CD=A.RECORD_DETL_TYPE_CD) AS RECORD_DETL_TYPE_NM
            , A.ADJST_DESCR
            , A.RECORD_SUMRY
            , A.OLD_RECORD_CREAT_ORG_NM
            , A.OLD_RECORD_DOCNO
		FROM  TB_RDRECORD A
		WHERE A.RECORD_ID = #RECORD_ID:VARCHAR#
	</select>
	
	<!-- 기록물건 공통정보 조회 -->
	<!-- 기록물철정보 -->
	<!-- 2014.08.01 M71 분류체계 유형의 구전자문서 선택값 변경으로 인하여 쿼리 수정 -->
	<select id="SelectRecordInfoMap_Folder" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT A.RECORD_CENTER_ID
		    , A.FOLDER_ID
            , A.CREAT_SYS_CD||'-'||A.ORG_CD||'-'||A.CLSS_ID||'-'||A.CREAT_YYYY||'-'||A.FOLDER_REG_SEQ
                    ||(CASE WHEN A.HO_NO != '001' THEN ' ('||A.HO_NO||')'
                            WHEN (SELECT COUNT(1) FROM TB_RDFOLDER B WHERE B.RECORD_CENTER_ID=A.RECORD_CENTER_ID AND B.CREAT_SYS_CD=A.CREAT_SYS_CD AND B.ORG_CD=A.ORG_CD AND B.CLSS_ID=A.CLSS_ID AND B.CREAT_YYYY=A.CREAT_YYYY AND B.FOLDER_REG_SEQ=A.FOLDER_REG_SEQ) > 1 THEN ' ('||A.HO_NO||')'
                            ELSE '' END) AS FOLDER_KEY
		    , A.CREAT_SYS_CD
		    , (CASE WHEN A.CREAT_SYS_CD='01' THEN '업무관리시스템(08년이전)'
		            WHEN A.CREAT_SYS_CD='02' THEN '전자문서시스템'
		            WHEN A.CREAT_SYS_CD='03' THEN '기록관리시스템'
		            WHEN A.CREAT_SYS_CD='04' THEN '업무관리시스템(08년이후)'
		            WHEN A.CREAT_SYS_CD='06' THEN '구전자문서시스템'
		            WHEN A.CREAT_SYS_CD='05' THEN (CASE WHEN A.VRMS_FLAG='1' THEN (CASE WHEN A.EXT_SYS_CD='01' THEN '업무관리시스템(08년이전)' WHEN A.EXT_SYS_CD='02' THEN '전자문서시스템' ELSE '기록관리시스템' END) WHEN A.MIG_FLAG='1' THEN '자료관시스템' ELSE '행정DB구축' END )
		        END) AS CREAT_SYS_NM
		    , A.ORG_TITLE as TITLE
		    , A.CLSS_DIV_CD
            , (CASE WHEN A.CLSS_DIV_CD='1' THEN 'BRM' 
                    WHEN A.CLSS_DIV_CD='2' AND A.CREAT_SYS_CD != '06' THEN '기록물분류기준' 
                    WHEN A.CLSS_DIV_CD='2' AND A.CREAT_SYS_CD = '06' THEN '공문서분류체계' 
                    ELSE '' 
                END) AS CLSS_DIV_NM
		    , A.CLSS_ID
		    , A.FOLDER_TYPE_DIV_CD
		    , (CASE WHEN A.FOLDER_TYPE_DIV_CD='1' THEN '일반문서'
			        WHEN A.FOLDER_TYPE_DIV_CD='2' THEN '도면/지도류'
			        WHEN A.FOLDER_TYPE_DIV_CD='3' THEN '사진필름류'
			        WHEN A.FOLDER_TYPE_DIV_CD='4' THEN '녹음동영상류'
			        WHEN A.FOLDER_TYPE_DIV_CD='5' THEN '카드류' END) AS FOLDER_TYPE_DIV_NM
		FROM  TB_RDFOLDER A
		WHERE A.FOLDER_ID = #FOLDER_ID:VARCHAR#
	</select>
	
	<!-- M12 생산자 -->
	<!-- 누락정보(기관코드) 추가, 생산자유형 변경.. 2014.08.05 이옥찬.. 
	     생산자 정보는.. 각 행위자 유형의 마지막 행위자만 불러오는 걸로.. 쿼리에서는 순번 포함 조회.. 로직에서 순번 1인 애들만..-->
	<!-- 생산자 부서명.. FULLNAME 으로.. -->
	<select id="SelectArrCreatorCon" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT A.AGENT_TYPE_CD
		    , (SELECT Z.COM_CD_NM FROM TB_ZZCOMCD Z WHERE Z.COM_TYPE_CD='RD12' AND Z.COM_CD=A.AGENT_TYPE_CD) AS AGENT_TYPE_NM
		    , (SELECT (SELECT Y.FULL_ORG_NM FROM TB_STORG Y WHERE Y.RECORD_CENTER_ID=Z.RECORD_CENTER_ID AND Y.ORG_CD=Z.HUPPER_ORG_CD) FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID=A.RECORD_CENTER_ID AND Z.ORG_CD=A.AGENT_ORG_CD) AS HUPPER_ORG_NM
		    , (SELECT Z.HUPPER_ORG_CD FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID=A.RECORD_CENTER_ID AND Z.ORG_CD=A.AGENT_ORG_CD) AS HUPPER_ORG_CD
		    , NVL(CASE WHEN A.AGENT_ORG_CD IS NULL THEN A.AGENT_ORG_NM 
		               ELSE (SELECT Z.FULL_ORG_NM FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID = A.RECORD_CENTER_ID AND Z.ORG_CD = A.AGENT_ORG_CD)
		          END, A.AGENT_ORG_NM) AS AGENT_ORG_NM
		    , A.AGENT_ORG_CD
		    , A.AGENT_NM
		    , A.AGENT_ID
		    , A.AGENT_POS_RANK_NM
		    , TRIM(TO_CHAR(ROW_NUMBER() OVER (PARTITION BY AGENT_TYPE_CD ORDER BY AGENT_TYPE_CD, AGENT_SNO DESC))) AS SORT
		FROM  TB_RDRECORDCREAT A
		WHERE A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
		AND   A.RECORD_ID = #RECORD_ID:VARCHAR#
		AND   (A.AGENT_TYPE_CD IN ('01','02','03','05','06','08','09','22') OR (A.AGENT_TYPE_CD = '28' AND (AGENT_DUTY_TYPE_CD != '07' OR AGENT_DUTY_TYPE_CD IS NULL)))
		ORDER BY A.AGENT_SNO
	</select>
	
	<!-- M40 기술 -->
	<select id="SelectArrDescriptionCon" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		
	</select>
	
	<!-- M43 주제 -->
	<select id="SelectArrSubjectCon" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		
	</select>
	
	<!-- M58 크기 (M47 저장정보 내부) -->
	<select id="SelectStorageCon_ExtentCon" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <!--cubrid select-->		
        SELECT TO_CHAR(NVL(SUM(EFILE_SUB_CNT),0)) AS EFILE_SUB_CNT
            , TO_CHAR(NVL(SUM(EFILE_SIZE),0)) AS EFILE_SIZE
            , TO_CHAR(NVL(SUM(RECORD_PAGE_CNT),0)) AS RECORD_PAGE_CNT
            , TO_CHAR(NVL(SUM(EFILE_CNT),0)) AS EFILE_CNT
            , TO_CHAR(NVL(SUM(PDF_A1_FILE_CNT),0)) AS PDF_A1_FILE_CNT
        FROM (
            (
                SELECT COUNT(1) AS EFILE_SUB_CNT, 0 AS EFILE_SIZE, 0 AS RECORD_PAGE_CNT, 0 AS EFILE_CNT, 0 AS PDF_A1_FILE_CNT
                FROM  TB_STORIGNFILE
                WHERE (RECORD_CENTER_ID||ORIGN_ID)
                IN (
                    SELECT RECORD_CENTER_ID||ORIGN_ID
                    FROM  TB_RDRECORD
                    WHERE RECORD_ID = #RECORD_ID:VARCHAR#
                )
                AND   DOC_TYPE_CD NOT IN ('01','10','S1')
            )
            UNION ALL
            (
                SELECT 0 AS RECORD_SUB_CNT, NVL(SUM(FILE_SIZE),0) AS EFILE_SIZE, 0 AS RECORD_PAGE_CNT, COUNT(1) AS EFILE_CNT, 0 AS PDF_A1_FILE_CNT
                FROM  TB_STORIGNFILE
                WHERE (RECORD_CENTER_ID||ORIGN_ID)
                IN (
                    SELECT RECORD_CENTER_ID||ORIGN_ID
                    FROM  TB_RDRECORD
                    WHERE RECORD_ID = #RECORD_ID:VARCHAR#
                )
                AND   DOC_TYPE_CD NOT IN ('10','S1')
            )
            UNION ALL
            (
                SELECT 0 AS RECORD_SUB_CNT, 0 AS EFILE_SIZE, SUM(NVL(RECORD_PAGE_CNT,0)) AS RECORD_PAGE_CNT, 0 AS EFILE_CNT, 0 AS PDF_A1_FILE_CNT
                FROM  TB_RDRECORD
                WHERE RECORD_ID = #RECORD_ID:VARCHAR#
            )
            UNION ALL
            (
                SELECT 0 AS RECORD_SUB_CNT, 0 AS EFILE_SIZE, 0 AS RECORD_PAGE_CNT, 0 AS EFILE_CNT, COUNT(1) AS PDF_A1_FILE_CNT
                FROM  TB_STORIGNPDFA1FILE
                WHERE (RECORD_CENTER_ID||ORIGN_ID)
                IN (
                    SELECT RECORD_CENTER_ID||ORIGN_ID
                    FROM  TB_RDRECORD
                    WHERE RECORD_ID = #RECORD_ID:VARCHAR#
                )
            )
        )
	</select>
	
	<!-- M67 구조정보 (M47 저장정보 내부) : 기록물분철 목록 -->
	<select id="SelectStorageCon_StructureInfoCon_Folder" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT C.CREAT_SYS_CD||'-'||C.ORG_CD||'-'||C.CLSS_ID||'-'||C.CREAT_YYYY||'-'||C.FOLDER_REG_SEQ||' ('||C.HO_NO||')' AS OBJECT_ID
		    , C.TITLE AS OBJECT_TITLE
		FROM  TB_RDFOLDER C
		WHERE (C.CREAT_SYS_CD, C.ORG_CD, C.CLSS_ID, C.CREAT_YYYY, C.FOLDER_REG_SEQ)
		IN (
		    SELECT A.CREAT_SYS_CD, A.ORG_CD, A.CLSS_ID, A.CREAT_YYYY, A.FOLDER_REG_SEQ
		    FROM  TB_RDFOLDER A
		    WHERE A.FOLDER_ID = #FOLDER_ID:VARCHAR#
		    AND   (SELECT COUNT(1) FROM TB_RDFOLDER B WHERE B.CREAT_SYS_CD=A.CREAT_SYS_CD AND B.ORG_CD=A.ORG_CD AND B.CLSS_ID=A.CLSS_ID AND B.CREAT_YYYY=A.CREAT_YYYY AND B.FOLDER_REG_SEQ=A.FOLDER_REG_SEQ) > 1
		)
		ORDER BY C.RECORD_CENTER_ID, C.CREAT_SYS_CD, C.ORG_CD, C.CLSS_ID, C.CREAT_YYYY, C.FOLDER_REG_SEQ, C.HO_NO
	</select>
	
	<!-- M67 구조정보 (M47 저장정보 내부) : 기록물건 목록 -->
	<select id="SelectStorageCon_StructureInfoCon_Record" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT A.CREAT_SYS_CD||'-'||A.ORG_CD||'-'||A.CREAT_YYYY||'-'||A.CREAT_REG_NO
		            ||(CASE WHEN A.DTCH_REG_NO != '00' THEN ' ('||A.DTCH_REG_NO||')'
		                    WHEN (SELECT COUNT(1) FROM TB_RDRECORD B WHERE B.RECORD_CENTER_ID=A.RECORD_CENTER_ID AND B.CREAT_SYS_CD=A.CREAT_SYS_CD AND B.ORG_CD=A.ORG_CD AND B.CREAT_YYYY=A.CREAT_YYYY AND B.CREAT_REG_NO=A.CREAT_REG_NO) > 1 THEN ' ('||A.DTCH_REG_NO||')'
		               ELSE '' END) AS OBJECT_ID
		    , A.TITLE AS OBJECT_TITLE
		FROM  TB_RDRECORD A
		WHERE A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#  AND A.FOLDER_ID = #FOLDER_ID:VARCHAR#
		ORDER BY A.RECORD_CENTER_ID, A.CREAT_SYS_CD, A.ORG_CD, A.CREAT_YYYY, A.CREAT_REG_NO, A.DTCH_REG_NO
	</select>
	
	<!-- M72 분류값 (M70 분류 내부) : 1.단위과제 -->
	<select id="SelectClassificationValueCon_Clss" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT A.BIS_CLSS_ID AS CLSS_ID
		    , A.BIS_CLSS_NM AS CLSS_NM
		    , A.LEVL AS CLSS_LEVL
		    , (CASE WHEN A.LEVL = 1 THEN '정책분야'
		            WHEN A.LEVL = 2 THEN '정책영역'
		            WHEN A.LEVL = 3 THEN '대기능'
		            WHEN A.LEVL = 4 THEN '중기능'
		            WHEN A.LEVL = 5 THEN '소기능'
		            WHEN A.LEVL = 6 THEN '단위과제' END) AS CLSS_LEVL_NM
		FROM (
		    SELECT BIS_CLSS_ID
		        , BIS_CLSS_NM
		        , LEVL
		    FROM  TB_ZZBISCLSS START WITH BIS_CLSS_ID = #CLSS_ID:VARCHAR#
		    CONNECT BY PRIOR UPPER_BIS_CLSS_ID = BIS_CLSS_ID
		) A
		WHERE A.LEVL > 0
		ORDER BY A.LEVL
	</select>
	
	<!-- M72 분류값 (M70 분류 내부) : 2.단위업무 -->
	<select id="SelectClassificationValueCon_Unit" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		(
		    SELECT LRG_CD AS CLSS_ID, LRG_NM AS CLSS_NM, 1 AS CLSS_LEVL, '대기능' AS CLSS_LEVL_NM
		    FROM  TB_ZZUNIT
		    WHERE RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
		    AND   UNIT_CD = #CLSS_ID:VARCHAR#
		    AND   LRG_CD IS NOT NULL
		)
		UNION
		(
		    SELECT MID_CD AS CLSS_ID, MID_NM AS CLSS_NM, 2 AS CLSS_LEVL, '중기능' AS CLSS_LEVL_NM
		    FROM  TB_ZZUNIT
		    WHERE RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
		    AND   UNIT_CD = #CLSS_ID:VARCHAR#
		    AND   MID_CD IS NOT NULL
		)
		UNION
		(
		    SELECT SML_CD AS CLSS_ID, SML_NM AS CLSS_NM, 3 AS CLSS_LEVL, '소기능' AS CLSS_LEVL_NM
		    FROM  TB_ZZUNIT
		    WHERE RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
		    AND   UNIT_CD = #CLSS_ID:VARCHAR#
		    AND   SML_CD IS NOT NULL
		)
		UNION
		(
		    SELECT UNIT_CD AS CLSS_ID, UNIT_NM AS CLSS_NM, 4 AS CLSS_LEVL, '단위업무' AS CLSS_LEVL_NM
		    FROM  TB_ZZUNIT
		    WHERE RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
		    AND   UNIT_CD = #CLSS_ID:VARCHAR#
		)
	</select>
	
	<!-- M72 분류값 (M70 분류 내부) : 3.구전자문서 2014.08.01 추가.. 단위업무가 없는 경우에... 99999999 등록..-->
	<select id="SelectClassificationValueCon_Old_Unit" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT LRG_CD AS CLSS_ID,
		       LRG_NM AS CLSS_NM,
		       1 AS CLSS_LEVL,
		       '대기능' AS CLSS_LEVL_NM
		  FROM TB_ZZUNIT
		 WHERE RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
		   AND UNIT_CD = #CLSS_ID:VARCHAR#
		   AND UNIT_CD != '99999999'
		   AND LRG_CD IS NOT NULL
		UNION
		SELECT MID_CD AS CLSS_ID,
		       MID_NM AS CLSS_NM,
		       2 AS CLSS_LEVL,
		       '중기능' AS CLSS_LEVL_NM
		  FROM TB_ZZUNIT
		 WHERE RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
		   AND UNIT_CD = #CLSS_ID:VARCHAR#
		   AND UNIT_CD != '99999999'
		   AND MID_CD IS NOT NULL
		UNION
		SELECT SML_CD AS CLSS_ID,
		       SML_NM AS CLSS_NM,
		       3 AS CLSS_LEVL,
		       '소기능' AS CLSS_LEVL_NM
		 FROM  TB_ZZUNIT
		 WHERE RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
		   AND UNIT_CD = #CLSS_ID:VARCHAR#
		   AND UNIT_CD != '99999999'
		   AND SML_CD IS NOT NULL
		UNION
		SELECT UNIT_CD AS CLSS_ID,
		       (CASE WHEN UNIT_CD = '99999999' THEN '구전자문서' ELSE UNIT_NM END) AS CLSS_NM,
		       4 AS CLSS_LEVL,
		       (CASE WHEN UNIT_CD = '99999999' THEN '세분류(단위업무)' ELSE '단위업무' END) AS CLSS_LEVL_NM
		  FROM TB_ZZUNIT
		 WHERE RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
		   AND UNIT_CD = #CLSS_ID:VARCHAR#
	</select>
	
	<!-- M118 관리이력 -->
	<!-- 2014.08.06 등록인수 기록물 관리이력 추가.. -->
	<select id="SelectArrManagementHistoryCon" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT R.ACTION_TYPE, R.ACTION_DESCRIPTION, R.ACTION_DATE_TIME
		    , R.ACTION_CORPORATE_NAME, R.ACTION_CORPORATE_CODE, R.ACTION_SECTION_NAME, R.ACTION_SECTION_CODE
		    , R.ACTION_PERSON_NAME, R.ACTION_PERSION_CODE, R.ACTION_POSITION_NAME, R.ACTION_POSITION_CODE
		    , R.CHANGED_ELEMENT_NAME_1, R.CHANGED_ELEMENT_VALUE_1, R.CHANGED_ELEMENT_NAME_2, R.CHANGED_ELEMENT_VALUE_2
		    , R.CHANGED_ELEMENT_NAME_3, R.CHANGED_ELEMENT_VALUE_3, R.CHANGED_ELEMENT_NAME_4, R.CHANGED_ELEMENT_VALUE_4
		FROM (
		    (
		        SELECT '공개재분류' AS ACTION_TYPE
		            , A.CHNG_RSN AS ACTION_DESCRIPTION
		            , TO_DATE(A.CHNG_YMD||'000000', 'YYYYMMDDHH24MISS') AS ACTION_DATE_TIME
		            , A.CHNG_HIST_NO AS ACTION_SNO
		            , (SELECT (SELECT Y.FULL_ORG_NM FROM TB_STORG Y WHERE Y.RECORD_CENTER_ID=Z.RECORD_CENTER_ID AND Y.ORG_CD=Z.HUPPER_ORG_CD) FROM TB_STORG Z, TB_STUSER U WHERE Z.RECORD_CENTER_ID=U.RECORD_CENTER_ID AND Z.ORG_CD=U.DEPT_CD AND U.USER_ID=A.CHNG_USER_ID) AS ACTION_CORPORATE_NAME
		            , (SELECT Z.HUPPER_ORG_CD FROM TB_STORG Z, TB_STUSER U WHERE Z.RECORD_CENTER_ID=U.RECORD_CENTER_ID AND Z.ORG_CD=U.DEPT_CD AND U.USER_ID=A.CHNG_USER_ID) AS ACTION_CORPORATE_CODE
		            , (SELECT O.FULL_ORG_NM FROM TB_STORG O, TB_STUSER U WHERE O.RECORD_CENTER_ID=U.RECORD_CENTER_ID AND O.ORG_CD=U.DEPT_CD AND U.USER_ID=A.CHNG_USER_ID) AS ACTION_SECTION_NAME
		            , (SELECT U.DEPT_CD FROM TB_STUSER U WHERE U.USER_ID=A.CHNG_USER_ID) AS ACTION_SECTION_CODE
		            , (SELECT U.USER_NM FROM TB_STUSER U WHERE U.USER_ID=A.CHNG_USER_ID) AS ACTION_PERSON_NAME
		            , A.CHNG_USER_ID AS ACTION_PERSION_CODE
		            , (SELECT (CASE WHEN (LENGTH(U.POS)!=0 AND LENGTH(U.RANK)!=0) THEN U.POS||','||U.RANK ELSE U.POS||U.RANK END) FROM TB_STUSER U WHERE U.USER_ID=A.CHNG_USER_ID) AS ACTION_POSITION_NAME
		            , '' AS ACTION_POSITION_CODE
		            , '공개구분' AS CHANGED_ELEMENT_NAME_1
		            , (CASE WHEN A.OPEN_DIV_CD_BEF!=A.OPEN_DIV_CD_AFT THEN A.OPEN_DIV_CD_BEF ELSE '' END) AS CHANGED_ELEMENT_VALUE_1
		            , '비공개호수' AS CHANGED_ELEMENT_NAME_2
		            , (CASE WHEN A.OPEN_GRADE_BEF!=A.OPEN_GRADE_AFT THEN A.OPEN_GRADE_BEF ELSE '' END) AS CHANGED_ELEMENT_VALUE_2
		            , '공개제한부분' AS CHANGED_ELEMENT_NAME_3
		            , (CASE WHEN A.OPEN_LIMIT_PART_BEF!=A.OPEN_LIMIT_PART_AFT THEN A.OPEN_LIMIT_PART_BEF ELSE '' END) AS CHANGED_ELEMENT_VALUE_3
		            , '공개제한사유' AS CHANGED_ELEMENT_NAME_4
		            , (CASE WHEN A.PART_OPEN_RSN_BEF!=A.PART_OPEN_RSN_BEF THEN A.PART_OPEN_RSN_BEF ELSE '' END) AS CHANGED_ELEMENT_VALUE_4
		        FROM  TB_RDOPENHIST A
		        WHERE A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
		        AND   A.RECORD_ID = #RECORD_ID:VARCHAR#
		    )
		    UNION ALL
		    (
		        SELECT '접근범위재책정' AS ACTION_TYPE
		            , A.CHNG_OPIN AS ACTION_DESCRIPTION
		            , TO_DATE(A.CHNG_YMD||'000000', 'YYYYMMDDHH24MISS') AS ACTION_DATE_TIME
		            , A.RESORT_CHNG_HIST_NO AS ACTION_SNO
		            , (SELECT (SELECT Y.FULL_ORG_NM FROM TB_STORG Y WHERE Y.RECORD_CENTER_ID=Z.RECORD_CENTER_ID AND Y.ORG_CD=Z.HUPPER_ORG_CD) FROM TB_STORG Z, TB_STUSER U WHERE Z.RECORD_CENTER_ID=U.RECORD_CENTER_ID AND Z.ORG_CD=U.DEPT_CD AND U.USER_ID=A.CHNG_USER_ID) AS ACTION_CORPORATE_NAME
		            , (SELECT Z.HUPPER_ORG_CD FROM TB_STORG Z, TB_STUSER U WHERE Z.RECORD_CENTER_ID=U.RECORD_CENTER_ID AND Z.ORG_CD=U.DEPT_CD AND U.USER_ID=A.CHNG_USER_ID) AS ACTION_CORPORATE_CODE
		            , (SELECT O.FULL_ORG_NM FROM TB_STORG O, TB_STUSER U WHERE O.RECORD_CENTER_ID=U.RECORD_CENTER_ID AND O.ORG_CD=U.DEPT_CD AND U.USER_ID=A.CHNG_USER_ID) AS ACTION_SECTION_NAME
		            , (SELECT U.DEPT_CD FROM TB_STUSER U WHERE U.USER_ID=A.CHNG_USER_ID) AS ACTION_SECTION_CODE
		            , (SELECT U.USER_NM FROM TB_STUSER U WHERE U.USER_ID=A.CHNG_USER_ID) AS ACTION_PERSON_NAME
		            , A.CHNG_USER_ID AS ACTION_PERSION_CODE
		            , (SELECT (CASE WHEN (LENGTH(U.POS)!=0 AND LENGTH(U.RANK)!=0) THEN U.POS||','||U.RANK ELSE U.POS||U.RANK END) FROM TB_STUSER U WHERE U.USER_ID=A.CHNG_USER_ID) AS ACTION_POSITION_NAME
		            , '' AS ACTION_POSITION_CODE
		            , '접근범위' AS CHANGED_ELEMENT_NAME_1
		            , (CASE WHEN A.OPER_READ_RANGE_BEF!=A.OPER_READ_RANGE_AFT THEN (SELECT Z.COM_CD_NM FROM TB_ZZCOMCD Z WHERE Z.COM_TYPE_CD='RD53' AND Z.COM_CD=A.OPER_READ_RANGE_BEF) ELSE '' END) AS CHANGED_ELEMENT_VALUE_1
		            , '' AS CHANGED_ELEMENT_NAME_2
		            , '' AS CHANGED_ELEMENT_VALUE_2
		            , '' AS CHANGED_ELEMENT_NAME_3
		            , '' AS CHANGED_ELEMENT_VALUE_3
		            , '' AS CHANGED_ELEMENT_NAME_4
		            , '' AS CHANGED_ELEMENT_VALUE_4
		        FROM  TB_RDRANGERESORTHIST A
		        WHERE A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
		        AND   A.RECORD_ID = #RECORD_ID:VARCHAR#
		    )
		    UNION ALL 
		    (
		    	SELECT '기록물 관리기관에서 등록' AS ACTION_TYPE,
				       '' AS ACTION_DESCRIPTION,
				       TO_DATE(A.REG_DTIME, 'YYYYMMDDHH24MISS') AS ACTION_DATE_TIME,
				       1 AS ACTION_SNO, 
				       (SELECT (SELECT E.FULL_ORG_NM FROM TB_STORG E WHERE E.RECORD_CENTER_ID = D.RECORD_CENTER_ID AND E.ORG_CD = D.HUPPER_ORG_CD) FROM TB_STORG D WHERE D.RECORD_CENTER_ID = A.RECORD_CENTER_ID AND D.ORG_CD = NVL(A.CREAT_USER_ORG_CD, A.ORG_CD)) AS ACTION_CORPORATE_NAME,
				       (SELECT D.HUPPER_ORG_CD FROM TB_STORG D WHERE D.RECORD_CENTER_ID = A.RECORD_CENTER_ID AND D.ORG_CD = NVL(A.CREAT_USER_ORG_CD, A.ORG_CD)) AS ACTION_CORPORATE_CODE,
				       (SELECT D.FULL_ORG_NM FROM TB_STORG D WHERE D.RECORD_CENTER_ID = A.RECORD_CENTER_ID AND D.ORG_CD = NVL(A.CREAT_USER_ORG_CD, A.ORG_CD)) AS ACTION_SECTION_NAME,
				       A.CREAT_USER_ORG_CD AS ACTION_SECTION_CODE,
				       A.CREAT_USER_NM AS ACTION_PERSON_NAME,
				       A.CREAT_USER_ID AS ACTION_PERSION_CODE,
				       A.CREAT_USER_POS_RANK_NM AS ACTION_POSITION_NAME,
				       '' AS ACTION_POSITION_CODE,
				       '' AS CHANGED_ELEMENT_NAME_1,
		               '' AS CHANGED_ELEMENT_VALUE_1,
				       '' AS CHANGED_ELEMENT_NAME_2,
		               '' AS CHANGED_ELEMENT_VALUE_2,
				       '' AS CHANGED_ELEMENT_NAME_3,
		               '' AS CHANGED_ELEMENT_VALUE_3,
				       '' AS CHANGED_ELEMENT_NAME_4,
		               '' AS CHANGED_ELEMENT_VALUE_4
				  FROM TB_RDRECORD A
				 WHERE A.CREAT_SYS_CD = '03'
				   AND A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
				   AND A.RECORD_ID = #RECORD_ID:VARCHAR#
		    )
		) R
		ORDER BY R.ACTION_DATE_TIME, R.ACTION_SNO
	</select>
	
	<!-- M147 보존이력 -->
	<!-- 2014.08.06 포맷변환.. 데이터 잘못 불러오는 쿼리 전체 변경.. -->
	<!-- 2015.06.17 포맷변환.. 쿼리 일부 변경.. -->
	<select id="SelectArrPreservationHistoryCon" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT R.ACTION_TYPE, R.ACTION_DESCRIPTION, R.ACTION_DATE_TIME
		    , R.ACTION_CORPORATE_NAME, R.ACTION_CORPORATE_CODE, R.ACTION_SECTION_NAME, R.ACTION_SECTION_CODE
		    , R.ACTION_PERSON_NAME, R.ACTION_PERSION_CODE, R.ACTION_POSITION_NAME, R.ACTION_POSITION_CODE
		FROM (
		    (
		        SELECT '매체수록(아카이빙스토리지)' AS ACTION_TYPE
		            , '' AS ACTION_DESCRIPTION
		            , (SELECT TO_DATE(MAX(Y.REG_DTIME), 'YYYYMMDDHH24MISS') FROM TB_STORIGNFILE Y WHERE Y.RECORD_CENTER_ID=A.RECORD_CENTER_ID AND Y.ORIGN_ID=A.ORIGN_ID AND Y.DOC_TYPE_CD IN ('10','S1')) AS ACTION_DATE_TIME
		            , ' ' AS ACTION_CORPORATE_NAME
		            , ' ' AS ACTION_CORPORATE_CODE
		            , '' AS ACTION_SECTION_NAME
		            , '' AS ACTION_SECTION_CODE
		            , '' AS ACTION_PERSON_NAME
		            , '' AS ACTION_PERSION_CODE
		            , '' AS ACTION_POSITION_NAME
		            , '' AS ACTION_POSITION_CODE
		        FROM  TB_RDRECORD A
		        WHERE A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
		          AND A.RECORD_ID = #RECORD_ID:VARCHAR#
<!-- 		          AND EXISTS (SELECT 1 FROM TB_STORIGNFILE Y, TB_STMEDIUM X WHERE Y.RECORD_CENTER_ID=A.RECORD_CENTER_ID AND Y.ORIGN_ID=A.ORIGN_ID AND Y.DOC_TYPE_CD IN ('10','S1') AND X.MEDIUM_ID=Y.MEDIUM_ID AND X.MEDIUM_CD='02') -->
				  AND EXISTS (SELECT 1 FROM TB_STORIGNFILE Y, TB_STMEDIUM X WHERE Y.RECORD_CENTER_ID = X.RECORD_CENTER_ID AND Y.MEDIUM_ID = X.MEDIUM_ID AND Y.RECORD_CENTER_ID=A.RECORD_CENTER_ID AND Y.ORIGN_ID=A.ORIGN_ID AND Y.DOC_TYPE_CD IN ('10','S1') AND X.MEDIUM_CD='02')
		    )
		    UNION ALL
		    (
				SELECT '보존포맷변환' AS ACTION_TYPE,
				       '' AS ACTION_DESCRIPTION,
				       TO_DATE(C.REG_DTIME, 'YYYYMMDDHH24MISS') AS ACTION_DATE_TIME,
				       B.REQUEST_CORP_NM AS ACTION_CORPORATE_NAME,
				       B.REQUEST_CORP_CD AS ACTION_CORPORATE_CODE,
				       B.REQUEST_ORG_NM AS ACTION_SECTION_NAME,
				       B.REQUEST_ORG_CD AS ACTION_SECTION_CODE,
				       B.REQUEST_USER_NM AS ACTION_PERSON_NAME,
				       B.REQUEST_USER_ID AS ACTION_PERSION_CODE,
				       B.REQUEST_USER_POS_RANK_NM AS ACTION_POSITION_NAME,
				       '' AS ACTION_POSITION_CODE
				  FROM TB_RDRECORD A,
				       (SELECT R.* FROM TB_STREQTRANS R WHERE R.NEO_GUBUN = '2' AND R.REQUEST_STATUS = 'C' AND R.REFLECTION_FLAG = 'O') B,
				       TB_STORIGNNEOFILE C
				 WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
				   AND A.RECORD_ID = B.RECORD_ID
				   AND A.RECORD_CENTER_ID = C.RECORD_CENTER_ID
				   AND A.ORIGN_ID = C.ORIGN_ID
				   AND A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
				   AND A.RECORD_ID = #RECORD_ID:VARCHAR#
				   AND C.DEL_FLAG = '0'
		    )
		    UNION ALL
		    (
				SELECT '훼손사항' AS ACTION_TYPE,
				       DAMG_CONT AS ACTION_DESCRIPTION,
				       TO_DATE(REG_DTIME, 'YYYYMMDDHH24MISS') AS ACTION_DATE_TIME,
				       REQUEST_CORP_NM AS ACTION_CORPORATE_NAME,
				       REQUEST_CORP_CD AS ACTION_CORPORATE_CODE,
				       REQUEST_ORG_NM AS ACTION_SECTION_NAME,
				       REQUEST_ORG_CD AS ACTION_SECTION_CODE,
				       REQUEST_USER_NM AS ACTION_PERSON_NAME,
				       REQUEST_USER_ID AS ACTION_PERSION_CODE,
				       REQUEST_USER_POS_RANK_NM AS ACTION_POSITION_NAME,
				       '' AS ACTION_POSITION_CODE
				  FROM TB_RDRECORD_RESTORE
				 WHERE RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
				   AND RECORD_ID = #RECORD_ID:VARCHAR#
				   AND DAMG_FLAG = '1'
		    )
		    UNION ALL
		    (
				SELECT '복원' AS ACTION_TYPE,
				       DAMG_HANDL_RSLT AS ACTION_DESCRIPTION,
				       TO_DATE(RESTR_HANDL_YMD||'000000', 'YYYYMMDDHH24MISS') AS ACTION_DATE_TIME,
				       REQUEST_CORP_NM AS ACTION_CORPORATE_NAME,
				       REQUEST_CORP_CD AS ACTION_CORPORATE_CODE,
				       REQUEST_ORG_NM AS ACTION_SECTION_NAME,
				       REQUEST_ORG_CD AS ACTION_SECTION_CODE,
				       REQUEST_USER_NM AS ACTION_PERSON_NAME,
				       REQUEST_USER_ID AS ACTION_PERSION_CODE,
				       REQUEST_USER_POS_RANK_NM AS ACTION_POSITION_NAME,
				       '' AS ACTION_POSITION_CODE
				  FROM TB_RDRECORD_RESTORE
				 WHERE RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
				   AND RECORD_ID = #RECORD_ID:VARCHAR#
				   AND RESTR_HANDL_YMD IS NOT NULL
		    )
		    UNION ALL
			(
				SELECT MAX(ACTION_TYPE) AS ACTION_TYPE,
				       TRIM(TO_CHAR(SUM(ACTION_DESCRIPTION),'9,999,999')) || '개 파일 검출' AS ACTION_DESCRIPTION,
				       MAX(ACTION_DATE_TIME) AS ACTION_DATE_TIME,
				       MAX(ACTION_CORPORATE_NAME) AS ACTION_CORPORATE_NAME,
				       MAX(ACTION_CORPORATE_CODE) AS ACTION_CORPORATE_CODE,
				       MAX(ACTION_SECTION_NAME) AS ACTION_SECTION_NAME,
				       MAX(ACTION_SECTION_CODE) AS ACTION_SECTION_CODE,
				       MAX(ACTION_PERSON_NAME) AS ACTION_PERSON_NAME,
				       MAX(ACTION_PERSION_CODE) AS ACTION_PERSION_CODE,
				       MAX(ACTION_POSITION_NAME) AS ACTION_POSITION_NAME,
				       '' AS ACTION_POSITION_CODE
				  FROM
				  (
<!--
						SELECT '바이러스검출' AS ACTION_TYPE,
						       COUNT(1) AS ACTION_DESCRIPTION,
						       MAX(TO_DATE(D.VIRUS_INFECTION_DTIME,'YYYYMMDDHH24MISS')) AS ACTION_DATE_TIME,
						       MAX(D.REQUEST_CORP_NM) AS ACTION_CORPORATE_NAME,
						       MAX(D.REQUEST_CORP_CD) AS ACTION_CORPORATE_CODE,
						       MAX(D.REQUEST_ORG_NM) AS ACTION_SECTION_NAME,
						       MAX(D.REQUEST_ORG_CD) AS ACTION_SECTION_CODE,
						       MAX(D.REQUEST_USER_NM) AS ACTION_PERSON_NAME,
						       MAX(D.REQUEST_USER_ID) AS ACTION_PERSION_CODE,
						       MAX(D.REQUEST_USER_POS_RANK_NM) AS ACTION_POSITION_NAME
						  FROM TB_RDRECORD A,
						       TB_TKRECORD B,
						       TB_TKATTACHFILE C,
						       TB_TKVIRUSCHECK D
						 WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
						   AND A.RECORD_TAKE_SEQ = B.RECORD_TAKE_SEQ
						   AND B.RECORD_CENTER_ID = C.RECORD_CENTER_ID
						   AND B.RECORD_TAKE_SEQ = C.RECORD_TAKE_SEQ
						   AND C.RECORD_CENTER_ID = D.RECORD_CENTER_ID
						   AND C.RECORD_TAKE_SEQ = D.RECORD_TAKE_SEQ
						   AND C.ATTACH_FILE_TYPE = D.ATTACH_FILE_TYPE
						   AND C.REG_SEQ = D.REG_SEQ
						   AND D.VIRUS_CHECK_FLAG = '1'
						   AND D.VIRUS_INFECTION_FLAG = '1'
						   AND A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
						   AND A.RECORD_ID = #RECORD_ID:VARCHAR#
-->
						SELECT '바이러스검출' AS ACTION_TYPE
						     , COUNT(1) AS ACTION_DESCRIPTION
						     , MAX(TO_DATE (A.VIRUS_INFECTION_DTIME
						                   , 'YYYYMMDDHH24MISS'))
						          AS ACTION_DATE_TIME
						     , MAX(A.REQUEST_CORP_NM) AS ACTION_CORPORATE_NAME
						     , MAX(A.REQUEST_CORP_CD) AS ACTION_CORPORATE_CODE
						     , MAX(A.REQUEST_ORG_NM) AS ACTION_SECTION_NAME
						     , MAX(A.REQUEST_ORG_CD) AS ACTION_SECTION_CODE
						     , MAX(A.REQUEST_USER_NM) AS ACTION_PERSON_NAME
						     , MAX(A.REQUEST_USER_ID) AS ACTION_PERSION_CODE
						     , MAX(A.REQUEST_USER_POS_RANK_NM) AS ACTION_POSITION_NAME
						  FROM (SELECT VIRUS_INFECTION_DTIME
						             , REQUEST_CORP_NM
						             , REQUEST_CORP_CD
						             , REQUEST_ORG_NM
						             , REQUEST_ORG_CD
						             , REQUEST_USER_NM
						             , REQUEST_USER_ID
						             , REQUEST_USER_POS_RANK_NM
						          FROM TB_TKVIRUSCHECK
						         WHERE RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
						           AND RECORD_TAKE_SEQ = (SELECT RECORD_TAKE_SEQ
						                                    FROM TB_RDRECORD
						                                   WHERE RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
						                                     AND RECORD_ID = #RECORD_ID:VARCHAR#)
						           AND VIRUS_CHECK_FLAG = '1'
						           AND VIRUS_INFECTION_FLAG = '1') A
						           
						UNION ALL
						
						SELECT '바이러스검출' AS ACTION_TYPE,
						       COUNT(1) AS ACTION_DESCRIPTION,
						       MAX(TO_DATE(C.VIRUS_INFECTION_DTIME,'YYYYMMDDHH24MISS')) AS ACTION_DATE_TIME,
						       MAX(C.REQUEST_CORP_NM) AS ACTION_CORPORATE_NAME,
						       MAX(C.REQUEST_CORP_CD) AS ACTION_CORPORATE_CODE,
						       MAX(C.REQUEST_ORG_NM) AS ACTION_SECTION_NAME,
						       MAX(C.REQUEST_ORG_CD) AS ACTION_SECTION_CODE,
						       MAX(C.REQUEST_USER_NM) AS ACTION_PERSON_NAME,
						       MAX(C.REQUEST_USER_ID) AS ACTION_PERSION_CODE,
						       MAX(C.REQUEST_USER_POS_RANK_NM) AS ACTION_POSITION_NAME
						  FROM TB_RDRECORD A,
						       TB_STORIGNFILE B,
						       TB_STORIGNVIRUSCHK C
						 WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
						   AND A.ORIGN_ID = B.ORIGN_ID
						   AND B.ORIGN_FILE_ID = C.FILE_ID
						   AND C.FILE_TYPE = 'OF'
						   AND C.VIRUS_CHECK_FLAG = '1'
						   AND C.VIRUS_INFECTION_FLAG = '1'
						   AND A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
						   AND A.RECORD_ID = #RECORD_ID:VARCHAR#
						   
						UNION ALL
						
						SELECT '바이러스검출' AS ACTION_TYPE,
						       COUNT(1) AS ACTION_DESCRIPTION,
						       MAX(TO_DATE(D.VIRUS_INFECTION_DTIME,'YYYYMMDDHH24MISS')) AS ACTION_DATE_TIME,
						       MAX(D.REQUEST_CORP_NM) AS ACTION_CORPORATE_NAME,
						       MAX(D.REQUEST_CORP_CD) AS ACTION_CORPORATE_CODE,
						       MAX(D.REQUEST_ORG_NM) AS ACTION_SECTION_NAME,
						       MAX(D.REQUEST_ORG_CD) AS ACTION_SECTION_CODE,
						       MAX(D.REQUEST_USER_NM) AS ACTION_PERSON_NAME,
						       MAX(D.REQUEST_USER_ID) AS ACTION_PERSION_CODE,
						       MAX(D.REQUEST_USER_POS_RANK_NM) AS ACTION_POSITION_NAME
						  FROM TB_RDRECORD A,
						       TB_STORIGNFILE B,
						       TB_STORIGNPDFA1FILE C,
						       TB_STORIGNVIRUSCHK D
						 WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
						   AND A.ORIGN_ID = B.ORIGN_ID
						   AND B.RECORD_CENTER_ID = C.RECORD_CENTER_ID
						   AND B.ORIGN_ID = C.ORIGN_ID
						   AND B.DOC_TYPE_CD = C.DOC_TYPE_CD
						   AND B.DOC_TYPE_SNO = C.DOC_TYPE_SNO
						   AND C.PDF_A1_FILE_ID = D.FILE_ID
						   AND D.FILE_TYPE = 'PF'
						   AND D.VIRUS_CHECK_FLAG = '1'
						   AND D.VIRUS_INFECTION_FLAG = '1'
						   AND A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
						   AND A.RECORD_ID = #RECORD_ID:VARCHAR#
				   )
				 WHERE ACTION_DESCRIPTION <![CDATA[<>]]> 0
				GROUP BY ACTION_TYPE
			)
			UNION ALL
			(
				SELECT MAX(ACTION_TYPE) AS ACTION_TYPE,
				       TRIM(TO_CHAR(SUM(ACTION_DESCRIPTION),'9,999,999')) || '개 파일 치료' AS ACTION_DESCRIPTION,
				       MAX(ACTION_DATE_TIME) AS ACTION_DATE_TIME,
				       MAX(ACTION_CORPORATE_NAME) AS ACTION_CORPORATE_NAME,
				       MAX(ACTION_CORPORATE_CODE) AS ACTION_CORPORATE_CODE,
				       MAX(ACTION_SECTION_NAME) AS ACTION_SECTION_NAME,
				       MAX(ACTION_SECTION_CODE) AS ACTION_SECTION_CODE,
				       MAX(ACTION_PERSON_NAME) AS ACTION_PERSON_NAME,
				       MAX(ACTION_PERSION_CODE) AS ACTION_PERSION_CODE,
				       MAX(ACTION_POSITION_NAME) AS ACTION_POSITION_NAME,
				       '' AS ACTION_POSITION_CODE
				  FROM
				  (
<!--
						SELECT '바이러스치료' AS ACTION_TYPE,
						       COUNT(1) AS ACTION_DESCRIPTION,
						       MAX(TO_DATE(D.VIRUS_CLEAN_APPLY_DTIME,'YYYYMMDDHH24MISS')) AS ACTION_DATE_TIME,
						       MAX(D.REQUEST_CORP_NM) AS ACTION_CORPORATE_NAME,
						       MAX(D.REQUEST_CORP_CD) AS ACTION_CORPORATE_CODE,
						       MAX(D.REQUEST_ORG_NM) AS ACTION_SECTION_NAME,
						       MAX(D.REQUEST_ORG_CD) AS ACTION_SECTION_CODE,
						       MAX(D.REQUEST_USER_NM) AS ACTION_PERSON_NAME,
						       MAX(D.REQUEST_USER_ID) AS ACTION_PERSION_CODE,
						       MAX(D.REQUEST_USER_POS_RANK_NM) AS ACTION_POSITION_NAME
						  FROM TB_RDRECORD A,
						       TB_TKRECORD B,
						       TB_TKATTACHFILE C,
						       TB_TKVIRUSCHECK D
						 WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
						   AND A.RECORD_TAKE_SEQ = B.RECORD_TAKE_SEQ
						   AND B.RECORD_CENTER_ID = C.RECORD_CENTER_ID
						   AND B.RECORD_TAKE_SEQ = C.RECORD_TAKE_SEQ
						   AND C.RECORD_CENTER_ID = D.RECORD_CENTER_ID
						   AND C.RECORD_TAKE_SEQ = D.RECORD_TAKE_SEQ
						   AND C.ATTACH_FILE_TYPE = D.ATTACH_FILE_TYPE
						   AND C.REG_SEQ = D.REG_SEQ
						   AND D.VIRUS_CHECK_FLAG = '1'
						   AND D.VIRUS_CLEAN_APPLY_FLAG = '1'
						   AND A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
						   AND A.RECORD_ID = #RECORD_ID:VARCHAR#
-->

						SELECT '바이러스치료' AS ACTION_TYPE
						     , COUNT(1) AS ACTION_DESCRIPTION
						     , MAX(TO_DATE(A.VIRUS_CLEAN_APPLY_DTIME
						                 , 'YYYYMMDDHH24MISS'))
						          AS ACTION_DATE_TIME
						     , MAX(A.REQUEST_CORP_NM) AS ACTION_CORPORATE_NAME
						     , MAX(A.REQUEST_CORP_CD) AS ACTION_CORPORATE_CODE
						     , MAX(A.REQUEST_ORG_NM) AS ACTION_SECTION_NAME
						     , MAX(A.REQUEST_ORG_CD) AS ACTION_SECTION_CODE
						     , MAX(A.REQUEST_USER_NM) AS ACTION_PERSON_NAME
						     , MAX(A.REQUEST_USER_ID) AS ACTION_PERSION_CODE
						     , MAX(A.REQUEST_USER_POS_RANK_NM) AS ACTION_POSITION_NAME
						  FROM (SELECT VIRUS_CLEAN_APPLY_DTIME
						             , REQUEST_CORP_NM
						             , REQUEST_CORP_CD
						             , REQUEST_ORG_NM
						             , REQUEST_ORG_CD
						             , REQUEST_USER_NM
						             , REQUEST_USER_ID
						             , REQUEST_USER_POS_RANK_NM
						          FROM TB_TKVIRUSCHECK
						         WHERE RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
						           AND RECORD_TAKE_SEQ = (SELECT RECORD_TAKE_SEQ
						                                    FROM TB_RDRECORD
						                                   WHERE RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
						                                     AND RECORD_ID = #RECORD_ID:VARCHAR#)
						           AND VIRUS_CHECK_FLAG = '1'
						           AND VIRUS_CLEAN_APPLY_FLAG = '1') A

						UNION ALL
						SELECT '바이러스치료' AS ACTION_TYPE,
						       COUNT(1) AS ACTION_DESCRIPTION,
						       MAX(TO_DATE(C.VIRUS_CLEAN_APPLY_DTIME,'YYYYMMDDHH24MISS')) AS ACTION_DATE_TIME,
						       MAX(C.REQUEST_CORP_NM) AS ACTION_CORPORATE_NAME,
						       MAX(C.REQUEST_CORP_CD) AS ACTION_CORPORATE_CODE,
						       MAX(C.REQUEST_ORG_NM) AS ACTION_SECTION_NAME,
						       MAX(C.REQUEST_ORG_CD) AS ACTION_SECTION_CODE,
						       MAX(C.REQUEST_USER_NM) AS ACTION_PERSON_NAME,
						       MAX(C.REQUEST_USER_ID) AS ACTION_PERSION_CODE,
						       MAX(C.REQUEST_USER_POS_RANK_NM) AS ACTION_POSITION_NAME
						  FROM TB_RDRECORD A,
						       TB_STORIGNFILE B,
						       TB_STORIGNVIRUSCHK C
						 WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
						   AND A.ORIGN_ID = B.ORIGN_ID
						   AND B.ORIGN_FILE_ID = C.FILE_ID
						   AND C.FILE_TYPE = 'OF'
						   AND C.VIRUS_CHECK_FLAG = '1'
						   AND C.VIRUS_CLEAN_APPLY_FLAG = '1'
						   AND A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
						   AND A.RECORD_ID = #RECORD_ID:VARCHAR#
						UNION ALL
						SELECT '바이러스치료' AS ACTION_TYPE,
						       COUNT(1) AS ACTION_DESCRIPTION,
						       MAX(TO_DATE(D.VIRUS_CLEAN_APPLY_DTIME,'YYYYMMDDHH24MISS')) AS ACTION_DATE_TIME,
						       MAX(D.REQUEST_CORP_NM) AS ACTION_CORPORATE_NAME,
						       MAX(D.REQUEST_CORP_CD) AS ACTION_CORPORATE_CODE,
						       MAX(D.REQUEST_ORG_NM) AS ACTION_SECTION_NAME,
						       MAX(D.REQUEST_ORG_CD) AS ACTION_SECTION_CODE,
						       MAX(D.REQUEST_USER_NM) AS ACTION_PERSON_NAME,
						       MAX(D.REQUEST_USER_ID) AS ACTION_PERSION_CODE,
						       MAX(D.REQUEST_USER_POS_RANK_NM) AS ACTION_POSITION_NAME
						  FROM TB_RDRECORD A,
						       TB_STORIGNFILE B,
						       TB_STORIGNPDFA1FILE C,
						       TB_STORIGNVIRUSCHK D
						 WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
						   AND A.ORIGN_ID = B.ORIGN_ID
						   AND B.RECORD_CENTER_ID = C.RECORD_CENTER_ID
						   AND B.ORIGN_ID = C.ORIGN_ID
						   AND B.DOC_TYPE_CD = C.DOC_TYPE_CD
						   AND B.DOC_TYPE_SNO = C.DOC_TYPE_SNO
						   AND C.PDF_A1_FILE_ID = D.FILE_ID
						   AND D.FILE_TYPE = 'PF'
						   AND D.VIRUS_CHECK_FLAG = '1'
						   AND D.VIRUS_CLEAN_APPLY_FLAG = '1'
						   AND A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
						   AND A.RECORD_ID = #RECORD_ID:VARCHAR#
				   )
				 WHERE ACTION_DESCRIPTION <![CDATA[<>]]> 0
				GROUP BY ACTION_TYPE
			)
		) R
		ORDER BY R.ACTION_DATE_TIME
	</select>
	
	<!-- M160 관계정보 -->
	<select id="SelectArrRelationCon" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT '참조' AS REL_TYPE
		    , A.REL_TRGT_ID
		    , A.REL_DESCR
		FROM  TB_RDRECORDREL A
        WHERE A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
        AND   A.RECORD_ID = #RECORD_ID:VARCHAR#
        AND   A.REL_TRGT_ID IS NOT NULL
		ORDER BY A.RECORD_CENTER_ID, A.RECORD_ID, A.REL_TYPE_CD, A.REL_SEQ
	</select>
	
	<!-- M164 컴포넌트 -->
	<select id="SelectArrComponent" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<!--cubrid select-->
		SELECT B.ORIGN_FILE_ID
		    , B.FILE_NM AS ORIGN_FILE_NM
			, B.DOC_TYPE_CD
			, (CASE WHEN B.DOC_TYPE_CD='01' THEN '본문' ELSE '첨부' END) AS DOC_TYPE_NM
			, NVL(B.VER,'1.0') AS VER
		    , (SELECT C.PDF_A1_FILE_ID FROM TB_STORIGNPDFA1FILE C WHERE C.RECORD_CENTER_ID=B.RECORD_CENTER_ID AND C.ORIGN_ID=B.ORIGN_ID AND C.DOC_TYPE_CD=B.DOC_TYPE_CD AND C.DOC_TYPE_SNO=B.DOC_TYPE_SNO) AS PDF_A1_FILE_ID
		    , (SELECT C.FILE_NM FROM TB_STORIGNPDFA1FILE C WHERE C.RECORD_CENTER_ID=B.RECORD_CENTER_ID AND C.ORIGN_ID=B.ORIGN_ID AND C.DOC_TYPE_CD=B.DOC_TYPE_CD AND C.DOC_TYPE_SNO=B.DOC_TYPE_SNO) AS PDF_A1_FILE_NM
		FROM  TB_STORIGNFILE B
		WHERE (B.RECORD_CENTER_ID||B.ORIGN_ID)
		IN (  
		    SELECT A.RECORD_CENTER_ID||A.ORIGN_ID
		    FROM  TB_RDRECORD R, TB_STRECORDORIGN A
		    WHERE R.RECORD_CENTER_ID = A.RECORD_CENTER_ID
		      AND R.RECORD_ID = A.RECORD_ID
		      AND A.RECORD_ID = #RECORD_ID:VARCHAR#
		      AND R.ERECORD_FLAG = '1'
		)
		AND   B.DOC_TYPE_CD NOT IN ('10','S1')
		ORDER BY B.RECORD_CENTER_ID, B.ORIGN_ID, B.DOC_TYPE_CD, B.DOC_TYPE_SNO
	</select>
	
	<!-- M169 컴포넌트 보존이력 -->
	<!-- 보존포맷 행위자 추가 및 쿼리 전체 변경.. -->
	<!-- 문서보존포맷변환이력 조회 쿼리 속도 개선 -->	      
	<select id="SelectArrComponentPreservationHistoryCon" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
<!--  	SELECT B.ORIGN_FILE_ID,
		       '문서보존포맷변환' AS HIST_TYPE,
		       B.FILE_NM AS ORIGN_FILE_NM,
		       B.DOC_TYPE_CD,
		       (CASE WHEN B.DOC_TYPE_CD = '01' THEN '본문' ELSE '첨부' END) AS DOC_TYPE_NM,
		       NVL(B.VER,'1.0') AS VER,
		       (CASE WHEN B.PDF_A1_TRANS_STATE='4' THEN '문서보존포맷변환 성공'
		             WHEN D.FOLLOWUP_CAUSE IS NOT NULL THEN '문서보존포맷변환 실패(사유:'||D.FOLLOWUP_CAUSE||')'
		             ELSE ''
		        END) AS PDF_A1_FILE_DESC,
		       C.PDF_A1_FILE_ID,
		       C.FILE_NM AS PDF_A1_FILE_NM,
		       (CASE WHEN B.PDF_A1_TRANS_STATE='4' THEN TO_DATE(C.REG_DTIME,'YYYYMMDDHH24MISS') ELSE TO_DATE(D.WORK_START_DTIME,'YYYYMMDDHH24MISS') END) AS PDF_A1_REG_DTIME,
		       B.ATTACH_FILE_MNG_INFO,
		       TO_DATE(B.REG_DTIME,'YYYYMMDDHH24MISS') AS REG_DTIME,
		       NVL(E.REQUEST_CORP_CD,' ') AS REQUEST_CORP_CD,
		       NVL(E.REQUEST_CORP_NM,' ') AS REQUEST_CORP_NM,
		       E.REQUEST_ORG_CD,
		       E.REQUEST_ORG_NM,
		       E.REQUEST_USER_ID,
		       E.REQUEST_USER_NM,
		       E.REQUEST_USER_POS_RANK_NM
		  FROM TB_RDRECORD A,
		       TB_STORIGNFILE B,
		       TB_STORIGNPDFA1FILE C,
		       (SELECT W.*
		          FROM
		          (
		               SELECT ROW_NUMBER() OVER (PARTITION BY H.ORIGN_FILE_ID ORDER BY H.WORK_HIST_ID DESC) AS SORT,
		                      H.*
		                 FROM TB_STWORKHIST H
		                WHERE H.FORMAT_DIV_CD = '0'
		           ) W
		         WHERE W.SORT = 1) D,
		       (SELECT T.*
				  FROM
				  (
				       SELECT ROW_NUMBER() OVER (PARTITION BY R.FOLDER_ID, R.RECORD_ID ORDER BY R.JOB_ID DESC) AS SORT,
		                      R.RECORD_CENTER_ID,
		                      R.RECORD_ID,
		                      R.REQUEST_CORP_CD,
		                      R.REQUEST_CORP_NM,
		                      R.REQUEST_ORG_CD,
		                      R.REQUEST_ORG_NM,
		                      R.REQUEST_USER_ID,
		                      R.REQUEST_USER_NM,
		                      R.REQUEST_USER_POS_RANK_NM
				         FROM TB_STREQTRANS R
				        WHERE R.REQUEST_STATUS IN ('C', 'D')
		                  AND R.NEO_GUBUN = '0'
				   ) T
				 WHERE T.SORT = 1) E
		 WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
		   AND A.ORIGN_ID = B.ORIGN_ID
		   AND B.RECORD_CENTER_ID = C.RECORD_CENTER_ID(+)
		   AND B.ORIGN_ID = C.ORIGN_ID(+)
		   AND B.DOC_TYPE_CD = C.DOC_TYPE_CD(+)
		   AND B.DOC_TYPE_SNO = C.DOC_TYPE_SNO(+)
		   AND B.ORIGN_FILE_ID = D.ORIGN_FILE_ID(+)
		   AND A.RECORD_CENTER_ID = E.RECORD_CENTER_ID(+)
		   AND A.RECORD_ID = E.RECORD_ID(+)
		   AND B.DOC_TYPE_CD NOT IN ('10','S1')
		   AND B.ORIGN_FILE_ID = #ORIGN_FILE_ID:VARCHAR#
 -->
		SELECT B.ORIGN_FILE_ID,
		       '문서보존포맷변환' AS HIST_TYPE,
		       B.FILE_NM AS ORIGN_FILE_NM,
		       B.DOC_TYPE_CD,
		       (CASE WHEN B.DOC_TYPE_CD = '01' THEN '본문' ELSE '첨부' END) AS DOC_TYPE_NM,
		       NVL(B.VER,'1.0') AS VER,
		       (CASE WHEN B.PDF_A1_TRANS_STATE='4' THEN '문서보존포맷변환 성공'
		             WHEN D.FOLLOWUP_CAUSE IS NOT NULL THEN '문서보존포맷변환 실패(사유:'||D.FOLLOWUP_CAUSE||')'
		             ELSE ''
		        END) AS PDF_A1_FILE_DESC,
		       C.PDF_A1_FILE_ID,
		       C.FILE_NM AS PDF_A1_FILE_NM,
		       (CASE WHEN B.PDF_A1_TRANS_STATE='4' THEN TO_DATE(C.REG_DTIME,'YYYYMMDDHH24MISS') ELSE TO_DATE(D.WORK_START_DTIME,'YYYYMMDDHH24MISS') END) AS PDF_A1_REG_DTIME,
		       B.ATTACH_FILE_MNG_INFO,
		       TO_DATE(B.REG_DTIME,'YYYYMMDDHH24MISS') AS REG_DTIME,
		       (SELECT NVL(Z.REQUEST_CORP_CD,' ')
		          FROM TB_STREQTRANS Z
		         WHERE Z.RECORD_CENTER_ID = A.RECORD_CENTER_ID
		           AND Z.RECORD_ID = A.RECORD_ID
		           AND Z.JOB_ID = (SELECT MAX(Y.JOB_ID)
		                             FROM TB_STREQTRANS Y
		                            WHERE Y.RECORD_CENTER_ID = Z.RECORD_CENTER_ID
		                              AND Y.RECORD_ID = Z.RECORD_ID)
		        ) AS REQUEST_CORP_CD,
		       (SELECT NVL(Z.REQUEST_CORP_NM,' ')
		          FROM TB_STREQTRANS Z
		         WHERE Z.RECORD_CENTER_ID = A.RECORD_CENTER_ID
		           AND Z.RECORD_ID = A.RECORD_ID
		           AND Z.JOB_ID = (SELECT MAX(Y.JOB_ID)
		                             FROM TB_STREQTRANS Y
		                            WHERE Y.RECORD_CENTER_ID = Z.RECORD_CENTER_ID
		                              AND Y.RECORD_ID = Z.RECORD_ID)
                ) AS REQUEST_CORP_NM,
		       (SELECT Z.REQUEST_ORG_CD
		          FROM TB_STREQTRANS Z
		         WHERE Z.RECORD_CENTER_ID = A.RECORD_CENTER_ID
		           AND Z.RECORD_ID = A.RECORD_ID
		           AND Z.JOB_ID = (SELECT MAX(Y.JOB_ID)
		                             FROM TB_STREQTRANS Y
		                            WHERE Y.RECORD_CENTER_ID = Z.RECORD_CENTER_ID
		                              AND Y.RECORD_ID = Z.RECORD_ID)
                ) AS REQUEST_ORG_CD,
		       (SELECT Z.REQUEST_ORG_NM
		          FROM TB_STREQTRANS Z
		         WHERE Z.RECORD_CENTER_ID = A.RECORD_CENTER_ID
		           AND Z.RECORD_ID = A.RECORD_ID
		           AND Z.JOB_ID = (SELECT MAX(Y.JOB_ID)
		                             FROM TB_STREQTRANS Y
		                            WHERE Y.RECORD_CENTER_ID = Z.RECORD_CENTER_ID
		                              AND Y.RECORD_ID = Z.RECORD_ID)
                ) AS REQUEST_ORG_NM,
		       (SELECT Z.REQUEST_USER_ID
		          FROM TB_STREQTRANS Z
		         WHERE Z.RECORD_CENTER_ID = A.RECORD_CENTER_ID
		           AND Z.RECORD_ID = A.RECORD_ID
		           AND Z.JOB_ID = (SELECT MAX(Y.JOB_ID)
		                             FROM TB_STREQTRANS Y
		                            WHERE Y.RECORD_CENTER_ID = Z.RECORD_CENTER_ID
		                              AND Y.RECORD_ID = Z.RECORD_ID)
                ) AS REQUEST_USER_ID,
		       (SELECT Z.REQUEST_USER_NM
		          FROM TB_STREQTRANS Z
		         WHERE Z.RECORD_CENTER_ID = A.RECORD_CENTER_ID
		           AND Z.RECORD_ID = A.RECORD_ID
		           AND Z.JOB_ID = (SELECT MAX(Y.JOB_ID)
		                             FROM TB_STREQTRANS Y
		                            WHERE Y.RECORD_CENTER_ID = Z.RECORD_CENTER_ID
		                              AND Y.RECORD_ID = Z.RECORD_ID)
                ) AS REQUEST_USER_NM,
		       (SELECT Z.REQUEST_USER_POS_RANK_NM
		          FROM TB_STREQTRANS Z
		         WHERE Z.RECORD_CENTER_ID = A.RECORD_CENTER_ID
		           AND Z.RECORD_ID = A.RECORD_ID
		           AND Z.JOB_ID = (SELECT MAX(Y.JOB_ID)
		                             FROM TB_STREQTRANS Y
		                            WHERE Y.RECORD_CENTER_ID = Z.RECORD_CENTER_ID
		                              AND Y.RECORD_ID = Z.RECORD_ID)
                ) AS REQUEST_USER_POS_RANK_NM
		  FROM TB_RDRECORD A,
		       TB_STORIGNFILE B,
		       TB_STORIGNPDFA1FILE C,
		       (SELECT W.*
		          FROM
		          (
		               SELECT ROW_NUMBER() OVER (PARTITION BY H.ORIGN_FILE_ID ORDER BY H.WORK_HIST_ID DESC) AS SORT,
		                      H.*
		                 FROM TB_STWORKHIST H
		                WHERE H.FORMAT_DIV_CD = '0'
		           ) W
		         WHERE W.SORT = 1) D
		 WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
		   AND A.ORIGN_ID = B.ORIGN_ID
		   AND B.RECORD_CENTER_ID = C.RECORD_CENTER_ID(+)
		   AND B.ORIGN_ID = C.ORIGN_ID(+)
		   AND B.DOC_TYPE_CD = C.DOC_TYPE_CD(+)
		   AND B.DOC_TYPE_SNO = C.DOC_TYPE_SNO(+)
		   AND B.ORIGN_FILE_ID = D.ORIGN_FILE_ID(+)
		   AND B.DOC_TYPE_CD NOT IN ('10','S1')
		   AND B.ORIGN_FILE_ID = #ORIGN_FILE_ID:VARCHAR# 
		UNION ALL
		SELECT A.ORIGN_FILE_ID,
		       '바이러스검출' AS HIST_TYPE,
		       B.FILE_NM AS ORIGN_FILE_NM,
		       A.DOC_TYPE_CD,
		       (CASE WHEN A.DOC_TYPE_CD = '01' THEN '본문' ELSE '첨부' END) AS DOC_TYPE_NM,
		       NVL(A.VER,'1.0') AS VER,
		       (CASE WHEN C.ATTACH_FILE_TYPE = '01' THEN '원문 : ' || C.VIRUS_INFECTION_CONT
		             WHEN C.ATTACH_FILE_TYPE = '02' THEN '문서보존포맷 : ' || C.VIRUS_INFECTION_CONT
		             WHEN C.ATTACH_FILE_TYPE = '03' THEN '장기보존포맷 : ' || C.VIRUS_INFECTION_CONT
		             ELSE ''
		        END) AS PDF_A1_FILE_DESC,
		       B.FILE_NM AS PDF_A1_FILE_ID,
		       B.FILE_NM AS PDF_A1_FILE_NM,
		       TO_DATE(C.VIRUS_INFECTION_DTIME,'YYYYMMDDHH24MISS') AS PDF_A1_REG_DTIME,
		       '' AS ATTACH_FILE_MNG_INFO,
		       NULL AS REG_DTIME,
		       C.REQUEST_CORP_CD,
		       C.REQUEST_CORP_NM,
		       C.REQUEST_ORG_CD,
		       C.REQUEST_ORG_NM,
		       C.REQUEST_USER_ID,
		       C.REQUEST_USER_NM,
		       C.REQUEST_USER_POS_RANK_NM
		  FROM (
		           SELECT A.RECORD_CENTER_ID,
		                  A.RECORD_TAKE_SEQ,
		                  C.DOC_TYPE_CD,
		                  C.DOC_TYPE_SNO,
		                  C.ORIGN_FILE_ID,
		                  C.VER
		             FROM TB_TKRECORD A,
		                  TB_RDRECORD B,
		                  TB_STORIGNFILE C
		            WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
		              AND A.RECORD_TAKE_SEQ = B.RECORD_TAKE_SEQ
		              AND B.RECORD_CENTER_ID = C.RECORD_CENTER_ID
		              AND B.ORIGN_ID = C.ORIGN_ID
		              AND C.DOC_TYPE_CD NOT IN ('10','S1')
		              AND C.ORIGN_FILE_ID = #ORIGN_FILE_ID:VARCHAR#
		        ) A,
		       TB_TKATTACHFILE B,
		       TB_TKVIRUSCHECK C
		 WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
		   AND A.RECORD_TAKE_SEQ = B.RECORD_TAKE_SEQ
		   AND A.DOC_TYPE_CD = B.DOC_TYPE_CD
		   AND A.DOC_TYPE_SNO = B.DOC_TYPE_SNO
		   AND B.RECORD_CENTER_ID = C.RECORD_CENTER_ID
		   AND B.RECORD_TAKE_SEQ = C.RECORD_TAKE_SEQ
		   AND B.ATTACH_FILE_TYPE = C.ATTACH_FILE_TYPE
		   AND B.REG_SEQ = C.REG_SEQ
		   AND C.VIRUS_CHECK_FLAG = '1'
		   AND C.VIRUS_INFECTION_FLAG = '1'
		UNION ALL
		SELECT A.ORIGN_FILE_ID,
		       '바이러스치료' AS HIST_TYPE,
		       B.FILE_NM AS ORIGN_FILE_NM,
		       A.DOC_TYPE_CD,
		       (CASE WHEN A.DOC_TYPE_CD = '01' THEN '본문' ELSE '첨부' END) AS DOC_TYPE_NM,
		       NVL(A.VER,'1.0') AS VER,
		       (CASE WHEN C.ATTACH_FILE_TYPE = '01' THEN '원문 : '
		             WHEN C.ATTACH_FILE_TYPE = '02' THEN '문서보존포맷 : '
		             WHEN C.ATTACH_FILE_TYPE = '03' THEN '장기보존포맷 : '
		             ELSE ''
		        END) || (CASE WHEN C.VIRUS_CLEAN_APPLY_FLAG = '1' THEN '바이러스 치료적용'
		                      WHEN C.VIRUS_CLEAN_APPLY_FLAG = '2' AND C.VIRUS_CLEAN_FLAG = '2' THEN '바이러스 치료불가'
		                      WHEN C.VIRUS_CLEAN_APPLY_FLAG = '2' AND C.VIRUS_CLEAN_FLAG = '1' THEN '바이러스 치료파일 미적용'
		                      ELSE ''
		                 END) AS PDF_A1_FILE_DESC,
		       B.FILE_NM AS PDF_A1_FILE_ID,
		       B.FILE_NM AS PDF_A1_FILE_NM,
		       TO_DATE(C.VIRUS_CLEAN_APPLY_DTIME,'YYYYMMDDHH24MISS') AS PDF_A1_REG_DTIME,
		       '' AS ATTACH_FILE_MNG_INFO,
		       NULL AS REG_DTIME,
		       C.REQUEST_CORP_CD,
		       C.REQUEST_CORP_NM,
		       C.REQUEST_ORG_CD,
		       C.REQUEST_ORG_NM,
		       C.REQUEST_USER_ID,
		       C.REQUEST_USER_NM,
		       C.REQUEST_USER_POS_RANK_NM
		  FROM (
		           SELECT A.RECORD_CENTER_ID,
		                  A.RECORD_TAKE_SEQ,
		                  C.DOC_TYPE_CD,
		                  C.DOC_TYPE_SNO,
		                  C.ORIGN_FILE_ID,
		                  C.VER
		             FROM TB_TKRECORD A,
		                  TB_RDRECORD B,
		                  TB_STORIGNFILE C
		            WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
		              AND A.RECORD_TAKE_SEQ = B.RECORD_TAKE_SEQ
		              AND B.RECORD_CENTER_ID = C.RECORD_CENTER_ID
		              AND B.ORIGN_ID = C.ORIGN_ID
		              AND C.DOC_TYPE_CD NOT IN ('10','S1')
		              AND C.ORIGN_FILE_ID = #ORIGN_FILE_ID:VARCHAR#
		        ) A,
		       TB_TKATTACHFILE B,
		       TB_TKVIRUSCHECK C
		 WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
		   AND A.RECORD_TAKE_SEQ = B.RECORD_TAKE_SEQ
		   AND A.DOC_TYPE_CD = B.DOC_TYPE_CD
		   AND A.DOC_TYPE_SNO = B.DOC_TYPE_SNO
		   AND B.RECORD_CENTER_ID = C.RECORD_CENTER_ID
		   AND B.RECORD_TAKE_SEQ = C.RECORD_TAKE_SEQ
		   AND B.ATTACH_FILE_TYPE = C.ATTACH_FILE_TYPE
		   AND B.REG_SEQ = C.REG_SEQ
		   AND C.VIRUS_CHECK_FLAG = '1'
		   AND C.VIRUS_CLEAN_APPLY_FLAG IN ('1','2')
		UNION ALL
		SELECT A.ORIGN_FILE_ID,
		       '바이러스검출' AS HIST_TYPE,
		       A.FILE_NM AS ORIGN_FILE_NM,
		       A.DOC_TYPE_CD,
		       (CASE WHEN A.DOC_TYPE_CD = '01' THEN '본문' ELSE '첨부' END) AS DOC_TYPE_NM,
		       NVL(A.VER,'1.0') AS VER,
		       '원문 : ' || B.VIRUS_INFECTION_CONT AS PDF_A1_FILE_DESC,
		       A.FILE_NM AS PDF_A1_FILE_ID,
		       A.FILE_NM AS PDF_A1_FILE_NM,
		       TO_DATE(B.VIRUS_INFECTION_DTIME,'YYYYMMDDHH24MISS') AS PDF_A1_REG_DTIME,
		       '' AS ATTACH_FILE_MNG_INFO,
		       NULL AS REG_DTIME,
		       B.REQUEST_CORP_CD,
		       B.REQUEST_CORP_NM,
		       B.REQUEST_ORG_CD,
		       B.REQUEST_ORG_NM,
		       B.REQUEST_USER_ID,
		       B.REQUEST_USER_NM,
		       B.REQUEST_USER_POS_RANK_NM
		  FROM TB_STORIGNFILE A,
		       TB_STORIGNVIRUSCHK B
		 WHERE A.ORIGN_FILE_ID = B.FILE_ID
		   AND B.FILE_TYPE = 'OF'
		   AND A.DOC_TYPE_CD NOT IN ('10','S1')
		   AND B.VIRUS_CHECK_FLAG = '1'
		   AND B.VIRUS_INFECTION_FLAG = '1'
		   AND A.ORIGN_FILE_ID = #ORIGN_FILE_ID:VARCHAR#
		UNION ALL
		SELECT A.ORIGN_FILE_ID,
		       '바이러스검출' AS HIST_TYPE,
		       A.FILE_NM AS ORIGN_FILE_NM,
		       A.DOC_TYPE_CD,
		       (CASE WHEN A.DOC_TYPE_CD = '01' THEN '본문' ELSE '첨부' END) AS DOC_TYPE_NM,
		       NVL(A.VER,'1.0') AS VER,
		       '문서보존포맷 : ' || C.VIRUS_INFECTION_CONT AS PDF_A1_FILE_DESC,
		       A.FILE_NM AS PDF_A1_FILE_ID,
		       A.FILE_NM AS PDF_A1_FILE_NM,
		       TO_DATE(C.VIRUS_INFECTION_DTIME,'YYYYMMDDHH24MISS') AS PDF_A1_REG_DTIME,
		       '' AS ATTACH_FILE_MNG_INFO,
		       NULL AS REG_DTIME,
		       C.REQUEST_CORP_CD,
		       C.REQUEST_CORP_NM,
		       C.REQUEST_ORG_CD,
		       C.REQUEST_ORG_NM,
		       C.REQUEST_USER_ID,
		       C.REQUEST_USER_NM,
		       C.REQUEST_USER_POS_RANK_NM
		  FROM TB_STORIGNFILE A,
		       TB_STORIGNPDFA1FILE B,
		       TB_STORIGNVIRUSCHK C
		 WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
		   AND A.ORIGN_ID = B.ORIGN_ID
		   AND A.DOC_TYPE_CD = B.DOC_TYPE_CD
		   AND A.DOC_TYPE_SNO = B.DOC_TYPE_SNO
		   AND B.PDF_A1_FILE_ID = C.FILE_ID
		   AND C.FILE_TYPE = 'PF'
		   AND A.DOC_TYPE_CD NOT IN ('10','S1')
		   AND C.VIRUS_CHECK_FLAG = '1'
		   AND C.VIRUS_INFECTION_FLAG = '1'
		   AND A.ORIGN_FILE_ID = #ORIGN_FILE_ID:VARCHAR#
		UNION ALL
		SELECT A.ORIGN_FILE_ID,
		       '바이러스치료' AS HIST_TYPE,
		       A.FILE_NM AS ORIGN_FILE_NM,
		       A.DOC_TYPE_CD,
		       (CASE WHEN A.DOC_TYPE_CD = '01' THEN '본문' ELSE '첨부' END) AS DOC_TYPE_NM,
		       NVL(A.VER,'1.0') AS VER,
		       '원문 : ' || (CASE WHEN B.VIRUS_CLEAN_APPLY_FLAG = '1' THEN '바이러스 치료적용'
		                          WHEN B.VIRUS_CLEAN_APPLY_FLAG = '2' AND B.VIRUS_CLEAN_FLAG = '2' THEN '바이러스 치료불가'
		                          WHEN B.VIRUS_CLEAN_APPLY_FLAG = '2' AND B.VIRUS_CLEAN_FLAG = '1' THEN '바이러스 치료파일 미적용'
		                          ELSE ''
		                     END) AS PDF_A1_FILE_DESC,
		       A.FILE_NM AS PDF_A1_FILE_ID,
		       A.FILE_NM AS PDF_A1_FILE_NM,
		       TO_DATE(B.VIRUS_CLEAN_APPLY_DTIME,'YYYYMMDDHH24MISS') AS PDF_A1_REG_DTIME,
		       '' AS ATTACH_FILE_MNG_INFO,
		       NULL AS REG_DTIME,
		       B.REQUEST_CORP_CD,
		       B.REQUEST_CORP_NM,
		       B.REQUEST_ORG_CD,
		       B.REQUEST_ORG_NM,
		       B.REQUEST_USER_ID,
		       B.REQUEST_USER_NM,
		       B.REQUEST_USER_POS_RANK_NM
		  FROM TB_STORIGNFILE A,
		       TB_STORIGNVIRUSCHK B
		 WHERE A.ORIGN_FILE_ID = B.FILE_ID
		   AND B.FILE_TYPE = 'OF'
		   AND A.DOC_TYPE_CD NOT IN ('10','S1')
		   AND B.VIRUS_CHECK_FLAG = '1'
		   AND B.VIRUS_CLEAN_APPLY_FLAG IN ('1','2')
		   AND A.ORIGN_FILE_ID = #ORIGN_FILE_ID:VARCHAR#
		UNION ALL
		SELECT A.ORIGN_FILE_ID,
		       '바이러스치료' AS HIST_TYPE,
		       A.FILE_NM AS ORIGN_FILE_NM,
		       A.DOC_TYPE_CD,
		       (CASE WHEN A.DOC_TYPE_CD = '01' THEN '본문' ELSE '첨부' END) AS DOC_TYPE_NM,
		       NVL(A.VER,'1.0') AS VER,
		       '문서보존포맷 : ' || (CASE WHEN C.VIRUS_CLEAN_APPLY_FLAG = '1' THEN '바이러스 치료적용'
		                                  WHEN C.VIRUS_CLEAN_APPLY_FLAG = '2' AND C.VIRUS_CLEAN_FLAG = '2' THEN '바이러스 치료불가'
		                                  WHEN C.VIRUS_CLEAN_APPLY_FLAG = '2' AND C.VIRUS_CLEAN_FLAG = '1' THEN '바이러스 치료파일 미적용'
		                                  ELSE ''
		                             END) AS PDF_A1_FILE_DESC,
		       A.FILE_NM AS PDF_A1_FILE_ID,
		       A.FILE_NM AS PDF_A1_FILE_NM,
		       TO_DATE(C.VIRUS_CLEAN_APPLY_DTIME,'YYYYMMDDHH24MISS') AS PDF_A1_REG_DTIME,
		       '' AS ATTACH_FILE_MNG_INFO,
		       NULL AS REG_DTIME,
		       C.REQUEST_CORP_CD,
		       C.REQUEST_CORP_NM,
		       C.REQUEST_ORG_CD,
		       C.REQUEST_ORG_NM,
		       C.REQUEST_USER_ID,
		       C.REQUEST_USER_NM,
		       C.REQUEST_USER_POS_RANK_NM
		  FROM TB_STORIGNFILE A,
		       TB_STORIGNPDFA1FILE B,
		       TB_STORIGNVIRUSCHK C
		 WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
		   AND A.ORIGN_ID = B.ORIGN_ID
		   AND A.DOC_TYPE_CD = B.DOC_TYPE_CD
		   AND A.DOC_TYPE_SNO = B.DOC_TYPE_SNO
		   AND B.PDF_A1_FILE_ID = C.FILE_ID
		   AND C.FILE_TYPE = 'PF'
		   AND A.DOC_TYPE_CD NOT IN ('10','S1')
		   AND C.VIRUS_CHECK_FLAG = '1'
		   AND C.VIRUS_CLEAN_APPLY_FLAG IN ('1','2')
		   AND A.ORIGN_FILE_ID = #ORIGN_FILE_ID:VARCHAR#
		UNION ALL
		SELECT B.ORIGN_FILE_ID,
		       '특이사항' AS HIST_TYPE,
		       B.FILE_NM AS ORIGN_FILE_NM,
		       B.DOC_TYPE_CD,
		       (CASE WHEN B.DOC_TYPE_CD = '01' THEN '본문' ELSE '첨부' END) AS DOC_TYPE_NM,
		       NVL(B.VER,'1.0') AS VER,
		       D.FOLLOWUP_CAUSE AS PDF_A1_FILE_DESC,
		       C.PDF_A1_FILE_ID,
		       C.FILE_NM AS PDF_A1_FILE_NM,
		       (CASE WHEN B.PDF_A1_TRANS_STATE='4' THEN TO_DATE(C.REG_DTIME,'YYYYMMDDHH24MISS') ELSE TO_DATE(D.WORK_START_DTIME,'YYYYMMDDHH24MISS') END) AS PDF_A1_REG_DTIME,
		       B.ATTACH_FILE_MNG_INFO,
		       TO_DATE(B.REG_DTIME,'YYYYMMDDHH24MISS') AS REG_DTIME,
		       (SELECT NVL(Z.REQUEST_CORP_CD,' ')
		          FROM TB_STREQTRANS Z
		         WHERE Z.RECORD_CENTER_ID = A.RECORD_CENTER_ID
		           AND Z.RECORD_ID = A.RECORD_ID
		           AND Z.JOB_ID = (SELECT MAX(Y.JOB_ID)
		                             FROM TB_STREQTRANS Y
		                            WHERE Y.RECORD_CENTER_ID = Z.RECORD_CENTER_ID
		                              AND Y.RECORD_ID = Z.RECORD_ID)
		        ) AS REQUEST_CORP_CD,
		       (SELECT NVL(Z.REQUEST_CORP_NM,' ')
		          FROM TB_STREQTRANS Z
		         WHERE Z.RECORD_CENTER_ID = A.RECORD_CENTER_ID
		           AND Z.RECORD_ID = A.RECORD_ID
		           AND Z.JOB_ID = (SELECT MAX(Y.JOB_ID)
		                             FROM TB_STREQTRANS Y
		                            WHERE Y.RECORD_CENTER_ID = Z.RECORD_CENTER_ID
		                              AND Y.RECORD_ID = Z.RECORD_ID)
                ) AS REQUEST_CORP_NM,
		       (SELECT Z.REQUEST_ORG_CD
		          FROM TB_STREQTRANS Z
		         WHERE Z.RECORD_CENTER_ID = A.RECORD_CENTER_ID
		           AND Z.RECORD_ID = A.RECORD_ID
		           AND Z.JOB_ID = (SELECT MAX(Y.JOB_ID)
		                             FROM TB_STREQTRANS Y
		                            WHERE Y.RECORD_CENTER_ID = Z.RECORD_CENTER_ID
		                              AND Y.RECORD_ID = Z.RECORD_ID)
                ) AS REQUEST_ORG_CD,
		       (SELECT Z.REQUEST_ORG_NM
		          FROM TB_STREQTRANS Z
		         WHERE Z.RECORD_CENTER_ID = A.RECORD_CENTER_ID
		           AND Z.RECORD_ID = A.RECORD_ID
		           AND Z.JOB_ID = (SELECT MAX(Y.JOB_ID)
		                             FROM TB_STREQTRANS Y
		                            WHERE Y.RECORD_CENTER_ID = Z.RECORD_CENTER_ID
		                              AND Y.RECORD_ID = Z.RECORD_ID)
                ) AS REQUEST_ORG_NM,
		       (SELECT Z.REQUEST_USER_ID
		          FROM TB_STREQTRANS Z
		         WHERE Z.RECORD_CENTER_ID = A.RECORD_CENTER_ID
		           AND Z.RECORD_ID = A.RECORD_ID
		           AND Z.JOB_ID = (SELECT MAX(Y.JOB_ID)
		                             FROM TB_STREQTRANS Y
		                            WHERE Y.RECORD_CENTER_ID = Z.RECORD_CENTER_ID
		                              AND Y.RECORD_ID = Z.RECORD_ID)
                ) AS REQUEST_USER_ID,
		       (SELECT Z.REQUEST_USER_NM
		          FROM TB_STREQTRANS Z
		         WHERE Z.RECORD_CENTER_ID = A.RECORD_CENTER_ID
		           AND Z.RECORD_ID = A.RECORD_ID
		           AND Z.JOB_ID = (SELECT MAX(Y.JOB_ID)
		                             FROM TB_STREQTRANS Y
		                            WHERE Y.RECORD_CENTER_ID = Z.RECORD_CENTER_ID
		                              AND Y.RECORD_ID = Z.RECORD_ID)
                ) AS REQUEST_USER_NM,
		       (SELECT Z.REQUEST_USER_POS_RANK_NM
		          FROM TB_STREQTRANS Z
		         WHERE Z.RECORD_CENTER_ID = A.RECORD_CENTER_ID
		           AND Z.RECORD_ID = A.RECORD_ID
		           AND Z.JOB_ID = (SELECT MAX(Y.JOB_ID)
		                             FROM TB_STREQTRANS Y
		                            WHERE Y.RECORD_CENTER_ID = Z.RECORD_CENTER_ID
		                              AND Y.RECORD_ID = Z.RECORD_ID)
                ) AS REQUEST_USER_POS_RANK_NM
		  FROM TB_RDRECORD A,
		       TB_STORIGNFILE B,
		       TB_STORIGNPDFA1FILE C,
		       (SELECT W.*
		          FROM
		          (
		               SELECT ROW_NUMBER() OVER (PARTITION BY H.ORIGN_FILE_ID ORDER BY H.WORK_HIST_ID DESC) AS SORT,
		                      H.*
		                 FROM TB_STWORKHIST H
		                WHERE H.FORMAT_DIV_CD = '0'
		                  AND H.ERROR_CD = '-P003'
		           ) W
		         WHERE W.SORT = 1) D
		 WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
		   AND A.ORIGN_ID = B.ORIGN_ID
		   AND B.RECORD_CENTER_ID = C.RECORD_CENTER_ID(+)
		   AND B.ORIGN_ID = C.ORIGN_ID(+)
		   AND B.DOC_TYPE_CD = C.DOC_TYPE_CD(+)
		   AND B.DOC_TYPE_SNO = C.DOC_TYPE_SNO(+)
		   AND B.ORIGN_FILE_ID = D.ORIGN_FILE_ID
		   AND B.DOC_TYPE_CD NOT IN ('10','S1')
		   AND B.ORIGN_FILE_ID = #ORIGN_FILE_ID:VARCHAR# 
		ORDER BY PDF_A1_REG_DTIME
	</select>
	
	<!-- M89 수정이력 -->
	<select id="SelectArrModificationHistoryCon" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT (SELECT Z.HUPPER_ORG_CD FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID=B.RECORD_CENTER_ID AND Z.ORG_CD=B.ORG_CD) AS RECORD_CENTER_ORG_CD
		     , (SELECT (SELECT Y.FULL_ORG_NM FROM TB_STORG Y WHERE Y.RECORD_CENTER_ID=Z.RECORD_CENTER_ID AND Y.ORG_CD=Z.HUPPER_ORG_CD) FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID=A.RECORD_CENTER_ID AND Z.ORG_CD=B.ORG_CD) AS RECORD_CENTER_ORG_NM
		     , A.CHNG_USER_NM, A.OPEN_DIV_CD
		     , TO_DATE(A.CHNG_DTIME, 'YYYYMMDDHH24MISS') as CHNG_DTIME
             , (SELECT Z.COM_CD_NM FROM TB_ZZCOMCD Z WHERE Z.COM_TYPE_CD='RD05' AND Z.COM_CD=A.OPEN_DIV_CD) AS OPEN_DIV_NM
		  FROM TB_RDRECORDOPENHIST A, TB_RDRECORD B
		 WHERE A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
		   AND A.RECORD_ID = #RECORD_ID:VARCHAR#
		   AND A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
		   AND A.RECORD_ID = B.RECORD_ID
		 ORDER BY A.RECORD_CENTER_ID, A.RECORD_ID
	</select>
	
	<!-- M222 보고경로 -->
	<select id="SelectArrReportCon" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT (SELECT Z.HUPPER_ORG_CD FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID = B.RECORD_CENTER_ID AND Z.ORG_CD = NVL(B.AGENT_ORG_CD, A.ORG_CD)) AS RECORD_CENTER_ORG_CD,
		       NVL((SELECT
		                  (SELECT Y.FULL_ORG_NM
		                     FROM TB_STORG Y
		                    WHERE Y.RECORD_CENTER_ID = Z.RECORD_CENTER_ID
		                      AND Y.ORG_CD = Z.HUPPER_ORG_CD)
		             FROM TB_STORG Z
		            WHERE Z.RECORD_CENTER_ID = B.RECORD_CENTER_ID
		              AND Z.ORG_CD = NVL(B.AGENT_ORG_CD, A.ORG_CD)
		          ),B.AGENT_ORG_NM) AS RECORD_CENTER_ORG_NM,
		       A.RECORD_ID, 
		       NVL(CASE WHEN B.AGENT_ORG_CD IS NULL THEN B.AGENT_ORG_NM 
		                ELSE (SELECT Z.FULL_ORG_NM FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID = B.RECORD_CENTER_ID AND Z.ORG_CD = B.AGENT_ORG_CD)
		           END, B.AGENT_ORG_NM) AS AGENT_ORG_NM,
		       B.AGENT_ORG_CD,
		       B.AGENT_NM,
		       B.AGENT_ID,
		       B.AGENT_POS_RANK_NM,
		       '' AS AGENT_POS_RANK_CD,
		       B.AGENT_SNO,
		       B.AGENT_TYPE_CD,
		       B.REQ_STATE_VAL,
		       B.HANDL_RSLT,
		       B.OPIN,
		       TO_DATE(DUTY_ACT_DTIME, 'YYYYMMDDHH24MISS') as DUTY_ACT_DTIME
		  FROM TB_RDRECORD A,
		       TB_RDRECORDCREAT B
		 WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
		   AND A.RECORD_ID = B.RECORD_ID
		   AND A.RECORD_CENTER_ID = #RECORD_CENTER_ID:VARCHAR#
		   AND A.RECORD_ID = #RECORD_ID:VARCHAR#
		ORDER BY B.AGENT_SNO
	</select>
	
</sqlMap>