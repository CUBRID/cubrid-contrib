<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="batchReg">

<resultMap id="rmsRecvHist-result" 				class="rms.take.batchReg.domain.BatchRegFile">
		<result property="errFolderCnt"	 		column="ERR_FOLDER_CNT"/>
		<result property="errRecordCnt"	 		column="ERR_RECORD_CNT"/>
		<result property="errSpecialCnt"	 	column="ERR_SPECIAL_CNT"/>
		<result property="errAttachCnt"	 		column="ERR_ATTACH_CNT"/>
		<result property="totFolderCnt"	        column="TOT_FOLDER_CNT"/>
		<result property="totRecordCnt"			column="TOT_RECORD_CNT"/>
		<result property="totSpecialCnt"	 	column="TOT_SPECIAL_CNT"/>
		<result property="totAttachCnt"	 		column="TOT_ATTACH_CNT"/>
		<result property="regProgStateNm"	 	column="REG_PROG_STATE_NM"/>
		<result property="regProgStateCd"	 	column="REG_PROG_STATE_CD"/>
		<result property="recvDtime"	 		column="RECV_DTIME"/>
		<result property="stateFlag"            column="STATE_FLAG"/>
</resultMap>

<resultMap id="recvHist-result" 				class="rms.take.batchReg.domain.BatchRegFile">
		<result property="errFolderCnt"	 		column="ERR_FOLDER_CNT"/>
		<result property="errRecordCnt"	 		column="ERR_RECORD_CNT"/>
		<result property="errSpecialCnt"	 	column="ERR_SPECIAL_CNT"/>
		<result property="errAttachCnt"	 		column="ERR_ATTACH_CNT"/>
		<result property="totFolderCnt"	        column="TOT_FOLDER_CNT"/>
		<result property="totRecordCnt"			column="TOT_RECORD_CNT"/>
		<result property="totSpecialCnt"	 	column="TOT_SPECIAL_CNT"/>
		<result property="totAttachCnt"	 		column="TOT_ATTACH_CNT"/>
		<result property="regProgStateNm"	 	column="REG_PROG_STATE_NM"/>
		<result property="regProgStateCd"	 	column="REG_PROG_STATE_CD"/>
		<result property="recvDtime"	 		column="RECV_DTIME"/>
		<result property="stateFlag"            column="STATE_FLAG"/>
		<result property="takeOrgNm"            column="TAKE_ORG_NM"/>
		<result property="takeOrgCd"            column="TAKE_ORG_CD"/>
		<result property="takeYyyy"            column="TAKE_YYYY"/>
		<result property="takeSno"            column="TAKE_SNO"/>
		<result property="creatSysCd"            column="CREAT_SYS_CD"/>
</resultMap>

<resultMap id="histInfo-result" 				class="rms.take.batchReg.domain.BatchRegFile">
		<result property="recvDtime"	 		column="RECV_DTIME"/>
		<result property="regProgStateNm"	 		column="REG_PROG_STATE_NM"/>
</resultMap>

<resultMap id="folderSeq-result" 			class="rms.take.batchReg.domain.FolderBatchReg">
		<result property="countFolder"	 		column="COUNT_FOLDER"/>
</resultMap>

<!-- 오류내역조회 -->
<resultMap id="errorHist-result" 				class="rms.take.batchReg.domain.BatchRegFile">
		<result property="lineNo"	 		    column="LINE_NO"/>
		<result property="recvErrorRsn"	 		column="RECV_ERROR_RSN"/>
		<result property="fileDivNm"	 		column="FILE_DIV_NM"/>
</resultMap>

<!-- 등록자 조회 -->
<resultMap id="takeReqUserOrg-result" class="java.util.HashMap">
	<result property="takeReqOrgCd" 	column="dept_cd"/>
	<result property="takeReqOrgNm" 	column="dept_nm"/>
</resultMap>

<resultMap id="takeOrgPlan-result" class="rms.take.undTake.domain.TkOrgTakePlan">
	<result property="recordCenterId" 	column="record_center_id"/>
	<result property="regDtime" 		column="reg_dtime"/>
	<result property="takeReqUserId" 	column="take_req_user_id"/>
	<result property="takeReqUserNm" 	column="take_req_user_nm"/>
	<result property="takeOrgNm" 		column="take_org_nm"/>
</resultMap>

<resultMap id="recordSeq-result" 			class="rms.take.batchReg.domain.RecordBatchReg">
	<result property="countRecord"	 	column="COUNT_RECORD"/>
</resultMap>

<resultMap id="folderClssId-result" 			class="rms.take.batchReg.domain.RecordBatchReg">
	<result property="countFolderClssId"	column="COUNT_FOLDER_CLSS_ID"/>
</resultMap>

<resultMap id="folderTakeSeq-result" 			class="rms.take.batchReg.domain.FolderBatchReg">
	<result property="folderTakeSeq"	 	column="FOLDER_TAKE_SEQ"/>
</resultMap>

<resultMap id="recordTakeSeq-result" 			class="rms.take.batchReg.domain.RecordBatchReg">
	<result property="recordTakeSeq"	 	column="RECORD_TAKE_SEQ"/>
</resultMap>

<resultMap id="findOrgInfo-result" 			class="rms.take.batchReg.domain.RecordBatchReg">
	<result property="orgNm"	 		column="ORG_NM"/>
</resultMap>

<resultMap id="findBatchRegInfo-result" 	class="rms.take.undTake.domain.TkOrgTakePlan">
	<result property="takeReqUserId"	 		column="take_req_user_id"/>
	<result property="takeReqUserNm"	 		column="take_req_user_nm"/>
	<result property="takeOrgNm"	 		column="take_org_nm"/>
</resultMap>

<!-- =========================================================================================================
========================================================================================================== -->

	<select id="findBatchRegInfo" parameterClass="rms.take.undTake.domain.TkOrgTakePlan" resultMap="findBatchRegInfo-result">
		SELECT 	take_req_user_id, take_req_user_nm, (SELECT org_nm FROM TB_STORG WHERE ORG_CD = #takeOrgCd:VARCHAR#) take_org_nm
		FROM 	TB_TKORGTAKEPLAN
		WHERE	record_center_id 	= #recordCenterId:VARCHAR#
		AND		creat_sys_cd		= #creatSysCd:VARCHAR#
		AND		take_yyyy			= #takeYyyy:VARCHAR#
		AND		take_org_cd 		= #takeOrgCd:VARCHAR#
		AND		take_sno			= #takeSno:NUMBER# 
	</select>
	
	<select id="findBatchHistInfo" parameterClass="rms.take.batchReg.domain.BatchRegFile" resultMap="histInfo-result">
		select recv_dtime,(SELECT COM_CD_NM FROM TB_ZZCOMCD WHERE COM_TYPE_CD = 'TK11' AND COM_CD = a.REG_PROG_STATE_CD) REG_PROG_STATE_NM
		from tb_tkrecvhist a
		where record_center_id=#recordCenterId:VARCHAR#
	</select>
	
	
	<select id="findBatchRegErrorList" parameterClass="rms.take.batchReg.domain.BatchRegFile" resultMap="errorHist-result">
		SELECT C.*
    FROM (
        SELECT ROWNUM AS rnum
            , B.*
        FROM (
			select a.line_no
					,a.recv_error_rsn
					,(SELECT COM_CD_NM FROM TB_ZZCOMCD WHERE COM_TYPE_CD = 'TK10' AND COM_CD = file_div_cd) file_div_nm
			from tb_tkrecverror a
			where record_center_id = #recordCenterId:VARCHAR# 
			and recv_dtime=#recvDtime:VARCHAR#
			<dynamic>
			 	<isNotEmpty prepend="AND" property="fileDivCd">
			 		a.file_div_cd in ($fileDivCd$)
			 	</isNotEmpty>
			 </dynamic>
			 order by file_div_cd asc, to_number(decode(line_no, 'Exception', 0, line_no))
		) B
	        WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
	    ) C
	    WHERE C.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
	</select>
	<select id="countBatchRegErrorList" parameterClass="rms.take.batchReg.domain.BatchRegFile" resultClass="long">
			select count(1)
			from tb_tkrecverror 
			where record_center_id 	= #recordCenterId:VARCHAR# 
			and recv_dtime			= #recvDtime:VARCHAR#
			<dynamic>
			 	<isNotEmpty prepend="AND" property="fileDivCd">
			 		file_div_cd in ($fileDivCd$)
			 	</isNotEmpty>
			 </dynamic>
	</select>
	
	<!-- TakeSno 조회 -->
	<select id="findMaxTakeSno" parameterClass="rms.take.undTake.domain.TkOrgTakePlan" resultClass="int">
			SELECT  take_sno
			FROM    TB_TKORGTAKEPLAN
			WHERE	record_center_id 	= #recordCenterId:VARCHAR#
			AND 	take_yyyy 			= #takeYyyy:VARCHAR#
			AND		take_org_cd 		= #takeOrgCd:VARCHAR#
			AND		creat_sys_cd 		= #creatSysCd:VARCHAR#
			AND		reg_dtime 			= #regDtime:VARCHAR#
	</select>
	
	<!-- 처리과별인수계획 등록 -->
	<insert id="creatOrgPlan" parameterClass="rms.take.undTake.domain.TkOrgTakePlan" >
	    INSERT INTO TB_TKORGTAKEPLAN (record_center_id
	                                 ,take_yyyy
	                                 ,take_org_cd
	                                 ,creat_sys_cd
	                                 ,take_sno
	                                 ,recv_div_cd
	                                 ,take_req_user_id
	                                 ,take_req_user_nm
	                                 ,take_state_div_cd
	                                 ,reg_dtime)
				              VALUES(#recordCenterId:VARCHAR#
				                    ,#takeYyyy:VARCHAR#
				                    ,#takeOrgCd:VARCHAR#
				                    ,#creatSysCd:VARCHAR#
				                    ,(SELECT NVL(MAX(take_sno),0) + 1
			  			                FROM TB_TKORGTAKEPLAN
			                           WHERE record_center_id = #recordCenterId:VARCHAR#
			                             AND take_yyyy        = #takeYyyy:VARCHAR#
			                             AND take_org_cd      = #takeOrgCd:VARCHAR#
			                             AND creat_sys_cd     = #creatSysCd:VARCHAR#)
			                        ,'2'
			                        ,#takeReqUserId:VARCHAR#
			                        ,#takeReqUserNm:VARCHAR#
			                        ,#takeStateDivCd:VARCHAR#
			                        ,#regDtime:VARCHAR#)
	</insert>
	<update id="updateOrgPlan" parameterClass="rms.take.undTake.domain.TkOrgTakePlan">
		UPDATE 	tb_tkorgtakeplan 
		SET		take_state_div_cd 	= #takeStateDivCd:VARCHAR#
		WHERE	record_center_id 	= #recordCenterId:VARCHAR#
		AND		take_yyyy			= #takeYyyy:VARCHAR#
		AND		take_org_cd			= #takeOrgCd:VARCHAR#
		AND		creat_sys_cd		= #creatSysCd:VARCHAR#
		AND		take_sno			= #takeSno:NUMBER# 
	</update>
	
	<!-- 인수계획 테이블의 기록관ID, 등록일시 조회 -->
	<select id="findTakeOrgPlan" parameterClass="rms.take.undTake.domain.TkOrgTakePlan" resultMap="takeOrgPlan-result">
		SELECT 	record_center_id
			  , reg_dtime
			  , take_req_user_id
			  , take_req_user_nm
			  , (SELECT org_nm FROM TB_STORG WHERE org_cd = #takeOrgCd:VARCHAR#) take_org_nm
		FROM	tb_tkorgtakeplan 
		WHERE	creat_sys_cd 	= #creatSysCd:VARCHAR#
		AND		take_yyyy 		= #takeYyyy:VARCHAR#
		AND		take_org_cd		= #takeOrgCd:VARCHAR#
		AND		take_sno		= #takeSno:NUMBER#
		AND		take_state_div_cd	= #takeStateDivCd:VARCHAR#
	</select>
	
	<!-- 오류 발생시 오류내역 등록 -->
	<insert id="creatBatchRegError" parameterClass="rms.take.batchReg.domain.BatchReg">
	    INSERT INTO TB_TKRECVERROR (record_center_id
	                               ,recv_dtime
	                               ,creat_sys_cd
	                               ,file_div_cd
	                               ,line_no
	                               ,recv_error_rsn
	                               ,reg_prog_state_cd)
				            VALUES (#recordCenterId:VARCHAR#
				                   ,#recvDtime:VARCHAR#
				                   ,#creatSysCd:VARCHAR#
				                   ,#fileDivCd:VARCHAR#
				                   ,#lineNo:VARCHAR#
				                   ,#recvErrorRsn:VARCHAR#
				                   ,#regProgStateCd:VARCHAR#)
	</insert>
	
	<!-- TB_TKRECVHIST에 상태등록 -->
	<insert id="creatRecvHist" parameterClass="rms.take.batchReg.domain.BatchReg">
	    INSERT INTO TB_TKRECVHIST (record_center_id
	                              ,recv_dtime
	                              ,creat_sys_cd
	                              ,file_div_cd
	                              ,total_cnt
	                              ,recv_imposs_error_cnt
	                              ,auto_check_error_cnt
	                              ,exam_error_cnt
	                              ,reg_prog_state_cd
	                              ,state_flag)
				          VALUES (#recordCenterId:VARCHAR#
				                 ,#recvDtime:VARCHAR#
				                 ,#creatSysCd:VARCHAR#
				                 ,#fileDivCd:VARCHAR#
				                 ,#totalCnt:NUMBER#
				                 ,#recvImpossErrorCnt:NUMBER#
				                 ,#autoCheckErrorCnt:NUMBER#
				                 ,#examErrorCnt:NUMBER#
				                 ,#regProgStateCd:VARCHAR#
				                 ,#stateFlag:VARCHAR#)
	</insert>
	
	<!-- 인수현황 테이블에 작업진행상태 및 철, 건수량 갱신 -->
	<update id="updateBatchRegState" parameterClass="rms.take.batchReg.domain.BatchReg">
	    UPDATE TB_TKRECVHIST
	       SET reg_prog_state_cd     = #regProgStateCd:VARCHAR#
	          ,state_flag            = NVL(#stateFlag:VARCHAR#,0)
	          <dynamic>
	              <isGreaterEqual prepend="," property="recvImpossErrorCnt" compareValue="0">
	                  recv_imposs_error_cnt = NVL(#recvImpossErrorCnt:VARCHAR#,0)
	              </isGreaterEqual>
	              <isGreaterEqual prepend="," property="autoCheckErrorCnt" compareValue="0">
	                  auto_check_error_cnt  = NVL(#autoCheckErrorCnt#,0)
	              </isGreaterEqual>
	              <isGreaterEqual prepend="," property="examErrorCnt" compareValue="0">
	                  exam_error_cnt        = NVL(#examErrorCnt#,0)
	              </isGreaterEqual>
	              <isGreaterEqual prepend="," property="totalCnt" compareValue="0">
	                  total_cnt             = NVL(#totalCnt:VARCHAR#,0)
	              </isGreaterEqual>
	          </dynamic>
	    WHERE record_center_id=#recordCenterId:VARCHAR#
	      AND recv_dtime=#recvDtime:VARCHAR# 
	      AND creat_sys_cd=#creatSysCd:VARCHAR#
	      <dynamic>
	         <isNotEmpty prepend="AND" property="fileDivCd">
	              file_div_cd  = #fileDivCd:VARCHAR# 
	         </isNotEmpty>
	      </dynamic>
	</update>
	
	
	<select id="findTakeReqUserOrg" parameterClass="string" resultMap="takeReqUserOrg-result">
		SELECT 	  dept_cd
				, (SELECT org_nm FROM TB_STORG WHERE org_cd = dept_cd) dept_nm
		FROM 	tb_stuser 
		WHERE 	user_id = #takeReqUserId:VARCHAR#
	</select>
	
	<!-- 기록물철 등록 -->
	<insert id="creatBatchFolderReg" parameterClass="rms.take.batchReg.domain.FolderBatchReg">
	INSERT INTO TB_TKFOLDER (record_center_id,folder_take_seq
	                         ,creat_sys_cd,org_cd
	                         ,clss_div_cd,clss_id
	                         ,creat_yyyy,folder_reg_seq
	                         ,oper_read_range_cd,ho_no
	                         ,take_org_cd,take_yyyy
	                         ,take_sno,clss_nm
	                         ,title,sub_title
	                         ,folder_type_div_cd,folder_detl_type_cd
	                         ,sumry,folder_size
	                         ,record_tot_page_cnt,record_reg_cnt
	                         ,efile_cnt,new_div_cd
	                         ,chng_flag,old_folder_creat_org_nm
	                         ,old_folder_clss_no,folder_start_dtime
	                         ,folder_close_dtime,funsh_end_dtime
	                         ,funsh_rsn,presv_term_cd,old_presv_term_cd
	                         ,presv_method_cd,presv_area_cd
	                         ,creat_user_id,creat_user_nm
	                         ,creat_user_org_cd,creat_user_org_nm
	                         ,creat_dtime,erecord_flag
	                         ,creat_sys_folder_id,reg_dtime
	                         ,sml_cd, line_no)
	                 VALUES (#recordCenterId:VARCHAR#,#folderTakeSeq:VARCHAR#
	                        ,#creatSysCd:VARCHAR#,#orgCd:VARCHAR#
	                        ,#clssDivCd:VARCHAR#,#clssId:VARCHAR#
	                        ,#creatYyyy:VARCHAR#,#folderRegSeq:VARCHAR#
	                        ,#operReadRangeCd:VARCHAR#,#hoNo#
	                        ,#takeOrgCd:VARCHAR#,#takeYyyy:VARCHAR#
	                        ,(SELECT NVL(MAX(take_sno),0) 
	                             FROM TB_TKORGTAKEPLAN
			             	    WHERE record_center_id = #recordCenterId:VARCHAR#
			             	      AND creat_sys_cd='05'
			             	      AND take_yyyy=#takeYyyy:VARCHAR#
			             	      AND take_org_cd=#takeOrgCd:VARCHAR#
			             	      ),#clssNm:VARCHAR#
			             	,#title:VARCHAR#,#subTitle:VARCHAR#
			             	,#folderTypeDivCd:VARCHAR#,#folderDetlTypeCd:VARCHAR#
			             	,#sumry:CLOB#,#folderSize:NUMBER#
			             	,#recordTotPageCnt:VARCHAR#,#recordRegCnt:VARCHAR#
			             	,#efileCnt:VARCHAR#,#newDivCd:VARCHAR#
			             	,#chngFlag:VARCHAR#,#oldFolderCreatOrgNm:VARCHAR#
			             	,#oldFolderClssNo:VARCHAR#,#folderStartDtime:VARCHAR#
			             	,#folderCloseDtime:VARCHAR#,#funshEndDtime:VARCHAR#
			             	,#funshRsn:VARCHAR#,DECODE(#presvTermCd:VARCHAR#, '20', '25',LPAD(#presvTermCd:VARCHAR#,2,'0')),DECODE(#presvTermCd:VARCHAR#, '20', '20', '')
			             	,#presvMethodCd:VARCHAR#,#presvAreaCd:VARCHAR#
	                        ,#creatUserId:VARCHAR#,#creatUserNm:VARCHAR#
	                        ,#creatUserOrgCd:VARCHAR#,#creatUserOrgNm:VARCHAR#
	                        ,#creatDtime:VARCHAR#,#erecordFlag:VARCHAR#
	                        ,#creatSysFolderId:VARCHAR#,#regDtime:VARCHAR#
	                        ,#smlCd:VARCHAR#, (#lineNo:VARCHAR#+1) )
	</insert>
	
	<!-- 기록물철 생산정보 등록 -->
	<insert id="creatBatchtFolderCreatReg" parameterClass="rms.take.batchReg.domain.FolderBatchReg">
	    INSERT INTO TB_TKFOLDERCREAT (record_center_id,folder_take_seq
	                                 ,agent_sno,agent_nm
	                                 ,agent_type_cd,agent_org_nm
	                                 ,agent_org_cd,reg_dtime
	                                 ,duty_act_dtime)
				             VALUES (#recordCenterId:VARCHAR#,#folderTakeSeq:VARCHAR#
				                    ,(SELECT NVL(MAX(AGENT_SNO),0)+1 AGENT_SNO
				                        FROM TB_TKFOLDERCREAT
				                       WHERE RECORD_CENTER_ID = #recordCenterId:VARCHAR#
				                         AND FOLDER_TAKE_SEQ = #folderTakeSeq:VARCHAR#)
				                    ,#agentNm:VARCHAR#
				                    ,#agentTypeCd:VARCHAR#,#agentOrgNm:VARCHAR#
				                    ,#agentOrgCd:VARCHAR#,#regDtime:VARCHAR#
				                    ,#dutyActDtime:VARCHAR#)
	</insert>
	
	<insert id="creatTkRecvError" parameterClass="rms.take.batchReg.domain.BatchReg">
	    INSERT INTO TB_TKRECVERROR (record_center_id
	                               ,recv_dtime
	                               ,creat_sys_cd
	                               ,file_div_cd
	                               ,line_no
	                               ,recv_error_rsn
	                               ,reg_prog_state_cd)
				           VALUES (#recordCenterId:VARCHAR#
				                  ,#recvDtime:VARCHAR#
				                  ,#creatSysCd:VARCHAR#
				                  ,#fileDivCd:VARCHAR#
				                  ,#lineNo:VARCHAR#
				                  ,#recvErrorRsn:VARCHAR#
				                  ,#regProgStateCd:VARCHAR#)   
	</insert>
	
	<!-- 기록물철 일련번호 중복 수 조회 -->
	<select id="countFolderRegSeq" parameterClass="rms.take.batchReg.domain.FolderBatchReg" resultMap="folderSeq-result">
			SELECT COUNT(1) COUNT_FOLDER
			FROM TB_TKFOLDER
			WHERE org_cd =#orgCd:VARCHAR# and creat_yyyy = #creatYyyy:VARCHAR# and clss_id=#clssId:VARCHAR# 
			      and folder_reg_seq=#folderRegSeq:VARCHAR# and ho_no=#hoNo:VARCHAR#
	</select>
	<!-- 기록물건 일련번호 중복 수 조회 -->
	
	<select id="countRecordRegSeq" parameterClass="rms.take.batchReg.domain.RecordBatchReg" resultMap="recordSeq-result">
			SELECT COUNT(1) COUNT_RECORD
			FROM TB_TKRECORD
			WHERE org_cd =#orgCd:VARCHAR# and creat_reg_dtime = #creatRegDtime:VARCHAR# and creat_reg_no=#creatRegNo:VARCHAR# 
			      and dtch_reg_no=#dtchRegNo:VARCHAR#
	</select>
	
	
	<!-- 기록물철 일련번호 중복 수 조회 -->
	<select id="countFolderClssId" parameterClass="rms.take.batchReg.domain.RecordBatchReg" resultMap="folderClssId-result">
			SELECT COUNT(1) COUNT_FOLDER_CLSS_ID
			FROM TB_TKFOLDER
			WHERE org_cd =#orgCd:VARCHAR# and creat_yyyy = #creatYyyy:VARCHAR# and clss_id=#clssId:VARCHAR# 
			      and folder_reg_seq=#folderRegSeq:VARCHAR# and ho_no=#hoNo:VARCHAR#
	</select>
	
	<insert id="creatBatchFolderTakovrReg" parameterClass="rms.take.batchReg.domain.FolderBatchReg">
	INSERT INTO TB_TKFOLDERTAKETAKOVR(record_center_id,folder_take_seq,sno,take_takovr_div_cd,take_takovr_org_cd,
									  take_takovr_clss_id,take_takovr_creat_yyyy,take_takovr_folder_reg_seq,take_takovr_ho_no,reg_dtime)
							   VALUES(#recordCenterId:VARCHAR#,#folderTakeSeq:VARCHAR#,(SELECT NVL(MAX(SNO),0)+1 SNO
				   						FROM TB_TKFOLDERTAKETAKOVR
				   						WHERE RECORD_CENTER_ID = #recordCenterId:VARCHAR#
				   						AND   FOLDER_TAKE_SEQ = #folderTakeSeq:VARCHAR#),#takeTakovrDivCd:VARCHAR#,#takeTakovrOrgCd:VARCHAR#,
				   						#takeTakovrClssId:VARCHAR#,#takeTakovrCreatYyyy:VARCHAR#,#takeTakovrFolderRegSeq:VARCHAR#,#takeTakovrHoNo:VARCHAR#,#regDtime:VARCHAR#)
				   						
	</insert>
	
	
	<!-- SELECT 기록물철인수일련번호 생성 -->
		<select id="findFolderTakeSeq" parameterClass="rms.take.batchReg.domain.FolderBatchReg" resultClass="string">
			SELECT TO_CHAR(SYSDATE,'YYYY')||LPAD((TB_TKFOLDER_SQ01.nextval), 15, '0') FOLDER_TAKE_SEQ 
			  FROM DUAL
		</select>
		
	<!-- SELECT 기록물건인수일련번호 생성 -->	
	<select id="findRecordTakeSeq" parameterClass="rms.take.batchReg.domain.RecordBatchReg" resultClass="string">
	    SELECT TO_CHAR(SYSDATE,'YYYY')||LPAD((tb_tkrecord_sq01.nextval), 15, '0') record_take_seq 
	      FROM DUAL
	</select>
		
	<!-- 건별 기록물철인수일련번호 조회 -->
		<select id="findTakeSeqCount" parameterClass="rms.take.batchReg.domain.FolderBatchReg" resultClass="int">
			SELECT count(1)
			FROM TB_TKFOLDER
			WHERE CREAT_SYS_CD = '05'
			  AND ORG_CD = #orgCd:VARCHAR#
			  AND CREAT_YYYY = #creatYyyy:VARCHAR#
			  AND CLSS_ID = #clssId:VARCHAR#
			  AND FOLDER_REG_SEQ = #folderRegSeq:VARCHAR#
			  AND HO_NO = #hoNo:VARCHAR# 
		</select>
		<select id="findTakeSeq" parameterClass="rms.take.batchReg.domain.FolderBatchReg" resultClass="string">
			SELECT /*+INDEX(TB_TKFOLDER,TB_TKFOLDER_UX01)*/ FOLDER_TAKE_SEQ
			FROM TB_TKFOLDER
			WHERE CREAT_SYS_CD = '05'
			  AND ORG_CD = #orgCd:VARCHAR#
			  AND CREAT_YYYY = #creatYyyy:VARCHAR#
			  AND CLSS_ID = #clssId:VARCHAR#
			  AND FOLDER_REG_SEQ = #folderRegSeq:VARCHAR#
			  AND HO_NO = #hoNo:VARCHAR# 
		</select>
		
	<!-- 기록물건 등록 -->
	<insert id="creatBatchRecordReg" parameterClass="rms.take.batchReg.domain.RecordBatchReg">
	    INSERT INTO TB_TKRECORD (record_center_id,record_take_seq
	                            ,folder_take_seq,creat_sys_cd
	                            ,org_cd,creat_yyyy
	                            ,creat_reg_dtime,creat_reg_no
	                            ,dtch_reg_no,title
	                            ,sub_title,record_reg_div_cd
	                            ,record_detl_type_cd,record_sumry
	                            ,audvis_record_type,audvis_record_sumry
	                            ,media_format,medium
	                            ,record_size,attach_cnt
	                            ,record_page_cnt,aprov_pos_rank_nm
	                            ,duty_chrgr_nm,enforc_ymd
	                            ,creat_org_reg_no,erecord_flag
	                            ,old_record_creat_org_nm,old_record_docno
	                            ,old_record_presv_term,open_div_cd
	                            ,open_grade,part_open_rsn
	                            ,open_limit_part,open_expt_dtime
	                            ,recver,sender
	                            ,doc_distr_no,folder_clss_no
	                            ,spcl_record_type,new_div_cd
	                            ,chng_flag,rjct_flag
	                            ,doc_no,creat_user_id,creat_user_nm
	                            ,creat_user_org_cd,creat_user_org_nm
	                            ,creat_user_pos_rank_nm,creat_dtime
	                            ,creat_sys_record_id,lang
	                            ,reg_dtime,attach_type_cd
	                            ,media_format_etc,medium_etc
	                            ,record_sno,attach_etc, record_clss_cd
	                            ,line_no)
		                VALUES (#recordCenterId:VARCHAR#,#recordTakeSeq:VARCHAR#
		                       ,#folderTakeSeq:VARCHAR#,#creatSysCd:VARCHAR#
		                       ,#orgCd:VARCHAR#,#creatYyyy:VARCHAR#
		                       ,#creatRegDtime:VARCHAR#,#creatRegNo:VARCHAR#
		                       ,#dtchRegNo:VARCHAR#,#title:VARCHAR#
		                       ,#subTitle:VARCHAR#,#recordRegDivCd:VARCHAR#
		                       ,#recordDetlTypeCd:VARCHAR#,#recordSumry:CLOB#
		                       ,#audvisRecordType:VARCHAR#,#audvisRecordSumry:VARCHAR#
		                       ,#mediaFormat:VARCHAR#,#medium:VARCHAR#
		                       ,#recordSize:NUMBER#,#attachCnt:NUMBER#
		                       ,#recordPageCnt:VARCHAR#,#aprovPosRankNm:VARCHAR#
		                       ,#dutyChrgrNm:VARCHAR#,#enforcYmd:VARCHAR#
		                       ,#creatOrgRegNo:VARCHAR#,#erecordFlag:VARCHAR#
		                       ,#oldRecordCreatOrgNm:VARCHAR#,#oldRecordDocno:VARCHAR#
		                       ,#oldRecordPresvTerm:VARCHAR#,#openDivCd:VARCHAR#
		                       ,#openGrade:VARCHAR#,#partOpenRsn:VARCHAR#
		                       ,#openLimitPart:VARCHAR#,#openExptDtime:VARCHAR#
		                       ,#recver:VARCHAR#,#sender:VARCHAR#
		                       ,#docDistrNo:VARCHAR#,#folderClssNo:VARCHAR#
		                       ,#spclRecordType:VARCHAR#,#newDivCd:VARCHAR#
		                       ,#chngFlag:VARCHAR#,#rjctFlag:VARCHAR#
		                       ,#docNo:VARCHAR#,#creatUserId:VARCHAR#,#creatUserNm:VARCHAR#
		                       ,#creatUserOrgCd:VARCHAR#,#creatUserOrgNm:VARCHAR#
		                       ,#creatUserPosRankNm:VARCHAR#,#creatDtime:VARCHAR#
		                       ,#creatSysRecordId:VARCHAR#,#lang:VARCHAR#
		                       ,#regDtime:VARCHAR#,#attachTypeCd:VARCHAR#
		                       ,#mediaFormatEtc:VARCHAR#,#mediumEtc:VARCHAR#
		                       ,#recordSno:VARCHAR#,#attachEtc:VARCHAR#, #recordClssCd:VARCHAR#
		                       ,(#lineNo:VARCHAR#+1))
	</insert>
	
	<insert id="creatBatchRecordCreatReg" parameterClass="rms.take.batchReg.domain.RecordCreat">
	    INSERT INTO TB_TKRECORDCREAT (record_center_id,record_take_seq
	                                 ,agent_sno,agent_type_cd
	                                 ,agent_nm,agent_org_cd
	                                 ,agent_org_nm,duty_type_cd
	                                 ,duty_act_dtime,reg_dtime)
				             VALUES (#recordCenterId:VARCHAR#,#recordTakeSeq:VARCHAR#
				                    ,#agentSno:VARCHAR#,#agentTypeCd:VARCHAR#
				                    ,#agentNm:VARCHAR#,#agentOrgCd:VARCHAR#
				                    ,#agentOrgNm:VARCHAR#,#dutyTypeCd:VARCHAR#
					                ,#dutyActDtime:VARCHAR#,#regDtime:VARCHAR#)
	</insert>
	
	<!-- 기록물건 생산내역등록 -->
	<insert id="creatRecordCreatReg" parameterClass="rms.take.batchReg.domain.RecordBatchReg">
	    INSERT INTO TB_TKRECORDCREAT (record_center_id,record_take_seq
	                                 ,agent_sno,agent_type_cd
	                                 ,agent_nm,agent_org_cd
	                                 ,agent_org_nm,duty_type_cd
	                                 ,duty_act_dtime,reg_dtime)
				             VALUES (#recordCenterId:VARCHAR#,#recordTakeSeq:VARCHAR#
				                    ,(SELECT NVL(MAX(AGENT_SNO),0)+1 AGENT_SNO
				                        FROM TB_TKRECORDCREAT
				                       WHERE RECORD_CENTER_ID = #recordCenterId:VARCHAR#
				                         AND RECORD_TAKE_SEQ  = #recordTakeSeq:VARCHAR#),#agentTypeCd:VARCHAR#
				                    ,#agentNm:VARCHAR#,#agentOrgCd:VARCHAR#
				                    ,#agentOrgNm:VARCHAR#,#dutyTypeCd:VARCHAR#
					                ,#dutyActDtime:VARCHAR#,#regDtime:VARCHAR#)
	</insert>
	
	<!-- SELECT 기록물건인수일련번호 생성  -->
	
	<!-- 기록물철 일련번호 중복 수 조회 -->
	<select id="findOrgInfo" parameterClass="rms.take.batchReg.domain.RecordBatchReg" resultMap="findOrgInfo-result">
			SELECT ORG_NM
			  FROM TB_STORG
			 WHERE record_center_id=#recordCenterId:VARCHAR#
			   AND org_cd =#orgCd:VARCHAR#
	</select>
	
	<resultMap id="findFolderOrgInfo-result" 			class="rms.take.batchReg.domain.FolderBatchReg">
			<result property="orgNm"	 		column="ORG_NM"/>
	</resultMap>
	
	<!-- 기록물철 일련번호 중복 수 조회 -->
	<select id="findOrgNm" parameterClass="rms.take.batchReg.domain.FolderBatchReg" resultClass="string">
			SELECT ORG_NM
			  FROM TB_STORG
			 WHERE record_center_id=#recordCenterId:VARCHAR#
			   AND org_cd =#orgCd:VARCHAR# 
	</select>
	
	
	
	<!-- 특수기록물 등록 -->
	<insert id="creatBatchSpecialReg" parameterClass="rms.take.batchReg.domain.TakeSpclReg">
	    INSERT INTO TB_TKSPCLLIST (record_center_id,spcl_list_take_seq
	                              ,folder_take_seq,record_take_seq
	                              ,spcl_list_loc,folder_clss_no
	                              ,record_reg_no,seq
	                              ,spcl_list1,spcl_list2
	                              ,spcl_list3,take_yyyy
	                              ,reg_dtime)
	                      VALUES (#recordCenterId:VARCHAR#,LPAD((TB_TKSPCLLIST_SQ01.nextval), 15, '0')
	                             ,#folderTakeSeq:VARCHAR#,#recordTakeSeq:VARCHAR#
	                             ,#spclListLoc:VARCHAR#,#folderClssNo:VARCHAR#
	                             ,#recordRegNo:VARCHAR#,#seq:VARCHAR# 
	                             ,#spclList1:VARCHAR#,#spclList2:VARCHAR#
	                             ,#spclList3:VARCHAR#,#takeYyyy:VARCHAR#
	                             ,#regDtime:VARCHAR#)
	</insert>
	
	<!-- 첨부파일 등록 -->
	<insert id="creatAttachFileReg" parameterClass="rms.take.batchReg.domain.AttachFileBatch">
	    INSERT INTO TB_TKATTACHFILE (record_center_id,record_take_seq
	                                ,reg_seq,org_cd
	                                ,creat_yyyy,creat_reg_no
	                                ,attach_file_seq,attach_file_page_cnt
	                                ,doc_type_cd,doc_type_sno
	                                ,file_nm,file_size
	                                ,attach_file_path,reg_dtime)
				             VALUES(#recordCenterId:VARCHAR#,#recordTakeSeq:VARCHAR#
				                   ,#regSeq:VARCHAR#,#orgCd:VARCHAR#
				                   ,#creatYyyy:VARCHAR#,#creatRegNo:VARCHAR#
				                   ,#attachFileSeq:VARCHAR#,#attachFilePageCnt:VARCHAR#
				                   ,#docTypeCd:VARCHAR#,#docTypeSno:VARCHAR#
				                   ,#fileNm:VARCHAR#,#fileSize:VARCHAR#
				                   ,#attachFilePath:VARCHAR#,#regDtime:VARCHAR#)
	</insert>
	
	<!-- 기록물철 접수에러 등록 -->
	<insert id="creatBatchFolderErrorReg" parameterClass="rms.take.batchReg.domain.BatchReg">
	INSERT INTO TB_TKRECVERROR (record_center_id,recv_dtime,creat_sys_cd,file_div_cd,line_no,recv_error_rsn,reg_prog_state_cd)
				VALUES(#recordCenterId:VARCHAR#,#recvDtime:VARCHAR#,#creatSysCd:VARCHAR#,#fileDivCd:VARCHAR#,#lineNo:VARCHAR#,#recvErrorRsn:VARCHAR#,#regProgStateCd:VARCHAR#)
	</insert>
	
	<!-- 기록물건 접수에러 등록 -->
	<insert id="creatBatchRecordErrorReg" parameterClass="rms.take.batchReg.domain.RecordBatchReg">
	INSERT INTO TB_TKRECVERROR (record_center_id,recv_dtime,creat_sys_cd,file_div_cd,line_no,recv_error_rsn,reg_prog_state_cd)
				VALUES(#recordCenterId:VARCHAR#,#recvDtime:VARCHAR#,#creatSysCd:VARCHAR#,#fileDivCd:VARCHAR#,#lineNo:VARCHAR#,#recvErrorRsn:VARCHAR#,#regProgStateCd:VARCHAR#)
	</insert>
	
	<!-- 특수기록물 접수에러 등록 -->
	<insert id="creatBatchSpecialErrorReg" parameterClass="rms.take.batchReg.domain.TakeSpclReg">
	INSERT INTO TB_TKRECVERROR (record_center_id,recv_dtime,creat_sys_cd,file_div_cd,line_no,recv_error_rsn,reg_prog_state_cd)
				VALUES(#recordCenterId:VARCHAR#,#recvDtime:VARCHAR#,#creatSysCd:VARCHAR#,#fileDivCd:VARCHAR#,#lineNo:VARCHAR#,#recvErrorRsn:VARCHAR#,#regProgStateCd:VARCHAR#)
	</insert>
	<!-- 첨부파일 접수에러 등록 -->
	<insert id="creatBatchAttachErrorReg" parameterClass="rms.take.batchReg.domain.AttachFileBatch">
	INSERT INTO TB_TKRECVERROR (record_center_id,recv_dtime,creat_sys_cd,file_div_cd,line_no,recv_error_rsn,reg_prog_state_cd)
				VALUES(#recordCenterId:VARCHAR#,#recvDtime:VARCHAR#,#creatSysCd:VARCHAR#,#fileDivCd:VARCHAR#,#lineNo:VARCHAR#,#recvErrorRsn:VARCHAR#,#regProgStateCd:VARCHAR#)
	</insert>
	
	<!-- 기록물철 접수이력 등록 -->
	<insert id="creatBatchFolderHist" parameterClass="rms.take.batchReg.domain.FolderBatchReg">
	INSERT INTO TB_TKRECVHIST (record_center_id,recv_dtime,creat_sys_cd,file_div_cd,total_cnt,recv_imposs_error_cnt,auto_check_error_cnt,exam_error_cnt,reg_prog_state_cd)
				VALUES(#recordCenterId:VARCHAR#,#recvDtime:VARCHAR#,#creatSysCd:VARCHAR#,#fileDivCd:VARCHAR#,#totalCnt:VARCHAR#,#recvImpossErrorCnt:VARCHAR#,#autoCheckErrorCnt:VARCHAR#,
					   #examErrorCnt:VARCHAR#,#regProgStateCd:VARCHAR#)
	</insert>
	
	<update id="updateBatchFolderHist" parameterClass="rms.take.batchReg.domain.FolderBatchReg">
	    UPDATE TB_TKRECVHIST
	       SET recv_imposs_error_cnt = (recv_imposs_error_cnt+NVL(#recvImpossErrorCnt:VARCHAR#,0))
	          ,auto_check_error_cnt=(auto_check_error_cnt+NVL(#autoCheckErrorCnt#,0))
	          ,exam_error_cnt=(exam_error_cnt+NVL(#examErrorCnt#,0))
	          ,reg_prog_state_cd=DECODE(reg_prog_state_cd,'3','3',#regProgStateCd:VARCHAR#)
	          ,total_cnt = NVL(#totalCnt:VARCHAR#,0)
	          ,state_flag = NVL(#stateFlag:VARCHAR#,0)
	    WHERE record_center_id=#recordCenterId:VARCHAR#
	      AND recv_dtime=#recvDtime:VARCHAR# 
	      AND creat_sys_cd=#creatSysCd:VARCHAR# 
	      AND file_div_cd=#fileDivCd:VARCHAR# 
	</update>
	
	<select id="countBatchFolderHist" parameterClass="rms.take.batchReg.domain.FolderBatchReg" resultClass="long">
	    SELECT COUNT(1) 
	      FROM TB_TKRECVHIST
	     WHERE record_center_id=#recordCenterId:VARCHAR# 
	       AND recv_dtime=#recvDtime:VARCHAR# 
	       AND creat_sys_cd=#creatSysCd:VARCHAR# 
	       AND file_div_cd=#fileDivCd:VARCHAR# 
	</select>
	
	<!-- 기록물건 접수이력 등록 -->
	<insert id="creatBatchRecordHist" parameterClass="rms.take.batchReg.domain.RecordBatchReg">
	    INSERT INTO TB_TKRECVHIST (record_center_id,recv_dtime,creat_sys_cd,file_div_cd
	                              ,total_cnt,recv_imposs_error_cnt,auto_check_error_cnt
	                              ,exam_error_cnt,reg_prog_state_cd)
				           VALUES (#recordCenterId:VARCHAR#,#recvDtime:VARCHAR#,#creatSysCd:VARCHAR#
				                  ,#fileDivCd:VARCHAR#,#totalCnt:VARCHAR#,#recvImpossErrorCnt:VARCHAR#
				                  ,#autoCheckErrorCnt:VARCHAR#,#examErrorCnt:VARCHAR#
				                  ,#regProgStateCd:VARCHAR#)
	</insert>
	
	<update id="updateBatchRecordHist" parameterClass="rms.take.batchReg.domain.RecordBatchReg">
	    UPDATE TB_TKRECVHIST
	       SET recv_imposs_error_cnt = (recv_imposs_error_cnt+NVL(#recvImpossErrorCnt:VARCHAR#,0))
	          ,auto_check_error_cnt=(auto_check_error_cnt+NVL(#autoCheckErrorCnt#,0))
	          ,exam_error_cnt=(exam_error_cnt+NVL(#examErrorCnt#,0))
	          ,reg_prog_state_cd=DECODE(reg_prog_state_cd,'3','3',#regProgStateCd:VARCHAR#)
	          ,total_cnt = NVL(#totalCnt:VARCHAR#,0)
	          ,state_flag = NVL(#stateFlag:VARCHAR#,0)
	    WHERE record_center_id=#recordCenterId:VARCHAR# 
	      AND recv_dtime=#recvDtime:VARCHAR# 
	      AND creat_sys_cd=#creatSysCd:VARCHAR# 
	      AND file_div_cd=#fileDivCd:VARCHAR# 
	</update>
	
	<select id="countBatchRecordHist" parameterClass="rms.take.batchReg.domain.RecordBatchReg" resultClass="long">
	    SELECT COUNT(1) 
	      FROM TB_TKRECVHIST
	     WHERE record_center_id=#recordCenterId:VARCHAR# 
	       AND recv_dtime=#recvDtime:VARCHAR# 
	       AND creat_sys_cd=#creatSysCd:VARCHAR# 
	       AND file_div_cd=#fileDivCd:VARCHAR# 
	</select>
	
	<!-- 특수기록물 접수이력 등록 -->
	<insert id="creatBatchSpecialHist" parameterClass="rms.take.batchReg.domain.TakeSpclReg">
	INSERT INTO TB_TKRECVHIST (record_center_id,recv_dtime,creat_sys_cd,file_div_cd,total_cnt,recv_imposs_error_cnt,auto_check_error_cnt,exam_error_cnt,reg_prog_state_cd)
				VALUES(#recordCenterId:VARCHAR#,#recvDtime:VARCHAR#,#creatSysCd:VARCHAR#,#fileDivCd:VARCHAR#,#totalCnt:VARCHAR#,#recvImpossErrorCnt:VARCHAR#,#autoCheckErrorCnt:VARCHAR#,
					   #examErrorCnt:VARCHAR#,#regProgStateCd:VARCHAR#)
	</insert>
	<update id="updateBatchSpecialHist" parameterClass="rms.take.batchReg.domain.TakeSpclReg">
	UPDATE TB_TKRECVHIST
	SET recv_imposs_error_cnt = (recv_imposs_error_cnt+NVL(#recvImpossErrorCnt:VARCHAR#,0))
	, auto_check_error_cnt=(auto_check_error_cnt+NVL(#autoCheckErrorCnt#,0))
	, exam_error_cnt=(exam_error_cnt+NVL(#examErrorCnt#,0))
	, reg_prog_state_cd=DECODE(reg_prog_state_cd,'3','3',#regProgStateCd:VARCHAR#)
	, total_cnt = NVL(#totalCnt:VARCHAR#,0)
	, state_flag = NVL(#stateFlag:VARCHAR#,0)
	WHERE record_center_id=#recordCenterId:VARCHAR# and recv_dtime=#recvDtime:VARCHAR# and creat_sys_cd=#creatSysCd:VARCHAR# and file_div_cd=#fileDivCd:VARCHAR# 
	</update>
	<select id="countBatchSpecialHist" parameterClass="rms.take.batchReg.domain.TakeSpclReg" resultClass="long">
	SELECT COUNT(1) FROM TB_TKRECVHIST
	WHERE record_center_id=#recordCenterId:VARCHAR# and recv_dtime=#recvDtime:VARCHAR# and creat_sys_cd=#creatSysCd:VARCHAR# and file_div_cd=#fileDivCd:VARCHAR# 
	</select>
	
	<!-- 첨부파일 접수이력 등록 -->
	<insert id="creatBatchAttachHist" parameterClass="rms.take.batchReg.domain.AttachFileBatch">
	INSERT INTO TB_TKRECVHIST (record_center_id,recv_dtime,creat_sys_cd,file_div_cd,total_cnt,recv_imposs_error_cnt,auto_check_error_cnt,exam_error_cnt,reg_prog_state_cd)
				VALUES(#recordCenterId:VARCHAR#,#recvDtime:VARCHAR#,#creatSysCd:VARCHAR#,#fileDivCd:VARCHAR#,#totalCnt:VARCHAR#,#recvImpossErrorCnt:VARCHAR#,#autoCheckErrorCnt:VARCHAR#,
					   #examErrorCnt:VARCHAR#,#regProgStateCd:VARCHAR#)
	</insert>
	<update id="updateBatchAttachHist" parameterClass="rms.take.batchReg.domain.AttachFileBatch">
	UPDATE TB_TKRECVHIST
	SET recv_imposs_error_cnt = (recv_imposs_error_cnt+NVL(#recvImpossErrorCnt:VARCHAR#,0))
	, auto_check_error_cnt=(auto_check_error_cnt+NVL(#autoCheckErrorCnt#,0))
	, exam_error_cnt=(exam_error_cnt+NVL(#examErrorCnt#,0))
	, reg_prog_state_cd=DECODE(reg_prog_state_cd,'3','3',#regProgStateCd:VARCHAR#)
	, total_cnt = NVL(#totalCnt:VARCHAR#,0)
	, state_flag = NVL(#stateFlag:VARCHAR#,0)
	WHERE record_center_id=#recordCenterId:VARCHAR# and recv_dtime=#recvDtime:VARCHAR# and creat_sys_cd=#creatSysCd:VARCHAR# and file_div_cd=#fileDivCd:VARCHAR# 
	</update>
	<select id="countBatchAttachHist" parameterClass="rms.take.batchReg.domain.AttachFileBatch" resultClass="long">
	SELECT COUNT(1) FROM TB_TKRECVHIST
	WHERE record_center_id=#recordCenterId:VARCHAR# and recv_dtime=#recvDtime:VARCHAR# and creat_sys_cd=#creatSysCd:VARCHAR# and file_div_cd=#fileDivCd:VARCHAR# 
	</select>
	
	<resultMap id="recordRegNo-result" 			class="rms.take.batchReg.domain.RecordBatchReg">
			<result property="countRecordRegNo"	 		column="COUNT_RECORD_REG_NO"/>
	</resultMap>
	<!-- 기록물건 등록번호 중복 수 조회 -->
	<select id="countRecordRegNo" parameterClass="rms.take.batchReg.domain.RecordBatchReg" resultMap="recordRegNo-result">
			SELECT COUNT(1) COUNT_RECORD_REG_NO
			FROM TB_TKRECORD
			WHERE  dtch_reg_no = #dtchRegNo:VARCHAR#
			and creat_reg_dtime like #creatYyyy:VARCHAR#||'%'
			and creat_reg_no=#creatRegNo:VARCHAR#        
	</select>
	
	<!-- 첨부파일(기록물건등록번호) -->
	<select id="countAttachRecordRegNo" parameterClass="rms.take.batchReg.domain.RecordBatchReg" resultMap="recordRegNo-result">
			SELECT COUNT(1) COUNT_RECORD_REG_NO
			FROM TB_TKRECORD
			WHERE dtch_reg_no = #dtchRegNo:VARCHAR#
			and creat_reg_no = #creatRegNo:VARCHAR#
			and creat_reg_dtime like #creatYyyy:VARCHAR#||'%'
	</select>
	<!-- 기록물건등록번호조회(특수목록) -->
	<select id="findRegRecordTakeSeq" parameterClass="rms.take.batchReg.domain.RecordBatchReg" resultClass="string">
			SELECT RECORD_TAKE_SEQ
			  FROM TB_TKRECORD
			 WHERE record_center_id = #recordCenterId:VARCHAR#
			   AND creat_sys_cd     = #creatSysCd:VARCHAR#
			   AND org_cd           = #orgCd:VARCHAR#
			   AND creat_yyyy       = #creatYyyy:VARCHAR#
			   AND creat_reg_no     = #creatRegNo:VARCHAR#
			   AND dtch_reg_no      = #dtchRegNo:VARCHAR#
	</select>
	
	<select id="findClssNm" resultClass="string">
			SELECT UNIT_NM
			FROM TB_ZZUNIT
			WHERE RECORD_CENTER_ID=#recordCenterId:VARCHAR# AND UNIT_CD=#clssId:VARCHAR#
	</select>
	
	<!-- 삭제 -->
	<delete id="deleteBatchAttachFile" parameterClass="rms.take.batchReg.domain.BatchRegFile">
		<isEqual property="creatSysCd" compareValue="05">
			DELETE FROM tb_tkattachfile AAA
			WHERE EXISTS
			<!--cubrid
			(record_center_id, record_take_seq) IN
			-->
			 (SELECT 1 FROM tb_tkrecord BBB
			    WHERE EXISTS
			    <!--cubrid
			    (record_center_id, folder_take_seq) IN
			    -->
			       (SELECT 1
			        FROM tb_tkfolder CCC
			        WHERE record_center_id  = #recordCenterId:VARCHAR#
			        AND take_org_cd         = #takeOrgCd:VARCHAR#
			        AND take_yyyy           = #takeYyyy:VARCHAR#
			        AND take_sno            = #takeSno:NUMBER#
			        AND creat_sys_cd        = #creatSysCd:VARCHAR#
			        AND BBB.record_center_id = CCC.record_center_id
			        AND BBB.folder_take_seq = CCC.folder_take_seq
			    )
			    AND BBB.record_center_id = AAA.record_center_id
			    AND BBB.record_take_seq = AAA.record_take_seq
			)
		</isEqual>
		<isEqual property="creatSysCd" compareValue="03">
			delete from tb_tkattachfile where record_center_id=#recordCenterId:VARCHAR# and reg_dtime = #regDtime:VARCHAR#
		</isEqual>
	</delete>
	
	<delete id="deleteBatchRecordSpcllist" parameterClass="rms.take.batchReg.domain.BatchRegFile">
		<isEqual property="creatSysCd" compareValue="05">
			DELETE FROM tb_tkspcllist AAA
			WHERE EXISTS
			<!--cubrid
			(record_center_id, record_take_seq) IN
			-->
			   (SELECT 1 FROM tb_tkrecord BBB
			    WHERE 
			    <!--cubrid
			    (record_center_id, folder_take_seq) IN
			    -->
			       (SELECT 1 
			        FROM tb_tkfolder CCC
			        WHERE record_center_id  = #recordCenterId:VARCHAR#
			        AND take_org_cd         = #takeOrgCd:VARCHAR#
			        AND take_yyyy           = #takeYyyy:VARCHAR#
			        AND take_sno            = #takeSno:NUMBER#
			        AND creat_sys_cd        = #creatSysCd:VARCHAR#
			        AND BBB.record_center_id = CCC.record_center_id
			        AND BBB.folder_take_seq = CCC.folder_take_seq
			    )
			    AND BBB.record_center_id = AAA.record_center_id
			    AND BBB.record_take_seq = AAA.record_take_seq
			)
		</isEqual>
		<isEqual property="creatSysCd" compareValue="03">
			DELETE FROM tb_tkspcllist WHERE record_center_id = #recordCenterId:VARCHAR# AND reg_dtime = #regDtime:VARCHAR# AND folder_take_seq is null AND record_take_seq is not null
		</isEqual>
	</delete>
	
	<delete id="deleteBatchFolderSpcllist" parameterClass="rms.take.batchReg.domain.BatchRegFile">
		<isEqual property="creatSysCd" compareValue="05">
			DELETE FROM tb_tkspcllist AAA
			WHERE EXISTS
			<!--cubrid
			(record_center_id, folder_take_seq) IN
			-->
			   (SELECT 1 
			    FROM tb_tkfolder BBB
			    WHERE record_center_id  = #recordCenterId:VARCHAR#
			    AND take_org_cd         = #takeOrgCd:VARCHAR#
			    AND take_yyyy           = #takeYyyy:VARCHAR#
			    AND take_sno            = #takeSno:NUMBER#
			    AND creat_sys_cd        = #creatSysCd:VARCHAR#
			    AND BBB.record_center_id = AAA.record_center_id
			    AND BBB.folder_take_seq = AAA.folder_take_seq
			)
		</isEqual>
		<isEqual property="creatSysCd" compareValue="03">
			DELETE FROM tb_tkspcllist WHERE record_center_id = #recordCenterId:VARCHAR# AND reg_dtime = #regDtime:VARCHAR# AND folder_take_seq is not null AND record_take_seq is null
		</isEqual>
	</delete>
	
	<delete id="deleteBatchRecordCreat" parameterClass="rms.take.batchReg.domain.BatchRegFile">
		<isEqual property="creatSysCd" compareValue="05">
			DELETE FROM tb_tkrecordcreat AAA
			WHERE EXISTS
			<!--cubrid
			(record_center_id, record_take_seq) IN
			-->
			
			   (SELECT 1 FROM tb_tkrecord BBB
			    WHERE 
			    <!--cubrid
			    (record_center_id, folder_take_seq) IN
			    -->
			    
			       (SELECT 1 
			        FROM tb_tkfolder CCC
			        WHERE record_center_id  = #recordCenterId:VARCHAR#
			        AND take_org_cd         = #takeOrgCd:VARCHAR#
			        AND take_yyyy           = #takeYyyy:VARCHAR#
			        AND take_sno            = #takeSno:NUMBER#
			        AND creat_sys_cd        = #creatSysCd:VARCHAR#
			        AND BBB.record_center_id = CCC.record_center_id
			        AND BBB.folder_take_seq = CCC.folder_take_seq
			    )
			    AND BBB.record_center_id = AAA.record_center_id
			    AND BBB.record_take_seq = AAA.record_take_seq
			)
		</isEqual>
		<isEqual property="creatSysCd" compareValue="03">
			delete from tb_tkrecordcreat  where record_center_id = #recordCenterId:VARCHAR# and reg_dtime = #regDtime:VARCHAR# 
		</isEqual>
	</delete>
	
	<delete id="deleteBatchFolderCreat" parameterClass="rms.take.batchReg.domain.BatchRegFile">
		<isEqual property="creatSysCd" compareValue="05">
			DELETE FROM tb_tkfoldercreat AAA
			WHERE EXISTS
			<!--cubrid
			(record_center_id, folder_take_seq) IN
			-->
			
			   (SELECT 1
			    FROM tb_tkfolder BBB
			   	WHERE record_center_id  = #recordCenterId:VARCHAR#
			    AND take_org_cd         = #takeOrgCd:VARCHAR#
			    AND take_yyyy           = #takeYyyy:VARCHAR#
			    AND take_sno            = #takeSno:NUMBER#
		      AND creat_sys_cd        = #creatSysCd:VARCHAR#
		      AND BBB.record_center_id = AAA.record_center_id
			    AND BBB.folder_take_seq = AAA.folder_take_seq
			)
		</isEqual>
		<isEqual property="creatSysCd" compareValue="03">
			delete from tb_tkfoldercreat where record_center_id=#recordCenterId:VARCHAR# and reg_dtime = #regDtime:VARCHAR# 
		</isEqual>
	</delete>
	
	<delete id="deleteBatchRecord" parameterClass="rms.take.batchReg.domain.BatchRegFile">
		<isEqual property="creatSysCd" compareValue="05">
			DELETE FROM tb_tkRecord AAA
			WHERE EXISTS
			<!--cubrid
			(record_center_id, folder_take_seq) IN
			-->
			
			   (SELECT 1
			    FROM tb_tkfolder BBB
			    WHERE record_center_id  = #recordCenterId:VARCHAR#
			    AND take_org_cd         = #takeOrgCd:VARCHAR#
			    AND take_yyyy           = #takeYyyy:VARCHAR#
			    AND take_sno            = #takeSno:NUMBER#
		      AND creat_sys_cd        = #creatSysCd:VARCHAR#
		      AND BBB.record_center_id = AAA.record_center_id
			    AND BBB.folder_take_seq = AAA.folder_take_seq
			)
		</isEqual>
		<isEqual property="creatSysCd" compareValue="03">
			delete from tb_tkRecord where reg_dtime = #regDtime:VARCHAR# and record_center_id=#recordCenterId:VARCHAR#
		</isEqual>
	</delete>
	
	<delete id="deleteBatchFolderTakeTakovr" parameterClass="rms.take.batchReg.domain.BatchRegFile">
		<isEqual property="creatSysCd" compareValue="05">
			DELETE FROM tb_tkfoldertaketakovr AAA
			WHERE EXISTS
			<!--cubrid
			(record_center_id, folder_take_seq) IN
			-->
			
			   (SELECT 1
			    FROM tb_tkfolder BBB
			    WHERE record_center_id  = #recordCenterId:VARCHAR#
			    AND take_org_cd         = #takeOrgCd:VARCHAR#
			    AND take_yyyy           = #takeYyyy:VARCHAR#
			    AND take_sno            = #takeSno:NUMBER#
		      AND creat_sys_cd        = #creatSysCd:VARCHAR#
		      AND BBB.record_center_id = AAA.record_center_id
			    AND BBB.folder_take_seq = AAA.folder_take_seq
			)
		</isEqual>
		<isEqual property="creatSysCd" compareValue="03">
			delete from tb_tkfoldertaketakovr where record_center_id=#recordCenterId:VARCHAR# AND reg_dtime = #regDtime:VARCHAR# 
		</isEqual>
	</delete>
	
	<delete id="deleteBatchFolder" parameterClass="rms.take.batchReg.domain.BatchRegFile">
		<isEqual property="creatSysCd" compareValue="05">
			DELETE FROM tb_tkfolder
			WHERE record_center_id  = #recordCenterId:VARCHAR#
		    AND take_org_cd         = #takeOrgCd:VARCHAR#
		    AND take_yyyy           = #takeYyyy:VARCHAR#
		    AND take_sno            = #takeSno:NUMBER#
	        AND creat_sys_cd        = #creatSysCd:VARCHAR#
        </isEqual>
        <isEqual property="creatSysCd" compareValue="03">
        	delete from tb_tkfolder where record_center_id=#recordCenterId:VARCHAR# and reg_dtime = #regDtime:VARCHAR#
		</isEqual>        	
	</delete>
	
	<delete id="deleteBatchOrgPlan" parameterClass="rms.take.batchReg.domain.BatchRegFile">
		<isEqual property="creatSysCd" compareValue="05">
			DELETE FROM tb_tkorgtakeplan
			WHERE record_center_id  = #recordCenterId:VARCHAR#
		    AND take_org_cd         = #takeOrgCd:VARCHAR#
		    AND take_yyyy           = #takeYyyy:VARCHAR#
		    AND take_sno            = #takeSno:NUMBER#
	        AND creat_sys_cd        = #creatSysCd:VARCHAR#
	    </isEqual>
	    <isEqual property="creatSysCd" compareValue="03">
	    	delete from tb_tkorgtakeplan where record_center_id = #recordCenterId:VARCHAR# AND reg_dtime = #regDtime:VARCHAR#
	    </isEqual>
	</delete>

	<delete id="deleteBatchRecvHist" parameterClass="rms.take.batchReg.domain.BatchRegFile">
		DELETE FROM tb_tkrecvhist
		WHERE record_center_id 	= #recordCenterId:VARCHAR# 
		AND recv_dtime 			= #recvDtime:VARCHAR#
	</delete>
	
	<delete id="deleteBatchRecvError" parameterClass="rms.take.batchReg.domain.BatchRegFile">
		DELETE FROM tb_tkrecverror
		WHERE record_center_id=#recordCenterId:VARCHAR# 
		AND recv_dtime = #recvDtime:VARCHAR# 
	</delete>
	
	<!-- 삭제끝 -->
	<!--//////////////////////////////////////////////////////////////////
	    // JSM 수정 START /////////////////////////////////////////////////
	    //////////////////////////////////////////////////////////////////-->
	<!-- 접수내역조회 (by JSM)-->
	<select id="findRMSBatchRegFileRegList" parameterClass="rms.take.batchReg.domain.BatchRegFile" resultMap="rmsRecvHist-result">
		SELECT C.*
    FROM (
        SELECT ROWNUM AS rnum
            , B.*
        FROM (
		SELECT recv_dtime, reg_prog_state_cd, state_flag
		       ,(SELECT com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd ='TK11' and com_cd = a.reg_prog_state_cd) reg_prog_state_nm
				      , tot_folder_cnt, err_folder_cnt
				      , tot_record_cnt, err_record_cnt
				      , tot_special_cnt, err_special_cnt
				      , tot_attach_cnt, err_attach_cnt
		FROM(	    
			SELECT /*+ no_merge */ recv_dtime, max(reg_prog_state_cd) reg_prog_state_cd, state_flag
				      , SUM(folder_tot) tot_folder_cnt, SUM(folder_err) err_folder_cnt
				      , SUM(record_tot) tot_record_cnt, SUM(record_err) err_record_cnt
				      , SUM(spcl_tot) tot_special_cnt, SUM(spcl_err) err_special_cnt
				      , SUM(attach_tot) tot_attach_cnt, SUM(attach_err) err_attach_cnt
			/*
				      ,sum(folder_err)||'/'||sum(folder_tot) folder_err
					  ,sum(record_err)||'/'||sum(record_tot) record_err
				      ,sum(spcl_err)||'/'||sum(spcl_tot) spcl_err
					  ,sum(attach_err)||'/'||sum(attach_tot) attach_err
				      ,sum(folder_err) folder_err, sum(record_err) record_err
				      ,sum(spcl_err) spcl_err, sum(attach_err) attach_err
				      ,sum(folder_tot) folder_tot, sum(record_tot) record_tot
				      ,sum(spcl_tot) spcl_tot, sum(attach_tot) attach_tot
			*/		  
			FROM(
				SELECT recv_dtime, reg_prog_state_cd , state_flag
				      ,sum(folder_err) folder_err, sum(record_err) record_err
				      ,sum(spcl_err) spcl_err, sum(attach_err) attach_err
				      ,sum(folder_tot) folder_tot, sum(record_tot) record_tot
				      ,sum(spcl_tot) spcl_tot, sum(attach_tot) attach_tot
				FROM(
					select recv_dtime, reg_prog_state_cd , file_div_cd, state_flag,
						   decode(file_div_cd, '1', (case reg_prog_state_cd when '3' then sum(recv_imposs_error_cnt)
						                         		  					when '6' then sum(auto_check_error_cnt)
																			when '7' then sum(exam_error_cnt)
						                                                    else 0 end)
												 ,0) folder_err,
						   decode(file_div_cd, '2', (case reg_prog_state_cd when '3' then sum(recv_imposs_error_cnt)
						                         		  					when '6' then sum(auto_check_error_cnt)
																			when '7' then sum(exam_error_cnt)
						                                                    else 0 end)
												 ,0) record_err,
						   decode(file_div_cd, '3', (case reg_prog_state_cd when '3' then sum(recv_imposs_error_cnt)
						                         		  					when '6' then sum(auto_check_error_cnt)
																			when '7' then sum(exam_error_cnt)
						                                                    else 0 end)
												 ,0) spcl_err,
						   decode(file_div_cd, '4', (case reg_prog_state_cd when '3' then sum(recv_imposs_error_cnt)
						                         		  					when '6' then sum(auto_check_error_cnt)
																			when '7' then sum(exam_error_cnt)
						                                                    else 0 end)
												 ,0) attach_err,
						   decode(file_div_cd, '1', sum(total_cnt), 0) folder_tot,
						   decode(file_div_cd, '2', sum(total_cnt), 0) record_tot,
						   decode(file_div_cd, '3', sum(total_cnt), 0) spcl_tot,
						   decode(file_div_cd, '4', sum(total_cnt), 0) attach_tot
					from tb_tkrecvhist
					where record_center_id =#recordCenterId:VARCHAR#
					<dynamic>			
						<isNotEmpty prepend="AND" property="recvDtimeF">
							(SUBSTR(RECV_DTIME,0,8) BETWEEN #recvDtimeF:VARCHAR# AND #recvDtimeT:VARCHAR#)
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="creatSysCd">
							CREAT_SYS_CD = #creatSysCd:VARCHAR#
						</isNotEmpty>
					</dynamic>	
					group by recv_dtime, reg_prog_state_cd, file_div_cd , state_flag  
					)
				group by recv_dtime, reg_prog_state_cd, state_flag
				) 
			group by recv_dtime, state_flag
			order by recv_dtime
			) a
			) B
        WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
    ) C
    WHERE C.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
	</select>
	
	<select id="countRMSBatchRegFileRegList" parameterClass="rms.take.batchReg.domain.BatchRegFile" resultClass="long">
		select count(1)
			FROM (
				select recv_dtime
				from tb_tkrecvhist  where record_center_id = #recordCenterId:VARCHAR#
				<dynamic>			
					<isNotEmpty prepend="AND" property="recvDtimeF">
						(SUBSTR(RECV_DTIME,0,8) BETWEEN #recvDtimeF:VARCHAR# AND #recvDtimeT:VARCHAR#)
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="creatSysCd">
						CREAT_SYS_CD = #creatSysCd:VARCHAR#
					</isNotEmpty>
				</dynamic>
				group by recv_dtime
			)
	</select>
	
	<!-- 접수내역조회 (by JSM)-->
	<select id="findBatchRegFileRegList" parameterClass="rms.take.batchReg.domain.BatchRegFile" resultMap="recvHist-result">
		SELECT C.*
    FROM (
        SELECT ROWNUM AS rnum
            , B.*
        FROM (
	SELECT take_org_nm
	    , recv_dtime
	    , state_flag
	    , reg_prog_state_nm
	    , reg_prog_state_cd
	    , take_org_cd
        , take_yyyy
        , take_sno
        , creat_sys_cd
	    , NVL(folder_err, 0) err_folder_cnt
	    , NVL(folder_tot, 0) tot_folder_cnt
	    , NVL(record_err, 0) err_record_cnt
	    , NVL(record_tot, 0) tot_record_cnt
	    , NVL(special_err, 0) err_special_cnt
	    , NVL(special_tot, 0) tot_special_cnt
	    , NVL(attach_err, 0) err_attach_cnt
	    , NVL(attach_tot, 0) tot_attach_cnt
	FROM (
	    SELECT (SELECT B.org_nm
	            FROM   TB_STORG B
	            WHERE  B.record_center_id = A.record_center_id
	            AND    B.org_cd = A.take_org_cd ) take_org_nm
	        , A.reg_dtime recv_dtime
	        , (SELECT  NVL(MAX(state_flag), '0') 
	           FROM   TB_TKRECVHIST B 
	           WHERE  B.record_center_id = A.record_center_id 
	           AND    B.recv_dtime = A.reg_dtime ) state_flag
	        , B.com_cd_nm reg_prog_state_nm
	        , B.com_cd reg_prog_state_cd
	        , A.take_org_cd
	        , A.take_yyyy
	        , A.take_sno
	        , A.creat_sys_cd
	        , (SELECT COUNT(1) FROM tb_tkrecverror B 
               WHERE B.record_center_id = A.record_center_id
               AND   B.recv_dtime = A.reg_dtime 
	           AND    B.file_div_cd = '1') folder_err
	        , (SELECT total_cnt 
	           FROM   TB_TKRECVHIST B 
	           WHERE  B.record_center_id = A.record_center_id 
	           AND    B.recv_dtime = A.reg_dtime 
	           AND    B.file_div_cd = '1') folder_tot
	        , (SELECT COUNT(1) FROM tb_tkrecverror B 
               WHERE B.record_center_id = A.record_center_id
               AND   B.recv_dtime = A.reg_dtime 
	           AND    B.file_div_cd = '2') record_err
	        , (SELECT total_cnt 
	           FROM   TB_TKRECVHIST B 
	           WHERE  B.record_center_id = A.record_center_id 
	           AND    B.recv_dtime = A.reg_dtime 
	           AND    B.file_div_cd = '2') record_tot
	        , (SELECT COUNT(1) FROM tb_tkrecverror B 
               WHERE B.record_center_id = A.record_center_id
               AND   B.recv_dtime = A.reg_dtime 
	           AND    B.file_div_cd = '3') special_err
	        , (SELECT total_cnt 
	           FROM   TB_TKRECVHIST B 
	           WHERE  B.record_center_id = A.record_center_id 
	           AND    B.recv_dtime = A.reg_dtime 
	           AND    B.file_div_cd = '3') special_tot
	        , (SELECT COUNT(1) FROM tb_tkrecverror B 
               WHERE B.record_center_id = A.record_center_id
               AND   B.recv_dtime = A.reg_dtime 
	           AND    B.file_div_cd = '4') attach_err
	        , (SELECT total_cnt 
	           FROM   TB_TKRECVHIST B 
	           WHERE  B.record_center_id = A.record_center_id 
	           AND    B.recv_dtime = A.reg_dtime 
	           AND    b.file_div_cd = '4') attach_tot
	    FROM TB_TKORGTAKEPLAN A, TB_ZZCOMCD B
	    WHERE A.record_center_id = #recordCenterId:VARCHAR#
	    AND   (A.take_state_div_cd(+) = B.com_cd AND B.com_type_cd = 'TK11')  
	    AND   A.creat_sys_cd = #creatSysCd:VARCHAR#
	    <dynamic>
			<isNotEmpty prepend="AND" property="recvDtimeF">
				SUBSTR(A.reg_dtime, 0, 8) BETWEEN #recvDtimeF:VARCHAR# AND #recvDtimeT:VARCHAR#	
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="takeOrgCd">
				A.take_org_cd = #takeOrgCd:VARCHAR#		
			</isNotEmpty>
		</dynamic>
	    ORDER BY recv_dtime
	)
	) B
        WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
    ) C
    WHERE C.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
	</select>
	<select id="countBatchRegFileRegList" parameterClass="rms.take.batchReg.domain.BatchRegFile" resultClass="long">
		SELECT 	COUNT(1) 
		FROM 	TB_TKORGTAKEPLAN 
		WHERE 	RECORD_CENTER_ID = #recordCenterId#
		AND 	CREAT_SYS_CD = #creatSysCd:VARCHAR#
		<dynamic>
			<isNotEmpty prepend="AND" property="recvDtimeF">
				SUBSTR(REG_DTIME, 0, 8) BETWEEN #recvDtimeF:VARCHAR# AND #recvDtimeT:VARCHAR#	
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="takeOrgCd">
				take_org_cd = #takeOrgCd:VARCHAR#		
			</isNotEmpty>
		</dynamic>
	</select>
	
	<!-- 상태값저장 -->
	<insert id="creatStateFlag" parameterClass="rms.take.batchReg.domain.FolderBatchReg">
	INSERT INTO TB_TKRECVHIST (record_center_id,recv_dtime,creat_sys_cd,file_div_cd,total_cnt,recv_imposs_error_cnt,auto_check_error_cnt,exam_error_cnt,reg_prog_state_cd,state_flag)
				VALUES(#recordCenterId:VARCHAR#,#regDtime:VARCHAR#,#creatSysCd:VARCHAR#,#fileDivCd:VARCHAR#,#totalCnt:VARCHAR#,#recvImpossErrorCnt:VARCHAR#,#autoCheckErrorCnt:VARCHAR#,
					   #examErrorCnt:VARCHAR#,#regProgStateCd:VARCHAR#,#stateFlag:VARCHAR#)
	</insert>
	
	<update id="updateStateFlag" parameterClass="rms.take.batchReg.domain.FolderBatchReg">
		UPDATE 	TB_TKRECVHIST
		SET   	  state_flag 		= #stateFlag:VARCHAR#
				<dynamic>
					<isNotEmpty prepend=", " property="regProgStateCd">
						reg_prog_state_cd = #regProgStateCd:VARCHAR#	
					</isNotEmpty>
				</dynamic>
		WHERE 	record_center_id	= #recordCenterId:VARCHAR# 
		AND 	recv_dtime			= #recvDtime:VARCHAR# 
		AND 	creat_sys_cd		= #creatSysCd:VARCHAR# 
	</update>
		<!-- 
			기록물인수>등록인수>기록물등록>등록 (update 기록물건의 첨부파일정보 갱신)
		 -->
	<update id="updateRecordInfo" parameterClass="rms.take.batchReg.domain.RecordBatchReg">
			UPDATE TB_TKRECORD A
			SET  A.record_size = NVL((SELECT SUM(B.file_size)
			                          FROM  TB_TKATTACHFILE B
			                          WHERE B.record_center_id = A.record_center_id
			                          AND   B.record_take_seq = A.record_take_seq),0)
			   <!-- 행정DB기록물건의 
			        본문/첨부수(ATTACH_CNT)는 등록항목의 값을 그대로 등록함.
			        기록물쪽수(RECORD_PAGE_CNT)는 등록항목의 값을 그대로 등록함.
			   , A.attach_cnt  = '1'
			   , A.record_page_cnt = NVL((SELECT SUM(B.attach_file_page_cnt)
			                          	  FROM  TB_TKATTACHFILE B
			                              WHERE B.record_center_id = A.record_center_id
			                              AND   B.record_take_seq = A.record_take_seq),0)
			   -->
			WHERE A.record_center_id = #recordCenterId:VARCHAR#
			AND   A.record_take_seq = #recordTakeSeq:VARCHAR#
	</update>
	
	
	<!-- 기록물건 스캔완료여부 업데이트  -->
	
	<update id="updateRecordScanFinFlag" parameterClass="rms.take.batchReg.domain.AttachFileBatch">
			UPDATE TB_TKRECORD
			   SET scan_fin_flag = '1'
			 WHERE record_center_id = #recordCenterId:VARCHAR#
			   AND record_take_seq  = #recordTakeSeq:VARCHAR#
	</update>
		<!-- 
			기록물인수>등록인수>기록물등록>등록 (update 기록물철의 건정보 갱신)
		 -->
	<update id="updateFolderInfo" parameterClass="rms.take.batchReg.domain.RecordBatchReg">
			UPDATE TB_TKFOLDER A
			SET  A.folder_size = NVL((SELECT SUM(B.record_size)
			                          FROM  TB_TKRECORD B
			                          WHERE B.record_center_id = A.record_center_id
			                          AND   B.folder_take_seq = A.folder_take_seq),0)
			    <!--  
			    , A.record_tot_page_cnt = NVL((SELECT LPAD(TO_CHAR(SUM(TO_NUMBER(B.record_page_cnt))),6,'0')
			                                   FROM  TB_TKRECORD B
			                                   WHERE B.record_center_id = A.record_center_id
			                                   AND   B.folder_take_seq = A.folder_take_seq),'000000')
			    -->
			    , A.record_reg_cnt = NVL((SELECT LPAD(TO_CHAR(COUNT(1)),6,'0')
			                              FROM  TB_TKRECORD B
			                              WHERE B.record_center_id = A.record_center_id
			                              AND   B.folder_take_seq = A.folder_take_seq),'000000')
			    <!--  
			    , A.efile_cnt = NVL((SELECT LPAD(TO_CHAR(SUM(B.attach_cnt)),6,'0')
			                     FROM  TB_TKRECORD B
			                     WHERE B.record_center_id = A.record_center_id
			                     AND   B.folder_take_seq = A.folder_take_seq),'000000')
			      -->
			    , A.EFILE_CNT='000000'
				, A.erecord_flag = DECODE((SELECT SUM(DECODE (B.erecord_flag, '1', 1, 0))
				                           FROM  TB_TKRECORD B
				                           WHERE B.record_center_id = A.record_center_id
				                           AND   B.folder_take_seq = A.folder_take_seq),0,'2'
										   , DECODE((SELECT SUM(DECODE (B.erecord_flag, '2', 1, 0))
					                                 FROM  TB_TKRECORD B
					                                 WHERE B.record_center_id = A.record_center_id
					                                 AND   B.folder_take_seq = A.folder_take_seq),0,'1','3'))
			WHERE
				EXISTS
				(
				SELECT record_center_id, folder_take_seq
				FROM  TB_TKRECORD
				WHERE record_center_id = #recordCenterId:VARCHAR#
				AND   record_take_seq = #recordTakeSeq:VARCHAR#
				AND record_center_id = A.record_center_id
				AND folder_take_seq = A.folder_take_seq
				)
	</update>
	
	<select id="isTkFolder" parameterClass="rms.take.batchReg.domain.FolderBatchReg" resultClass="int">
			SELECT COUNT(1)
			  FROM TB_TKFOLDER
			 WHERE RECORD_CENTER_ID=#recordCenterId:VARCHAR#
			   AND CREAT_SYS_CD='05'
			   AND ORG_CD=#orgCd:VARCHAR# 
			   AND CREAT_YYYY=#creatYyyy:VARCHAR#
			   AND CLSS_ID=#clssId:VARCHAR#
			   AND FOLDER_REG_SEQ=#folderRegSeq:VARCHAR#
			   AND HO_NO=#hoNo:VARCHAR#
	</select>
	
	<select id="isRecord" parameterClass="rms.take.batchReg.domain.RecordBatchReg" resultClass="int">
			SELECT COUNT(1)
			  FROM TB_TKRECORD
			 WHERE RECORD_CENTER_ID=#recordCenterId:VARCHAR#
			   AND CREAT_SYS_CD='05'
			   AND ORG_CD=#orgCd:VARCHAR# 
			   AND CREAT_YYYY=#creatYyyy:VARCHAR#
			   AND CREAT_REG_NO=#creatRegNo:VARCHAR#
			   AND DTCH_REG_NO=#dtchRegNo:VARCHAR#
	</select>
	
	<!-- 기록물건등록번호조회(특수목록) -->
	<select id="findFolderClssNo" parameterClass="rms.take.batchReg.domain.RecordBatchReg" resultClass="string">
			SELECT A.FOLDER_CLSS_NO
			  FROM TB_TKRECORD A
			 WHERE A.record_center_id = #recordCenterId:VARCHAR#
			   AND A.creat_sys_cd     = #creatSysCd:VARCHAR#
			   AND A.org_cd           = #orgCd:VARCHAR#
			   AND A.creat_yyyy       = #creatYyyy:VARCHAR#
			   AND A.creat_reg_no     = #creatRegNo:VARCHAR#
			   AND A.dtch_reg_no      = #dtchRegNo:VARCHAR#
	</select>
	
	<!-- 세부유형체크 -->
	<select id="checkRecordClssCd" parameterClass="rms.take.batchReg.domain.RecordBatchReg" resultClass="long">
		SELECT count(*) 
		  FROM TB_ZZCOMCD
		 WHERE com_type_cd = (SELECT sub_com_type_cd FROM TB_ZZCOMCD 
							   WHERE com_type_cd = 'RD02' AND com_cd = #recordRegDivCd:VARCHAR# ) 
		   AND com_cd = #recordClssCd:VARCHAR# 
	</select>

	<select id="findTakeStateDivCd" parameterClass="rms.take.batchReg.domain.BatchRegFile" resultClass="string">
		select take_state_div_cd
		from tb_tkorgtakeplan 
		where creat_sys_cd = '05' 
		and record_center_id = #recordCenterId:VARCHAR# 
		and reg_dtime = #regDtime:VARCHAR#
	</select>
	
</sqlMap>