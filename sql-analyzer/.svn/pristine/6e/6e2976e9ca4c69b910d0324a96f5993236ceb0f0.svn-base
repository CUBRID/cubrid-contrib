<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="transf.rcTakovr">

	<!-- 기관간인계 기록물인계 전자파일삭제 대상 생산부서 목록을 조회한다. -->
	<resultMap id="findRcTakovrEfileDeletePagedList-result" class="rms.transf.rcTakovr.domain.RcTakovrEfileDelete">
		<result property="recordCenterId" 		column="record_center_id"/>
		<result property="orgCd" 				column="org_cd"/>
		<result property="orgNm" 				column="org_nm"/>
		<result property="orgAbbrNm" 			column="org_abbr_nm"/>
		<result property="folderCnt" 			column="folder_cnt"/>
		<result property="recordCnt" 			column="record_cnt"/>
		<result property="efileDeleteFolderCnt" column="efile_delete_folder_cnt"/>
		<result property="efileDeleteRecordCnt" column="efile_delete_record_cnt"/>
	</resultMap>
	<!-- 
		SELECT - 기관간인계 기록물인계 전자파일삭제 대상 생산부서 목록을 조회한다.
	 -->
	<select id="findRcTakovrEfileDeletePagedList" parameterClass="rms.transf.rcTakovr.domain.RcTakovrEfileDelete" resultMap="findRcTakovrEfileDeletePagedList-result">
	 	SELECT C.record_center_id
		     , C.org_cd
		     , (SELECT Z.org_nm FROM tb_storg Z WHERE Z.record_center_id = C.record_center_id AND Z.org_cd = C.org_cd) org_nm
		     , (SELECT Z.org_abbr_nm FROM tb_storg Z WHERE Z.record_center_id = C.record_center_id AND Z.org_cd = C.org_cd) org_abbr_nm
		     , C.folder_cnt
		     , C.record_cnt
		     , (SELECT COUNT(1) FROM TB_DFTAKOVRFOLDERLIST X, TB_NKFOLDER Y 
		        WHERE X.record_center_id = Y.record_center_id 
		        AND X.folder_id = Y.folder_id 
		        <dynamic> 
		            <isNotEmpty prepend="AND" property="orgCd">
		                Y.org_cd = #orgCd:VARCHAR#
		            </isNotEmpty>
		            <isNotEmpty prepend="AND" property="clssId">
		                <isEqual property="clssDivCd" compareValue="1">
		                    (Y.clss_id = #clssId:VARCHAR# OR Y.new_clss_id = #clssId:VARCHAR#)
		                </isEqual>
		                <isEqual property="clssDivCd" compareValue="2">
		                    Y.clss_id = #clssId:VARCHAR#
		                </isEqual>
		            </isNotEmpty>    
		        </dynamic>
		        AND X.takovr_rep_cd = #takovrRepCd:VARCHAR# 
		        AND X.takovr_yyyy = #takovrYyyy:VARCHAR# 
		        AND X.takovr_sno = #takovrSno:NUMBER#
		        AND Y.folder_keep_state_cd = '05'
		        AND Y.org_cd = C.org_cd 
		        AND NVL(Y.efile_del_cd, '0') = '03') efile_delete_folder_cnt
		     , (SELECT NVL(SUM(Y.record_reg_cnt), 0) FROM TB_DFTAKOVRFOLDERLIST X, TB_NKFOLDER Y 
		        WHERE X.record_center_id = Y.record_center_id 
		        AND X.folder_id = Y.folder_id 
		        <dynamic> 
		            <isNotEmpty prepend="AND" property="orgCd">
		                Y.org_cd = #orgCd:VARCHAR#
		            </isNotEmpty>
		            <isNotEmpty prepend="AND" property="clssId">
		                <isEqual property="clssDivCd" compareValue="1">
		                    (Y.clss_id = #clssId:VARCHAR# OR Y.new_clss_id = #clssId:VARCHAR#)
		                </isEqual>
		                <isEqual property="clssDivCd" compareValue="2">
		                    Y.clss_id = #clssId:VARCHAR#
		                </isEqual>
		            </isNotEmpty>    
		        </dynamic>
		        AND X.takovr_rep_cd = #takovrRepCd:VARCHAR#
		        AND X.takovr_yyyy = #takovrYyyy:VARCHAR#
		        AND X.takovr_sno = #takovrSno:NUMBER#
		        AND Y.folder_keep_state_cd = '05'
		        AND Y.org_cd = C.org_cd 
		        AND NVL(Y.efile_del_cd, '0') = '03') efile_delete_record_cnt
		FROM (
	    	SELECT ROWNUM AS rnum
		        , B.*
		    FROM (
		    	SELECT U.record_center_id
			         , U.org_cd
			         , U.folder_cnt
			         , U.record_cnt
				FROM ((SELECT A.record_center_id
				         , A.org_cd
				         , COUNT(1) folder_cnt
				         , SUM(A.record_reg_cnt) record_cnt
				    FROM  TB_RDFOLDER A
				    WHERE A.record_center_id = #recordCenterId:VARCHAR#
				    <dynamic> 
				        <isNotEmpty prepend="AND" property="orgCd">
				            A.org_cd = #orgCd:VARCHAR#
				        </isNotEmpty>
				        <isNotEmpty prepend="AND" property="clssId">
				            <isEqual property="clssDivCd" compareValue="1">
				                (A.clss_id = #clssId:VARCHAR# OR A.new_clss_id = #clssId:VARCHAR#)
				            </isEqual>
				            <isEqual property="clssDivCd" compareValue="2">
				                A.clss_id = #clssId:VARCHAR#
				            </isEqual>
				        </isNotEmpty>    
				    </dynamic>
				    AND   A.folder_keep_state_cd IN ('05')
				    AND   EXISTS (SELECT Z.folder_id
				                  FROM  TB_DFTAKOVRFOLDERLIST Z
				                  WHERE Z.record_center_id = A.record_center_id
				                  AND   Z.folder_id        = A.folder_id
				                  AND   Z.takovr_rep_cd    = #takovrRepCd:VARCHAR# 
				                  AND   Z.takovr_yyyy      = #takovrYyyy:VARCHAR# 
				                  AND   Z.takovr_sno       = #takovrSno:NUMBER#
				    )
				    GROUP BY A.record_center_id, A.org_cd) UNION ALL (
				    SELECT A.record_center_id
				         , A.org_cd
				         , COUNT(1) folder_cnt
				         , SUM(A.record_reg_cnt) record_cnt
				    FROM  TB_NKFOLDER A
				    WHERE A.record_center_id = #recordCenterId:VARCHAR#
				    <dynamic> 
				        <isNotEmpty prepend="AND" property="orgCd">
				            A.org_cd = #orgCd:VARCHAR#
				        </isNotEmpty>
				        <isNotEmpty prepend="AND" property="clssId">
				            <isEqual property="clssDivCd" compareValue="1">
				                (A.clss_id = #clssId:VARCHAR# OR A.new_clss_id = #clssId:VARCHAR#)
				            </isEqual>
				            <isEqual property="clssDivCd" compareValue="2">
				                A.clss_id = #clssId:VARCHAR#
				            </isEqual>
				        </isNotEmpty>    
				    </dynamic>
				    AND   A.folder_keep_state_cd IN ('05')
				    AND   EXISTS (SELECT Z.folder_id
				                  FROM  TB_DFTAKOVRFOLDERLIST Z
				                  WHERE Z.record_center_id = A.record_center_id
				                  AND   Z.folder_id        = A.folder_id
				                  AND   Z.takovr_rep_cd    = #takovrRepCd:VARCHAR# 
				                  AND   Z.takovr_yyyy      = #takovrYyyy:VARCHAR# 
				                  AND   Z.takovr_sno       = #takovrSno:NUMBER#
				    )
				    GROUP BY A.record_center_id, A.org_cd)
			    ) U
			    ORDER BY U.record_center_id, U.org_cd
		    ) B
			WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
		) C
		WHERE C.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
		ORDER BY C.rnum
	</select>
	<!-- 
		COUNT - 기관간인계 기록물인계 전자파일삭제 대상 생산부서 목록을 조회한다.
	 -->
	<select id="countRcTakovrEfileDeletePagedList" parameterClass="rms.transf.rcTakovr.domain.RcTakovrEfileDelete" resultClass="java.lang.Long">
		SELECT COUNT(1)
		FROM (
		    (SELECT A.record_center_id
		         , A.org_cd
		    FROM  TB_RDFOLDER A
		    WHERE A.record_center_id = #recordCenterId:VARCHAR#
		    <dynamic> 
		        <isNotEmpty prepend="AND" property="orgCd">
		            A.org_cd = #orgCd:VARCHAR#
		        </isNotEmpty>
		        <isNotEmpty prepend="AND" property="clssId">
		            <isEqual property="clssDivCd" compareValue="1">
		                (A.clss_id = #clssId:VARCHAR# OR A.new_clss_id = #clssId:VARCHAR#)
		            </isEqual>
		            <isEqual property="clssDivCd" compareValue="2">
		                A.clss_id = #clssId:VARCHAR#
		            </isEqual>
		        </isNotEmpty>    
		    </dynamic>
		    AND   A.folder_keep_state_cd IN ('05')
		    AND   EXISTS (SELECT Z.folder_id
		                  FROM  TB_DFTAKOVRFOLDERLIST Z
		                  WHERE Z.record_center_id = A.record_center_id
		                  AND   Z.folder_id        = A.folder_id
		                  AND   Z.takovr_rep_cd    = #takovrRepCd:VARCHAR# 
		                  AND   Z.takovr_yyyy      = #takovrYyyy:VARCHAR# 
		                  AND   Z.takovr_sno       = #takovrSno:NUMBER#
		    )
		    GROUP BY A.record_center_id, A.org_cd) UNION ALL (
		    SELECT A.record_center_id
		         , A.org_cd
		    FROM  TB_NKFOLDER A
		    WHERE A.record_center_id = #recordCenterId:VARCHAR#
		    <dynamic> 
		        <isNotEmpty prepend="AND" property="orgCd">
		            A.org_cd = #orgCd:VARCHAR#
		        </isNotEmpty>
		        <isNotEmpty prepend="AND" property="clssId">
		            <isEqual property="clssDivCd" compareValue="1">
		                (A.clss_id = #clssId:VARCHAR# OR A.new_clss_id = #clssId:VARCHAR#)
		            </isEqual>
		            <isEqual property="clssDivCd" compareValue="2">
		                A.clss_id = #clssId:VARCHAR#
		            </isEqual>
		        </isNotEmpty>    
		    </dynamic>
		    AND   A.folder_keep_state_cd IN ('05')
		    AND   EXISTS (SELECT Z.folder_id
		                  FROM  TB_DFTAKOVRFOLDERLIST Z
		                  WHERE Z.record_center_id = A.record_center_id
		                  AND   Z.folder_id        = A.folder_id
		                  AND   Z.takovr_rep_cd    = #takovrRepCd:VARCHAR# 
		                  AND   Z.takovr_yyyy      = #takovrYyyy:VARCHAR# 
		                  AND   Z.takovr_sno       = #takovrSno:NUMBER#
		    )
		    GROUP BY A.record_center_id, A.org_cd)
		) B
	</select>
	
	
	<!-- 
		기록물인계_전자파일삭제
		: 삭제대상 철 수량 조회
	 -->
	<select id="countRcTakovrEfileDeleteTrgtFolder" parameterClass="rms.transf.rcTakovr.domain.RcTakovrEfileDelete" resultClass="java.lang.Integer">
 		SELECT  COUNT(1)
		FROM   TB_RDFOLDER B
		WHERE  B.record_center_id = #recordCenterId:VARCHAR#
		<dynamic> 
		    <isNotEmpty prepend="AND" property="orgCd">
		        B.org_cd         = #orgCd:VARCHAR#
		    </isNotEmpty>
		    <isNotEmpty prepend="AND" property="clssId">
		        <isEqual property="clssDivCd" compareValue="1">
		            (B.clss_id = #clssId:VARCHAR# OR B.new_clss_id = #clssId:VARCHAR#)
		        </isEqual>
		        <isEqual property="clssDivCd" compareValue="2">
		            B.clss_id = #clssId:VARCHAR#
		        </isEqual>
		    </isNotEmpty>    
		</dynamic>
		AND    B.folder_keep_state_cd IN ('05')
		AND	   NVL(B.efile_del_cd, '0') NOT IN ('01','02','03')
		AND EXISTS (SELECT Z.folder_id
		            FROM   TB_DFTAKOVRFOLDERLIST Z
		            WHERE  Z.record_center_id   = B.record_center_id
		            AND    Z.folder_id          = B.folder_id
		            AND    Z.takovr_rep_cd      = #takovrRepCd:VARCHAR# 
		            AND    Z.takovr_yyyy        = #takovrYyyy:VARCHAR# 
		            AND    Z.takovr_sno         = #takovrSno:NUMBER#
		)
	</select>
	
	<!-- 
		기록물인계_전자파일삭제
		: 삭제 마지막작업순번조회	
	 -->
	<resultMap id="efileListWorkSno-result" class="rms.transf.rcTakovr.domain.RcTakovrEfileDelete">
		<result property="workSno" column="work_sno"/>
	</resultMap>
	<select id="findEfileListWorkSno" parameterClass="rms.transf.rcTakovr.domain.RcTakovrEfileDelete" resultMap="efileListWorkSno-result">
		SELECT MAX(work_sno) work_sno FROM TB_NKEFILELIST
	</select>
	
	<!-- 
		기록물인계_전자파일삭제
		: 삭제대상 인계계획의 기록관ID를 조회한다.
	 -->
	<select id="findRcTakovrEfileDeleteTrgtRecordCenterId" parameterClass="rms.transf.rcTakovr.domain.RcTakovrEfileDelete" resultClass="string">
	 	SELECT record_center_id FROM TB_DFTAKOVRPLAN WHERE takovr_rep_cd = #takovrRepCd:VARCHAR# AND takovr_yyyy = #takovrYyyy:VARCHAR# AND takovr_sno = #takovrSno:NUMBER#
	</select>

	<!-- 
		기록물인계_전자파일삭제
		: 삭제대상 기록물철 ID 목록을 조회한다.
	 -->	
	<resultMap id="findRcTakovrEfileDeleteTrgtFolder-result" class="rms.transf.rcTakovr.domain.RcTakovrEfileDelete">
	 	<result property="folderId"				column="FOLDER_ID"/>
	</resultMap>
	<select id="findRcTakovrEfileDeleteTrgtFolder" parameterClass="rms.transf.rcTakovr.domain.RcTakovrEfileDelete" resultMap="findRcTakovrEfileDeleteTrgtFolder-result">
	 	SELECT  B.folder_id
		FROM   TB_RDFOLDER B
		WHERE  B.record_center_id = #recordCenterId:VARCHAR#
		<dynamic> 
		    <isNotEmpty prepend="AND" property="orgCd">
		        B.org_cd         = #orgCd:VARCHAR#
		    </isNotEmpty>
		    <isNotEmpty prepend="AND" property="clssId">
		        <isEqual property="clssDivCd" compareValue="1">
		            (B.clss_id = #clssId:VARCHAR# OR B.new_clss_id = #clssId:VARCHAR#)
		        </isEqual>
		        <isEqual property="clssDivCd" compareValue="2">
		            B.clss_id = #clssId:VARCHAR#
		        </isEqual>
		    </isNotEmpty>    
		</dynamic>
		AND    B.folder_keep_state_cd IN ('05')
		AND	   NVL(B.efile_del_cd, '0') NOT IN ('01','02','03')	<!-- 삭제된 폴더는 검색되지 않게 조건을 넣어줌 2013.12.05 윤광진 -->
		AND EXISTS (SELECT Z.folder_id
		            FROM   TB_DFTAKOVRFOLDERLIST Z
		            WHERE  Z.record_center_id   = B.record_center_id
		            AND    Z.folder_id          = B.folder_id
		            AND    Z.takovr_rep_cd      = #takovrRepCd:VARCHAR# 
		            AND    Z.takovr_yyyy        = #takovrYyyy:VARCHAR# 
		            AND    Z.takovr_sno         = #takovrSno:NUMBER#
		)
	</select>
	
	<!-- 
		기록물인계_전자파일삭제
		: 이관폐기 전자파일리스트 테이블에 정보 넣기
	 -->
	<insert id="createWork" parameterClass="rms.transf.rcTakovr.domain.RcTakovrEfileDelete">
		INSERT INTO TB_NKEFILELIST 
		VALUES (
			#recordCenterId:VARCHAR#,
			#folderId:VARCHAR#,
			#reqDivCd:VARCHAR#,
			#workSno:VARCHAR#,
			#workStateCd:VARCHAR#,
			<!--cubrid TO_CHAR(SYSDATE, 'yyyymmddhhmiss')-->
			TO_CHAR(sys_datetime, 'yyyymmddhhmiss')
		)
	</insert>
	
	<!-- 
		기록물인계_전자파일삭제
		: 철테이블에 전자파일삭제 코드 갱신 (삭제대기)
	 -->
	<update id="updateEfileDelFolder" parameterClass="rms.transf.rcTakovr.domain.RcTakovrEfileDelete">
		UPDATE TB_RDFOLDER
		SET    efile_del_cd = '02'
		WHERE record_center_id = #recordCenterId:VARCHAR#
		AND   folder_id = #folderId:VARCHAR#
	</update>
	
	<!-- 기관간인계 기록물인계 전자파일삭제 대상 기록물철 목록을 조회한다. -->
	 <resultMap id="findRcTakovrEfileDeleteFolderPagedList-result" class="rms.transf.rcTakovr.domain.RcTakovrEfileDelete">
	 	<result property="recordCenterId" 		column="RECORD_CENTER_ID"/>
	 	<result property="folderId"				column="FOLDER_ID"/>
	 	<result property="creatYyyy"			column="CREAT_YYYY"/>
	 	<result property="orgCd" 				column="ORG_CD"/>
	 	<result property="orgNm"		 		column="ORG_NM"/>
	 	<result property="orgAbbrNm" 			column="ORG_ABBR_NM"/>
	 	<result property="title"		 		column="TITLE"/>
	 	<result property="efileDelFlag" 		column="EFILE_DEL_FLAG"/>
	 	<result property="efileDelFlagNm" 		column="EFILE_DEL_FLAG_NM"/>
	 	<result property="efileDelCd"	 		column="EFILE_DEL_CD"/>
	 	<result property="efileDelNm" 			column="EFILE_DEL_NM"/>
	 	<result property="folderKeepStateCd"	column="FOLDER_KEEP_STATE_CD"/>
	 </resultMap>
	 <!-- 
	 	SELECT - 기관간인계 기록물인계 전자파일삭제 대상 기록물철 목록을 조회한다.
	  -->
	 <select id="findRcTakovrEfileDeleteFolderPagedList" parameterClass="rms.transf.rcTakovr.domain.RcTakovrEfileDelete" resultMap="findRcTakovrEfileDeleteFolderPagedList-result">
	 	SELECT C.record_center_id
	 		 , C.folder_id
	 		 , C.creat_yyyy
		     , C.org_cd
		     , (SELECT Z.org_nm FROM TB_STORG Z WHERE Z.record_center_id = C.record_center_id AND Z.org_cd = C.org_cd) org_nm
		     , (SELECT Z.org_abbr_nm FROM TB_STORG Z WHERE Z.record_center_id = C.record_center_id AND Z.org_cd = C.org_cd) org_abbr_nm
		     , C.title
		     , C.efile_del_flag
		     , (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE com_type_cd = 'ZZ08' AND Z.com_cd = C.efile_del_flag) efile_del_flag_nm
		     , C.efile_del_cd
			 , (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd = 'RD90' AND Z.com_cd=C.efile_del_cd ) efile_del_nm
			 , C.folder_keep_state_cd
		FROM (
	    	SELECT ROWNUM AS rnum
		        , B.*
		    FROM (
		    
			    SELECT U.record_center_id, U.folder_id, U.creat_yyyy, U.org_cd, U.title,U.efile_del_flag, U.efile_del_cd, U.folder_keep_state_cd
			    FROM (
			    	(SELECT A.record_center_id, A.folder_id, A.creat_yyyy, A.org_cd, A.title, A.efile_del_flag, A.efile_del_cd, A.folder_keep_state_cd
					FROM  TB_RDFOLDER A
					WHERE A.record_center_id = #recordCenterId:VARCHAR#
					<dynamic>
					    <isNotEmpty prepend="AND" property="orgCd">
					        A.org_cd = #orgCd:VARCHAR#
					    </isNotEmpty>
					    <isNotEmpty prepend="AND" property="clssId">
					        <isEqual property="clssDivCd" compareValue="1">
					            (A.clss_id = #clssId:VARCHAR# OR A.new_clss_id = #clssId:VARCHAR#)
					        </isEqual>
					        <isEqual property="clssDivCd" compareValue="2">
					            A.clss_id = #clssId:VARCHAR#
					        </isEqual>
					    </isNotEmpty>
					    <isNotEmpty prepend="AND" property="title">
					        A.title LIKE #title:VARCHAR#
					    </isNotEmpty>
					    <isNotEmpty prepend="AND" property="efileDelCd">
					        <isEqual property="efileDelCd" compareValue="01">
					        	NVL(efile_del_cd, '0') NOT IN ('01','02','03','04') 
					        </isEqual>
					        <isNotEqual property="efileDelCd" compareValue="01">
					        	NVL(efile_del_cd, '0') = #efileDelCd:VARCHAR#
					        </isNotEqual>
					    </isNotEmpty>
					</dynamic>
					AND   A.folder_keep_state_cd IN ('05')
					AND EXISTS (SELECT Z.folder_id
					            FROM  TB_DFTAKOVRFOLDERLIST Z
					            WHERE Z.record_center_id = A.record_center_id
					            AND   Z.folder_id        = A.folder_id
					            AND   Z.takovr_rep_cd    = #takovrRepCd:VARCHAR#
					            AND   Z.takovr_yyyy      = #takovrYyyy:VARCHAR#
					            AND   Z.takovr_sno       = #takovrSno:NUMBER#)) 
		            UNION ALL 
		            (SELECT A.record_center_id, A.folder_id, A.creat_yyyy, A.org_cd, A.title, '' AS efile_del_flag, A.efile_del_cd, A.folder_keep_state_cd
					FROM  TB_NKFOLDER A
					WHERE A.record_center_id = #recordCenterId:VARCHAR#
					<dynamic>
					    <isNotEmpty prepend="AND" property="orgCd">
					        A.org_cd = #orgCd:VARCHAR#
					    </isNotEmpty>
					    <isNotEmpty prepend="AND" property="clssId">
					        <isEqual property="clssDivCd" compareValue="1">
					            (A.clss_id = #clssId:VARCHAR# OR A.new_clss_id = #clssId:VARCHAR#)
					        </isEqual>
					        <isEqual property="clssDivCd" compareValue="2">
					            A.clss_id = #clssId:VARCHAR#
					        </isEqual>
					    </isNotEmpty>
					    <isNotEmpty prepend="AND" property="title">
					        A.title LIKE #title:VARCHAR#
					    </isNotEmpty>
					    <isNotEmpty prepend="AND" property="efileDelCd">
					        <isEqual property="efileDelCd" compareValue="01">
					        	NVL(efile_del_cd, '0') NOT IN ('01','02','03','04') 
					        </isEqual>
					        <isNotEqual property="efileDelCd" compareValue="01">
					        	NVL(efile_del_cd, '0') = #efileDelCd:VARCHAR#
					        </isNotEqual>
					    </isNotEmpty>
					</dynamic>
					AND   A.folder_keep_state_cd IN ('05')
					AND EXISTS (SELECT Z.folder_id
					            FROM  TB_DFTAKOVRFOLDERLIST Z
					            WHERE Z.record_center_id = A.record_center_id
					            AND   Z.folder_id        = A.folder_id
					            AND   Z.takovr_rep_cd    = #takovrRepCd:VARCHAR#
					            AND   Z.takovr_yyyy      = #takovrYyyy:VARCHAR#
					            AND   Z.takovr_sno       = #takovrSno:NUMBER#)            
					)
				) U
				ORDER BY U.record_center_id, U.title
		    ) B
			WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
		) C
		WHERE C.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
		ORDER BY C.rnum
	 </select>
	 <!-- 
	 	COUNT - 기관간인계 기록물인계 전자파일삭제 대상 기록물철 목록을 조회한다.
	  -->
	 <select id="countRcTakovrEfileDeleteFolderPagedList" parameterClass="rms.transf.rcTakovr.domain.RcTakovrEfileDelete" resultClass="java.lang.Long">
	 	SELECT COUNT(1)
		FROM  
			(SELECT folder_id 
			FROM (
				(SELECT folder_id FROM TB_RDFOLDER A
				WHERE A.record_center_id = #recordCenterId:VARCHAR#
				<dynamic>
				    <isNotEmpty prepend="AND" property="orgCd">
				        A.org_cd = #orgCd:VARCHAR#
				    </isNotEmpty>
				    <isNotEmpty prepend="AND" property="clssId">
				        <isEqual property="clssDivCd" compareValue="1">
				            (A.clss_id = #clssId:VARCHAR# OR A.new_clss_id = #clssId:VARCHAR#)
				        </isEqual>
				        <isEqual property="clssDivCd" compareValue="2">
				            A.clss_id = #clssId:VARCHAR#
				        </isEqual>
				    </isNotEmpty>
				    <isNotEmpty prepend="AND" property="title">
				        A.title LIKE #title:VARCHAR#
				    </isNotEmpty>
				    <isNotEmpty prepend="AND" property="efileDelCd">
				        <isEqual property="efileDelCd" compareValue="01">
				        	NVL(efile_del_cd, '0') NOT IN ('01','02','03','04') 
				        </isEqual>
				        <isNotEqual property="efileDelCd" compareValue="01">
				        	NVL(efile_del_cd, '0') = #efileDelCd:VARCHAR#
				        </isNotEqual>
				    </isNotEmpty>
				</dynamic>
				AND   A.folder_keep_state_cd IN ('05')
				AND   EXISTS (SELECT Z.folder_id
				              FROM  TB_DFTAKOVRFOLDERLIST Z
				              WHERE Z.record_center_id = A.record_center_id
				              AND   Z.folder_id        = A.folder_id
				              AND   Z.takovr_rep_cd    = #takovrRepCd:VARCHAR#
				              AND   Z.takovr_yyyy      = #takovrYyyy:VARCHAR#
				              AND   Z.takovr_sno       = #takovrSno:NUMBER#)
				) UNION ALL (
				SELECT folder_id FROM TB_NKFOLDER A
				WHERE A.record_center_id = #recordCenterId:VARCHAR#
				<dynamic>
				    <isNotEmpty prepend="AND" property="orgCd">
				        A.org_cd = #orgCd:VARCHAR#
				    </isNotEmpty>
				    <isNotEmpty prepend="AND" property="clssId">
				        <isEqual property="clssDivCd" compareValue="1">
				            (A.clss_id = #clssId:VARCHAR# OR A.new_clss_id = #clssId:VARCHAR#)
				        </isEqual>
				        <isEqual property="clssDivCd" compareValue="2">
				            A.clss_id = #clssId:VARCHAR#
				        </isEqual>
				    </isNotEmpty>
				    <isNotEmpty prepend="AND" property="title">
				        A.title LIKE #title:VARCHAR#
				    </isNotEmpty>
				    <isNotEmpty prepend="AND" property="efileDelCd">
				        <isEqual property="efileDelCd" compareValue="01">
				        	NVL(efile_del_cd, '0') NOT IN ('01','02','03','04') 
				        </isEqual>
				        <isNotEqual property="efileDelCd" compareValue="01">
				        	NVL(efile_del_cd, '0') = #efileDelCd:VARCHAR#
				        </isNotEqual>
				    </isNotEmpty>
				</dynamic>
				AND   A.folder_keep_state_cd IN ('05')
				AND   EXISTS (SELECT Z.folder_id
				              FROM  TB_DFTAKOVRFOLDERLIST Z
				              WHERE Z.record_center_id = A.record_center_id
				              AND   Z.folder_id        = A.folder_id
				              AND   Z.takovr_rep_cd    = #takovrRepCd:VARCHAR#
				              AND   Z.takovr_yyyy      = #takovrYyyy:VARCHAR#
				              AND   Z.takovr_sno       = #takovrSno:NUMBER#)
				)
			) U
		)
	 </select>
</sqlMap>
