<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="open.open.confirm">

	<!--
		정보공개대상확정
		: 통계 조회 (미확정 수량)
	-->
	<select id="countDiosConfirmTrgt" parameterClass="rms.open.open.domain.FindOpen" resultClass="java.lang.Long">
        SELECT (CASE WHEN EXISTS (SELECT 1 FROM TB_OPOPENLIST WHERE record_center_id = #recordCenterId:VARCHAR# AND open_sys_cd = '01' AND open_state IN ('1','2','3')) THEN 1 ELSE 0 END) AS EXISTS_FLAG FROM DUAL
	</select>

	<!--
		정보공개대상확정
		: 통계 조회
	-->
	<resultMap id="findDiosConfirmCurStatPagedList-result" class="rms.open.open.domain.ResultOpen">
		<result property="openDtime" 			column="open_dtime"				/>
		<result property="totCnt" 				column="tot_cnt"				/>
		<result property="choCnt" 				column="cho_cnt"				/>
		<result property="excCnt" 				column="exc_cnt"				/>
		<result property="appCnt" 				column="app_cnt"				/>
		<result property="confirmFlag" 			column="confirm_flag"			/>
	</resultMap>
	<select id="countDiosConfirmCurStatPagedList" parameterClass="rms.open.open.domain.FindOpen" resultClass="java.lang.Long">
		SELECT COUNT(1)
		FROM (
			(
		        <isEqual property="confirmFlag" compareValue="0">
		        	SELECT 1 FROM DUAL WHERE 0 = 1
		        </isEqual>
		        <isNotEqual property="confirmFlag" compareValue="0">
			        SELECT 1
			        FROM  TB_OPOPENLIST A
					WHERE A.record_center_id = #recordCenterId:VARCHAR#
					AND   A.open_sys_cd = '01'
					AND   A.open_state IN ('1','2','3')
			    </isNotEqual>
			)
			UNION ALL
			(
				SELECT 1
				FROM  TB_OPOPENGROUP A
		        WHERE A.record_center_id = #recordCenterId:VARCHAR#
		        AND   A.open_sys_cd = '01'
		        AND   A.open_dtime LIKE #openYyyy:VARCHAR#
				AND   A.list_type_cd = '01'
			)
		)
	</select>
	<select id="findDiosConfirmCurStatPagedList" parameterClass="rms.open.open.domain.FindOpen" resultMap="findDiosConfirmCurStatPagedList-result">
		SELECT E.confirm_flag
			, E.open_dtime
			, NVL(E.cho_cnt,0)+NVL(E.exc_cnt,0)+NVL(E.app_cnt,0) AS tot_cnt
			, NVL(E.cho_cnt,0) AS cho_cnt
			, NVL(E.exc_cnt,0) AS exc_cnt
			, NVL(E.app_cnt,0) AS app_cnt
		FROM (
			SELECT ROWNUM AS rnum
				, D.*
			FROM (
				SELECT C.confirm_flag, C.open_dtime, C.cho_cnt, C.exc_cnt, C.app_cnt
				FROM (
			        (
				        <isEqual property="confirmFlag" compareValue="0">
				        	SELECT '' confirm_flag, '' open_dtime, 0 cho_cnt, 0 exc_cnt, 0 app_cnt
				        	FROM DUAL WHERE 0 = 1
				        </isEqual>
				        <isNotEqual property="confirmFlag" compareValue="0">
					        SELECT '0' AS confirm_flag
					        	, '' AS open_dtime
					        	, (SELECT COUNT(1) FROM TB_OPOPENLIST WHERE record_center_id = #recordCenterId:VARCHAR# AND open_sys_cd = '01' AND open_state = '1') AS cho_cnt
					        	, (SELECT COUNT(1) FROM TB_OPOPENLIST WHERE record_center_id = #recordCenterId:VARCHAR# AND open_sys_cd = '01' AND open_state = '2') AS exc_cnt
					        	, (SELECT COUNT(1) FROM TB_OPOPENLIST WHERE record_center_id = #recordCenterId:VARCHAR# AND open_sys_cd = '01' AND open_state = '3') AS app_cnt
							FROM DUAL
			    		</isNotEqual>
				    )
				    UNION ALL
				    (
						SELECT B.confirm_flag, B.open_dtime, B.cho_cnt, B.exc_cnt, B.app_cnt
						FROM (
					        SELECT '1' AS confirm_flag
					        	, A.open_dtime
					            , A.choice_cnt AS cho_cnt
					            , A.except_cnt AS exc_cnt
					            , A.append_cnt AS app_cnt
					        FROM  TB_OPOPENGROUP A
					        WHERE A.record_center_id = #recordCenterId:VARCHAR#
					        AND   A.open_sys_cd = '01'
					        AND   A.open_dtime LIKE #openYyyy:VARCHAR#
							AND   A.list_type_cd = '01'
					        ORDER BY A.record_center_id, A.open_sys_cd, A.open_dtime DESC
						) B
				    )
				) C
			) D
			WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
		) E
		WHERE E.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
		ORDER BY E.rnum
	</select>
	
	<!--
		정보공개대상확정
		: 생산부서 목록 조회
	-->
	<resultMap id="findDiosConfirmOrgPagedList-result" class="rms.open.open.domain.ResultOpen">
		<result property="recordCenterId" 		column="record_center_id"		/>
		<result property="orgCd" 				column="org_cd"					/>
		<result property="orgNm" 				column="org_nm"					/>
		<result property="orgAbbrNm" 			column="org_abbr_nm"			/>
		<result property="totCnt" 				column="tot_cnt"				/>
		<result property="choCnt" 				column="cho_cnt"				/>
		<result property="excCnt" 				column="exc_cnt"				/>
		<result property="appCnt" 				column="app_cnt"				/>
	</resultMap>
	<select id="countDiosConfirmOrgPagedList" parameterClass="rms.open.open.domain.FindOpen" resultClass="java.lang.Long">
		SELECT COUNT(1)
		FROM (
			SELECT DISTINCT A.record_center_id, A.open_sys_cd, A.org_cd
			FROM  TB_OPOPENLIST A
			WHERE A.record_center_id = #recordCenterId:VARCHAR#
			AND   A.open_sys_cd = '01'
			AND   A.open_state IN ('1','2','3')
			<isNotEmpty prepend="AND" property="orgCd">
				A.org_cd = #orgCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="creatSysCd">
				A.creat_sys_cd = #creatSysCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="creatYyyy">
				A.creat_yyyy = #creatYyyy:VARCHAR#
			</isNotEmpty>
		)
	</select>
	<select id="findDiosConfirmOrgPagedList" parameterClass="rms.open.open.domain.FindOpen" resultMap="findDiosConfirmOrgPagedList-result">
		SELECT F.record_center_id
			, F.org_cd
			, (SELECT Z.org_nm FROM TB_STORG Z WHERE Z.record_center_id=F.record_center_id AND Z.org_cd=F.org_cd) AS org_nm
			, (SELECT Z.org_abbr_nm FROM TB_STORG Z WHERE Z.record_center_id=F.record_center_id AND Z.org_cd=F.org_cd) AS org_abbr_nm
			, NVL(SUM(F.cho_cnt),0)+NVL(SUM(F.exc_cnt),0)+NVL(SUM(F.app_cnt),0) AS tot_cnt
			, NVL(SUM(F.cho_cnt),0) AS cho_cnt
			, NVL(SUM(F.exc_cnt),0) AS exc_cnt
			, NVL(SUM(F.app_cnt),0) AS app_cnt
		FROM (
			SELECT E.record_center_id
				, E.org_cd
                , (CASE WHEN E.open_state='1' THEN 1 ELSE 0 END) AS cho_cnt
                , (CASE WHEN E.open_state='2' THEN 1 ELSE 0 END) AS exc_cnt
                , (CASE WHEN E.open_state='3' THEN 1 ELSE 0 END) AS app_cnt
			FROM  TB_OPOPENLIST E
			<!--cubrid WHERE (E.record_center_id, E.open_sys_cd, E.org_cd)
			IN (
				SELECT D.record_center_id, D.open_sys_cd, D.org_cd-->
			WHERE 
			EXISTS (
				SELECT 1
				FROM (
					SELECT ROWNUM AS rnum
						, C.*
					FROM (
						SELECT DISTINCT A.record_center_id, A.open_sys_cd, A.org_cd
						FROM  TB_OPOPENLIST A
						WHERE A.record_center_id = #recordCenterId:VARCHAR#
						AND   A.open_sys_cd = '01'
						AND   A.open_state IN ('1','2','3')
						<isNotEmpty prepend="AND" property="orgCd">
							A.org_cd = #orgCd:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="creatSysCd">
							A.creat_sys_cd = #creatSysCd:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="creatYyyy">
							A.creat_yyyy = #creatYyyy:VARCHAR#
						</isNotEmpty>
						ORDER BY A.record_center_id, A.open_sys_cd, A.org_cd
					) C
					WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
				) D
				WHERE D.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
				<!--cubrid-->
				AND   D.record_center_id = E.record_center_id
				AND   D.open_sys_cd = E.open_sys_cd
			 	AND   D.org_cd = E.org_cd
			)
			AND   E.open_state IN ('1','2','3')
			<isNotEmpty prepend="AND" property="creatSysCd">
				E.creat_sys_cd = #creatSysCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="creatYyyy">
				E.creat_yyyy = #creatYyyy:VARCHAR#
			</isNotEmpty>
		) F
		GROUP BY F.record_center_id, F.org_cd
		ORDER BY F.record_center_id, F.org_cd
	</select>
	
	<!--
		정보공개대상확정
		: 기록물철 목록 조회
	-->
	<resultMap id="findDiosConfirmFolderPagedList-result" class="rms.open.open.domain.ResultOpen">
		<result property="recordCenterId" 		column="record_center_id"		/>
		<result property="folderId" 			column="folder_id"				/>
		<result property="folderTitle"			column="folder_title"			/>
		<result property="totCnt" 				column="tot_cnt"				/>
		<result property="choCnt" 				column="cho_cnt"				/>
		<result property="excCnt" 				column="exc_cnt"				/>
		<result property="appCnt" 				column="app_cnt"				/>
	</resultMap>
	<select id="countDiosConfirmFolderPagedList" parameterClass="rms.open.open.domain.FindOpen" resultClass="java.lang.Long">
		SELECT COUNT(1)
		FROM (
			SELECT DISTINCT A.record_center_id, A.open_sys_cd, A.folder_id
			FROM  TB_OPOPENLIST A
				, TB_RDFOLDER B
			WHERE A.record_center_id = #recordCenterId:VARCHAR#
			AND   A.open_sys_cd = '01'
			AND   A.open_state IN ('1','2','3')
			AND   A.org_cd = #orgCd:VARCHAR#
			<isNotEmpty prepend="AND" property="creatSysCd">
				A.creat_sys_cd = #creatSysCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="creatYyyy">
				A.creat_yyyy = #creatYyyy:VARCHAR#
			</isNotEmpty>
			AND   B.record_center_id=A.record_center_id
			AND   B.folder_id=A.folder_id
			<isNotEmpty prepend="AND" property="folderTitle">
				B.title LIKE #folderTitle:VARCHAR#
			</isNotEmpty>
		)
	</select>
	<select id="findDiosConfirmFolderPagedList" parameterClass="rms.open.open.domain.FindOpen" resultMap="findDiosConfirmFolderPagedList-result">
		SELECT G.record_center_id
			, G.folder_id
			, G.folder_title
			, NVL(SUM(G.cho_cnt),0)+NVL(SUM(G.exc_cnt),0)+NVL(SUM(G.app_cnt),0) AS tot_cnt
			, NVL(SUM(G.cho_cnt),0) AS cho_cnt
			, NVL(SUM(G.exc_cnt),0) AS exc_cnt
			, NVL(SUM(G.app_cnt),0) AS app_cnt
		FROM (
			SELECT E.record_center_id
				, E.folder_id
				, F.title AS folder_title
                , (CASE WHEN E.open_state='1' THEN 1 ELSE 0 END) AS cho_cnt
                , (CASE WHEN E.open_state='2' THEN 1 ELSE 0 END) AS exc_cnt
                , (CASE WHEN E.open_state='3' THEN 1 ELSE 0 END) AS app_cnt
			FROM  TB_OPOPENLIST E
				, TB_RDFOLDER F
			<!--cubrid WHERE (E.record_center_id, E.open_sys_cd, E.org_cd, E.folder_id)
			IN (
				SELECT D.record_center_id, D.open_sys_cd, D.org_cd, D.folder_id-->
			WHERE 
			EXISTS (
				SELECT 1
				FROM (
					SELECT ROWNUM AS rnum
						, C.*
					FROM (
						SELECT DISTINCT A.record_center_id, A.open_sys_cd, A.org_cd, A.folder_id, B.title
						FROM  TB_OPOPENLIST A
							, TB_RDFOLDER B
						WHERE A.record_center_id = #recordCenterId:VARCHAR#
						AND   A.open_sys_cd = '01'
						AND   A.open_state IN ('1','2','3')
						AND   A.org_cd = #orgCd:VARCHAR#
						<isNotEmpty prepend="AND" property="creatSysCd">
							A.creat_sys_cd = #creatSysCd:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="creatYyyy">
							A.creat_yyyy = #creatYyyy:VARCHAR#
						</isNotEmpty>
						AND   B.record_center_id = A.record_center_id
						AND   B.folder_id = A.folder_id
						<isNotEmpty prepend="AND" property="folderTitle">
							B.title LIKE #folderTitle:VARCHAR#
						</isNotEmpty>
						ORDER BY A.record_center_id, A.open_sys_cd, B.title
					) C
					WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
				) D
				WHERE D.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
				<!--cubrid-->
				AND   D.record_center_id = E.record_center_id
				AND   D.open_sys_cd = E.open_sys_cd
				AND   D.org_cd = E.org_cd
				AND   D.folder_id = E.folder_id
			)
			AND   E.open_state IN ('1','2','3')
			<isNotEmpty prepend="AND" property="creatSysCd">
				E.creat_sys_cd = #creatSysCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="creatYyyy">
				E.creat_yyyy = #creatYyyy:VARCHAR#
			</isNotEmpty>
			AND   F.record_center_id = E.record_center_id
			AND   F.folder_id = E.folder_id
			<isNotEmpty prepend="AND" property="folderTitle">
				F.title LIKE #folderTitle:VARCHAR#
			</isNotEmpty>
		) G
		GROUP BY G.record_center_id, G.folder_id, G.folder_title
		ORDER BY G.record_center_id, G.folder_title
	</select>
	
	<!--
		정보공개대상확정
		: 기록물건 목록 조회
	-->
	<resultMap id="findDiosConfirmRecordPagedList-result" class="rms.open.open.domain.ResultOpen">
		<result property="recordCenterId" 		column="record_center_id"		/>
		<result property="recordId" 			column="record_id"				/>
		<result property="openState" 			column="open_state"				/>
		<result property="recordTitle"			column="record_title"			/>
		<result property="recordRegDivCd" 		column="record_reg_div_cd"		/>
		<result property="recordRegDivNm" 		column="record_reg_div_nm"		/>
		<result property="recordDetlTypeCd" 	column="record_detl_type_cd"	/>
		<result property="recordDetlTypeNm" 	column="record_detl_type_nm"	/>
		<result property="openDivCd" 			column="open_div_cd"			/>
		<result property="openDivNm" 			column="open_div_nm"			/>
	</resultMap>
	<select id="countDiosConfirmRecordPagedList" parameterClass="rms.open.open.domain.FindOpen" resultClass="java.lang.Long">
		SELECT COUNT(1)
		FROM (
			SELECT DISTINCT A.record_center_id, A.open_sys_cd, A.record_id
			FROM  TB_OPOPENLIST A
				, TB_RDRECORD B
			WHERE A.record_center_id = #recordCenterId:VARCHAR#
			AND   A.open_sys_cd = '01'
			AND   A.open_state IN ('1','2','3')
			AND   A.org_cd = #orgCd:VARCHAR#
			AND   A.folder_id = #folderId:VARCHAR#
			<isNotEmpty prepend="AND" property="creatSysCd">
				A.creat_sys_cd = #creatSysCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="creatYyyy">
				A.creat_yyyy = #creatYyyy:VARCHAR#
			</isNotEmpty>
			AND   B.record_center_id=A.record_center_id
			AND   B.record_id=A.record_id
			<isNotEmpty prepend="AND" property="recordTitle">
				B.title LIKE #recordTitle:VARCHAR#
			</isNotEmpty>
		)
	</select>
	<select id="findDiosConfirmRecordPagedList" parameterClass="rms.open.open.domain.FindOpen" resultMap="findDiosConfirmRecordPagedList-result">
		SELECT D.record_center_id
			, D.record_id
			, D.open_state
			, D.record_title
			, D.record_reg_div_cd
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD02' AND Z.com_cd=D.record_reg_div_cd) record_reg_div_nm
			, D.record_detl_type_cd
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD03' AND Z.com_cd=D.record_detl_type_cd) record_detl_type_nm
			, D.open_div_cd
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD05' AND Z.com_cd=D.open_div_cd) open_div_nm
		FROM (
			SELECT ROWNUM AS rnum
				, C.*
			FROM (
				SELECT A.record_center_id
					, A.record_id
					, A.open_state
					, B.title AS record_title
					, B.record_reg_div_cd
					, B.record_detl_type_cd
					, B.open_div_cd
				FROM  TB_OPOPENLIST A
					, TB_RDRECORD B
				WHERE A.record_center_id = #recordCenterId:VARCHAR#
				AND   A.open_sys_cd = '01'
				AND   A.open_state IN ('1','2','3')
				AND   A.org_cd = #orgCd:VARCHAR#
				AND   A.folder_id = #folderId:VARCHAR#
				<isNotEmpty prepend="AND" property="creatSysCd">
					A.creat_sys_cd = #creatSysCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="creatYyyy">
					A.creat_yyyy = #creatYyyy:VARCHAR#
				</isNotEmpty>
				AND   B.record_center_id = A.record_center_id
				AND   B.record_id = A.record_id
				<isNotEmpty prepend="AND" property="recordTitle">
					B.title LIKE #recordTitle:VARCHAR#
				</isNotEmpty>
				ORDER BY A.record_center_id, A.open_sys_cd, B.title
			) C
			WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
		) D
		WHERE D.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
		ORDER BY D.rnum
	</select>
	
	<!-- 
		정보공개대상확정
		: 정보공개 확정처리 - 1.정보공개 그룹 생성
	 -->
	<insert id="createOpenGroup" parameterClass="rms.open.open.domain.FindOpen">
		INSERT INTO TB_OPOPENGROUP
		(
			record_center_id, open_sys_cd, open_dtime, choice_cnt, except_cnt, append_cnt, list_type_cd, list_prov_flag, list_prov_dtime, reg_dtime
		)
		(
			SELECT #recordCenterId:VARCHAR#
				, '01'
				, #openDtime:VARCHAR#
				, (SELECT COUNT(1) FROM TB_OPOPENLIST WHERE record_center_id = #recordCenterId:VARCHAR# AND open_sys_cd = '01' AND open_state = '1') AS cho_cnt
				, (SELECT COUNT(1) FROM TB_OPOPENLIST WHERE record_center_id = #recordCenterId:VARCHAR# AND open_sys_cd = '01' AND open_state = '2') AS exc_cnt
				, (SELECT COUNT(1) FROM TB_OPOPENLIST WHERE record_center_id = #recordCenterId:VARCHAR# AND open_sys_cd = '01' AND open_state = '3') AS app_cnt
				, '01'
				, '0'
				, ''
				<!--cubrid , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')-->
				, TO_CHAR(sys_datetime,'YYYYMMDDHH24MISS')
			FROM  DUAL
		)
	</insert>
	
	<!-- 
		정보공개대상확정
		: 정보공개 확정처리 - 2.공개목록 확정처리 (1:선정/3:추가->4:확정(선정) , 2:제외->5:확정(제외))
	 -->
	<update id="updateOpenListConfirm" parameterClass="rms.open.open.domain.FindOpen">
		UPDATE TB_OPOPENLIST
		SET   open_state = (CASE WHEN open_state='2' THEN '5' ELSE '4' END)
			, open_dtime = #openDtime:VARCHAR#
		WHERE record_center_id = #recordCenterId:VARCHAR#
		AND   open_sys_cd = '01'
		AND   open_state IN ('1','2','3')
	</update>
	
</sqlMap>
