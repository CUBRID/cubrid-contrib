<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="presv.format">

	<!-- 
		장기보존포맷변환
		: 포맷변환 작업그룹ID 획득
	 -->
	<select id="findPresvFormatNeoJobGroupId" resultClass="string">
		SELECT TO_CHAR(SYSDATE,'YYYY')||LPAD(TB_STFORMAT_GROUP_SQ01.NEXTVAL,13,'0') FROM DUAL
	</select>

	<!-- 
		장기보존포맷변환
		: 저장소정보 획득
	 -->
	<resultMap id="findPresvFormatNeoMediumInfo-resultMap" class="rms.presv.format.domain.PresvFormatNeo">
		<result property="destStorageType"			column="medium_cd" />
		<result property="destStorageVendor"		column="medium_detail_cd" />
	</resultMap>
	<select id="findPresvFormatNeoMediumInfo" parameterClass="string" resultMap="findPresvFormatNeoMediumInfo-resultMap">
		SELECT medium_cd
			, medium_detail_cd
		FROM (
		    SELECT medium_cd, medium_detail_cd
		    FROM  TB_STMEDIUM
		    WHERE record_center_id = #value#
		    AND   volm_id IN (SELECT volm_id FROM TB_STVOLM WHERE del_flag='0' AND volm_div_cd='3')
		    AND   del_flag = '0'
		    AND   (tot_size - use_size) > 0
		    ORDER BY record_center_id, medium_id
		)
		WHERE ROWNUM = 1
	</select>

	<!--
		장기보존포맷변환_생산부서별변환
		: 생산부서별변환 목록 조회
	-->
	<resultMap id="findPresvFormatNeoOrgPagedList-resultMap" class="rms.presv.format.domain.PresvFormatNeoResult">
		<result property="orgCd"			column="org_cd" />
		<result property="orgNm"			column="org_nm" />
		<result property="orgAbbrNm"		column="org_abbr_nm" />
		<result property="folderTotCnt"		column="folder_tot_cnt" />
		<result property="folderDefCnt"		column="folder_def_cnt" />
		<result property="folderIngCnt"		column="folder_ing_cnt" />
		<result property="folderFailCnt"	column="folder_fail_cnt" />
		<result property="folderEndCnt"		column="folder_end_cnt" />
		<result property="recordTotCnt"		column="record_tot_cnt" />
		<result property="recordDefCnt"		column="record_def_cnt" />
		<result property="recordIngCnt"		column="record_ing_cnt" />
		<result property="recordFailCnt"	column="record_fail_cnt" />
		<result property="recordEndCnt"		column="record_end_cnt" />
	</resultMap>
	<select id="countPresvFormatNeoOrgPagedList" parameterClass="rms.presv.format.domain.PresvFormatNeo" resultClass="java.lang.Long">
		SELECT COUNT(1)
		FROM (
			SELECT DISTINCT A.record_center_id, A.org_cd
			FROM TB_RDFOLDER A
			WHERE A.record_center_id = #recordCenterId:VARCHAR#
			<isNotEmpty prepend="AND" property="orgCd">
				A.org_cd = #orgCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="creatYyyyFrom">
				<isNotEmpty property="creatYyyyTo">
					(A.creat_yyyy BETWEEN #creatYyyyFrom:VARCHAR# AND #creatYyyyTo:VARCHAR#)
				</isNotEmpty>
				<isEmpty property="creatYyyyTo">
					A.creat_yyyy <![CDATA[>=]]> #creatYyyyFrom:VARCHAR#
				</isEmpty>
			</isNotEmpty>
			<isEmpty prepend="AND" property="creatYyyyFrom">
				<isNotEmpty property="creatYyyyTo">
					A.creat_yyyy <![CDATA[<=]]> #creatYyyyTo:VARCHAR#
				</isNotEmpty>
			</isEmpty>
			<isNotEmpty property="presvTermCd">
				<isEqual property="presvTermCheck" compareValue="1">
					<isEqual prepend="AND" property="presvTermCd" compareValue="25">
						A.presv_term_cd <![CDATA[>=]]> '20'
					</isEqual>
					<isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
					A.presv_term_cd <![CDATA[>=]]> #presvTermCd:VARCHAR# 
					</isNotEqual> 					 
				</isEqual>
				<isNotEqual property="presvTermCheck" compareValue="1">
					<isEqual prepend="AND" property="presvTermCd" compareValue="25">
						A.presv_term_cd IN ('20','25') 
					</isEqual>
					<isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
					A.presv_term_cd = #presvTermCd:VARCHAR# 
				</isNotEqual>
				</isNotEqual>
			</isNotEmpty>
			AND   A.folder_keep_state_cd IN ('01','04')
		)
	</select>
	<select id="findPresvFormatNeoOrgPagedList" parameterClass="rms.presv.format.domain.PresvFormatNeo" resultMap="findPresvFormatNeoOrgPagedList-resultMap">
		SELECT E.record_center_id
			, E.org_cd
			, (SELECT Z.org_nm FROM TB_STORG Z WHERE Z.record_center_id=E.record_center_id AND Z.org_cd=E.org_cd) org_nm
			, (SELECT Z.org_abbr_nm FROM TB_STORG Z WHERE Z.record_center_id=E.record_center_id AND Z.org_cd=E.org_cd) org_abbr_nm
		    , SUM(E.folder_tot_cnt) folder_tot_cnt
		    , SUM(E.folder_def_cnt) folder_def_cnt
		    , SUM(E.folder_ing_cnt) folder_ing_cnt
		    , SUM(E.folder_fail_cnt) folder_fail_cnt
		    , SUM(E.folder_end_cnt) folder_end_cnt
		    , SUM(E.record_tot_cnt) record_tot_cnt
		    , SUM(E.record_def_cnt) record_def_cnt
		    , SUM(E.record_ing_cnt) record_ing_cnt
		    , SUM(E.record_fail_cnt) record_fail_cnt
		    , SUM(E.record_end_cnt) record_end_cnt
		FROM (
			SELECT D.record_center_id
				, D.org_cd
				, 1 folder_tot_cnt
				, (CASE WHEN (D.neo_trans_state IS NULL OR D.neo_trans_state='0') THEN 1 ELSE 0 END) folder_def_cnt
				, (CASE WHEN D.neo_trans_state IN ('1','2','3') THEN 1 ELSE 0 END) folder_ing_cnt
				, (CASE WHEN D.neo_trans_state='5' THEN 1 ELSE 0 END) folder_fail_cnt
				, (CASE WHEN D.neo_trans_state='4' THEN 1 ELSE 0 END) folder_end_cnt
				, (SELECT COUNT(1) FROM TB_RDRECORD R WHERE R.record_center_id=D.record_center_id AND R.folder_id=D.folder_id) record_tot_cnt
				, (SELECT COUNT(1) FROM TB_RDRECORD R WHERE R.record_center_id=D.record_center_id AND R.folder_id=D.folder_id AND (R.neo_trans_state IS NULL OR R.neo_trans_state='0')) record_def_cnt
				, (SELECT COUNT(1) FROM TB_RDRECORD R WHERE R.record_center_id=D.record_center_id AND R.folder_id=D.folder_id AND R.neo_trans_state IN ('1','2','3')) record_ing_cnt
				, (SELECT COUNT(1) FROM TB_RDRECORD R WHERE R.record_center_id=D.record_center_id AND R.folder_id=D.folder_id AND R.neo_trans_state='5') record_fail_cnt
				, (SELECT COUNT(1) FROM TB_RDRECORD R WHERE R.record_center_id=D.record_center_id AND R.folder_id=D.folder_id AND R.neo_trans_state='4') record_end_cnt
			FROM TB_RDFOLDER D
			<!--cubrid WHERE (D.record_center_id, D.org_cd)-->
			WHERE
			EXISTS (
				<!--cubrid SELECT C.record_center_id, C.org_cd-->
				SELECT 1
				FROM (
					SELECT ROWNUM AS rnum, B.*
					FROM (
						SELECT DISTINCT A.record_center_id, A.org_cd
						FROM TB_RDFOLDER A
						WHERE A.record_center_id = #recordCenterId:VARCHAR#
						<isNotEmpty prepend="AND" property="orgCd">
							A.org_cd = #orgCd:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="creatYyyyFrom">
							<isNotEmpty property="creatYyyyTo">
								(A.creat_yyyy BETWEEN #creatYyyyFrom:VARCHAR# AND #creatYyyyTo:VARCHAR#)
							</isNotEmpty>
							<isEmpty property="creatYyyyTo">
								A.creat_yyyy <![CDATA[>=]]> #creatYyyyFrom:VARCHAR#
							</isEmpty>
						</isNotEmpty>
						<isEmpty prepend="AND" property="creatYyyyFrom">
							<isNotEmpty property="creatYyyyTo">
								A.creat_yyyy <![CDATA[<=]]> #creatYyyyTo:VARCHAR#
							</isNotEmpty>
						</isEmpty>
						<isNotEmpty property="presvTermCd">
							<isEqual property="presvTermCheck" compareValue="1">
								<isEqual prepend="AND" property="presvTermCd" compareValue="25">
									A.presv_term_cd <![CDATA[>=]]> '20'
								</isEqual>
								<isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
								A.presv_term_cd <![CDATA[>=]]> #presvTermCd:VARCHAR# 
								</isNotEqual> 					 
							</isEqual>
							<isNotEqual property="presvTermCheck" compareValue="1">
								<isEqual prepend="AND" property="presvTermCd" compareValue="25">
									A.presv_term_cd IN ('20','25') 
								</isEqual>
								<isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
								A.presv_term_cd = #presvTermCd:VARCHAR# 
							</isNotEqual>
							</isNotEqual>
						</isNotEmpty>
						AND   A.folder_keep_state_cd IN ('01','04')
		                ORDER BY A.record_center_id, A.org_cd
		            ) B
		            WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
		 	    AND B.record_center_id = D.record_center_id
			    AND B.org_cd = D.org_cd
		        ) C
		        WHERE C.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
		    )
			<isNotEmpty prepend="AND" property="creatYyyyFrom">
				<isNotEmpty property="creatYyyyTo">
					(D.creat_yyyy BETWEEN #creatYyyyFrom:VARCHAR# AND #creatYyyyTo:VARCHAR#)
				</isNotEmpty>
				<isEmpty property="creatYyyyTo">
					D.creat_yyyy <![CDATA[>=]]> #creatYyyyFrom:VARCHAR#
				</isEmpty>
			</isNotEmpty>
			<isEmpty prepend="AND" property="creatYyyyFrom">
				<isNotEmpty property="creatYyyyTo">
					D.creat_yyyy <![CDATA[<=]]> #creatYyyyTo:VARCHAR#
				</isNotEmpty>
			</isEmpty>
			<isNotEmpty property="presvTermCd">
				<isEqual property="presvTermCheck" compareValue="1">
					<isEqual prepend="AND" property="presvTermCd" compareValue="25">
						D.presv_term_cd <![CDATA[>=]]> '20'
					</isEqual>
					<isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
					D.presv_term_cd <![CDATA[>=]]> #presvTermCd:VARCHAR# 
					</isNotEqual> 					 
				</isEqual>
				<isNotEqual property="presvTermCheck" compareValue="1">
					<isEqual prepend="AND" property="presvTermCd" compareValue="25">
						D.presv_term_cd IN ('20','25') 
					</isEqual>
					<isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
					D.presv_term_cd = #presvTermCd:VARCHAR# 
				</isNotEqual>
				</isNotEqual>
			</isNotEmpty>
		    AND   D.folder_keep_state_cd IN ('01','04')
		) E
		GROUP BY E.record_center_id, E.org_cd
	</select>

	<!--
		장기보존포맷변환_생산부서별변환(기록물철)
		: 생산부서별변환(기록물철) 목록 조회
	-->
	<resultMap id="findPresvFormatNeoOrgFolderPagedList-resultMap" class="rms.presv.format.domain.PresvFormatNeoResult">
		<result property="folderId"				column="folder_id" />
		<result property="folderTitle"			column="folder_title" />
		<result property="folderNeoState"		column="folder_neo_state" />
		<result property="folderNeoStateNm"		column="folder_neo_state_nm" />
		<result property="recordTotCnt"			column="record_tot_cnt" />
		<result property="recordDefCnt"			column="record_def_cnt" />
		<result property="recordIngCnt"			column="record_ing_cnt" />
		<result property="recordFailCnt"		column="record_fail_cnt" />
		<result property="recordEndCnt"			column="record_end_cnt" />
	</resultMap>
	<select id="countPresvFormatNeoOrgFolderPagedList" parameterClass="rms.presv.format.domain.PresvFormatNeo" resultClass="java.lang.Long">
		SELECT COUNT(1)
		FROM (
			SELECT A.record_center_id, A.folder_id
			FROM TB_RDFOLDER A
			WHERE A.record_center_id = #recordCenterId:VARCHAR#
			AND   A.org_cd = #orgCd:VARCHAR#
			<isNotEmpty prepend="AND" property="creatYyyyFrom">
				<isNotEmpty property="creatYyyyTo">
					(A.creat_yyyy BETWEEN #creatYyyyFrom:VARCHAR# AND #creatYyyyTo:VARCHAR#)
				</isNotEmpty>
				<isEmpty property="creatYyyyTo">
					A.creat_yyyy <![CDATA[>=]]> #creatYyyyFrom:VARCHAR#
				</isEmpty>
			</isNotEmpty>
			<isEmpty prepend="AND" property="creatYyyyFrom">
				<isNotEmpty property="creatYyyyTo">
					A.creat_yyyy <![CDATA[<=]]> #creatYyyyTo:VARCHAR#
				</isNotEmpty>
			</isEmpty>
			<isNotEmpty property="presvTermCd">
				<isEqual property="presvTermCheck" compareValue="1">
					<isEqual prepend="AND" property="presvTermCd" compareValue="25">
						A.presv_term_cd <![CDATA[>=]]> '20'
					</isEqual>
					<isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
					A.presv_term_cd <![CDATA[>=]]> #presvTermCd:VARCHAR# 
					</isNotEqual> 					 
				</isEqual>
				<isNotEqual property="presvTermCheck" compareValue="1">
					<isEqual prepend="AND" property="presvTermCd" compareValue="25">
						A.presv_term_cd IN ('20','25') 
					</isEqual>
					<isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
					A.presv_term_cd = #presvTermCd:VARCHAR# 
				</isNotEqual>
				</isNotEqual>
			</isNotEmpty>
			AND   A.folder_keep_state_cd IN ('01','04')
		)
	</select>
	<select id="findPresvFormatNeoOrgFolderPagedList" parameterClass="rms.presv.format.domain.PresvFormatNeo" resultMap="findPresvFormatNeoOrgFolderPagedList-resultMap">
		SELECT D.record_center_id
			, D.folder_id
			, D.title folder_title
			, D.neo_trans_state folder_neo_state
            , (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='ST03' AND Z.com_cd=D.neo_trans_state) folder_neo_state_nm			
            , (SELECT COUNT(1) FROM TB_RDRECORD R WHERE R.record_center_id=D.record_center_id AND R.folder_id=D.folder_id) record_tot_cnt
			, (SELECT COUNT(1) FROM TB_RDRECORD R WHERE R.record_center_id=D.record_center_id AND R.folder_id=D.folder_id AND (R.neo_trans_state IS NULL OR R.neo_trans_state='0')) record_def_cnt
			, (SELECT COUNT(1) FROM TB_RDRECORD R WHERE R.record_center_id=D.record_center_id AND R.folder_id=D.folder_id AND R.neo_trans_state IN ('1','2','3')) record_ing_cnt
			, (SELECT COUNT(1) FROM TB_RDRECORD R WHERE R.record_center_id=D.record_center_id AND R.folder_id=D.folder_id AND R.neo_trans_state='5') record_fail_cnt
			, (SELECT COUNT(1) FROM TB_RDRECORD R WHERE R.record_center_id=D.record_center_id AND R.folder_id=D.folder_id AND R.neo_trans_state IN ('4','6')) record_end_cnt
		FROM TB_RDFOLDER D
		<!--cubrid WHERE (D.record_center_id, D.folder_id)-->
		WHERE
		EXISTS (
			<!--cubrid SELECT C.record_center_id, C.folder_id-->
			SELECT 1
			FROM (
				SELECT ROWNUM AS rnum, B.*
				FROM (
					SELECT A.record_center_id, A.folder_id
					FROM TB_RDFOLDER A
					WHERE A.record_center_id = #recordCenterId:VARCHAR#
					AND   A.org_cd = #orgCd:VARCHAR#
					<isNotEmpty prepend="AND" property="creatYyyyFrom">
						<isNotEmpty property="creatYyyyTo">
							(A.creat_yyyy BETWEEN #creatYyyyFrom:VARCHAR# AND #creatYyyyTo:VARCHAR#)
						</isNotEmpty>
						<isEmpty property="creatYyyyTo">
							A.creat_yyyy <![CDATA[>=]]> #creatYyyyFrom:VARCHAR#
						</isEmpty>
					</isNotEmpty>
					<isEmpty prepend="AND" property="creatYyyyFrom">
						<isNotEmpty property="creatYyyyTo">
							A.creat_yyyy <![CDATA[<=]]> #creatYyyyTo:VARCHAR#
						</isNotEmpty>
					</isEmpty>
					<isNotEmpty property="presvTermCd">
						<isEqual property="presvTermCheck" compareValue="1">
							<isEqual prepend="AND" property="presvTermCd" compareValue="25">
								A.presv_term_cd <![CDATA[>=]]> '20'
							</isEqual>
							<isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
							A.presv_term_cd <![CDATA[>=]]> #presvTermCd:VARCHAR# 
							</isNotEqual> 					 
						</isEqual>
						<isNotEqual property="presvTermCheck" compareValue="1">
							<isEqual prepend="AND" property="presvTermCd" compareValue="25">
								A.presv_term_cd IN ('20','25') 
							</isEqual>
							<isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
							A.presv_term_cd = #presvTermCd:VARCHAR# 
						</isNotEqual>
						</isNotEqual>
					</isNotEmpty>
					AND   A.folder_keep_state_cd IN ('01','04')
	                ORDER BY A.record_center_id, A.title
	            ) B
	            WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
	        ) C
	        WHERE C.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
		AND C.record_center_id =  D.record_center_id
		AND C.folder_id = D.folder_id
	    )
	    ORDER BY D.record_center_id, D.title
	</select>

	<!--
		장기보존포맷변환_생산부서별변환(기록물건)
		: 생산부서별변환(기록물건) 목록 조회
	-->
	<resultMap id="findPresvFormatNeoOrgRecordPagedList-resultMap" class="rms.presv.format.domain.PresvFormatNeoResult">
		<result property="recordId"					column="record_id" />
		<result property="recordTitle"				column="record_title" />
		<result property="recordPdfState"			column="record_pdf_state" />
		<result property="recordPdfStateNm"			column="record_pdf_state_nm" />
		<result property="recordNeoState"			column="record_neo_state" />
		<result property="recordNeoStateNm"			column="record_neo_state_nm" />
		<result property="recordNeoState2cha"		column="record_neo_state2cha" />
		<result property="recordNeoStateNm2cha"		column="record_neo_state_nm2cha" />
	</resultMap>
	<select id="countPresvFormatNeoOrgRecordPagedList" parameterClass="rms.presv.format.domain.PresvFormatNeo" resultClass="java.lang.Long">
		SELECT COUNT(1)
		FROM (
			SELECT A.record_center_id, A.record_id
			FROM TB_RDRECORD A
			WHERE A.record_center_id = #recordCenterId:VARCHAR#
			AND   A.folder_id = #folderId:VARCHAR#
		)
	</select>
	<select id="findPresvFormatNeoOrgRecordPagedList" parameterClass="rms.presv.format.domain.PresvFormatNeo" resultMap="findPresvFormatNeoOrgRecordPagedList-resultMap">
		SELECT D.record_center_id
			, D.record_id
			, D.title record_title
			, D.pdf_a1_trans_state record_pdf_state
			, ( CASE WHEN D.pdf_a1_trans_state IN (1,2,3)
				THEN (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='NE02' AND Z.com_cd=(SELECT X.request_status FROM TB_STREQTRANS X WHERE X.record_id=D.record_id AND X.job_id=(SELECT MAX(Y.job_id) FROM TB_STREQTRANS Y WHERE Y.record_id=D.record_id AND Y.neo_gubun='0')))
				ELSE (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='ST02' AND Z.com_cd=D.pdf_a1_trans_state)
				END ) AS record_pdf_state_nm
            , D.neo_trans_state AS record_neo_state
			, ( CASE WHEN D.neo_trans_state IN (1,2,3)
				THEN (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='NE02' AND Z.com_cd=(SELECT X.request_status FROM TB_STREQTRANS X WHERE X.record_id=D.record_id AND X.job_id=(SELECT MAX(Y.job_id) FROM TB_STREQTRANS Y WHERE Y.record_id=D.record_id AND Y.neo_gubun='2' AND Y.neochasu=1)))
				ELSE (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='ST03' AND Z.com_cd=D.neo_trans_state)
				END ) AS record_neo_state_nm
            , D.neo_trans_state_2 AS record_neo_state2cha
			, ( CASE WHEN D.neo_trans_state_2 IN (1,2,3)
				THEN (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='NE02' AND Z.com_cd=(SELECT X.request_status FROM TB_STREQTRANS X WHERE X.record_id=D.record_id AND X.job_id=(SELECT MAX(Y.job_id) FROM TB_STREQTRANS Y WHERE Y.record_id=D.record_id AND Y.neo_gubun='2' AND Y.neochasu=2)))
				ELSE (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='ST03' AND Z.com_cd=D.neo_trans_state_2)
				END ) AS record_neo_state_nm2cha
		FROM TB_RDRECORD D
		<!--cubrid WHERE (D.record_center_id, D.record_id)
		IN (
			SELECT C.record_center_id, C.record_id-->
		WHERE
		EXISTS (
			SELECT 1
			FROM (
				SELECT ROWNUM AS rnum, B.*
				FROM (
					SELECT A.record_center_id, A.record_id
					FROM TB_RDRECORD A
					WHERE A.record_center_id = #recordCenterId:VARCHAR#
					AND   A.folder_id = #folderId:VARCHAR#
	                ORDER BY A.record_center_id, A.creat_reg_dtime, A.creat_reg_no
	            ) B
	            WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
	        ) C
	        WHERE C.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
		<!--cubrid-->
		AND C.record_center_id = D.record_center_id
		AND C.record_id = D.record_id
	    )
	    ORDER BY D.record_center_id, D.creat_reg_dtime, D.creat_reg_no
	</select>


	<!--
		장기보존포맷변환_기록물철별변환
		: 기록물철별변환 목록 조회
	 -->
	<resultMap id="findPresvFormatNeoFolderPagedList-resultMap" class="rms.presv.format.domain.PresvFormatNeoResult">
		<result property="folderId"				column="folder_id" />
		<result property="folderTitle"			column="folder_title" />
		<result property="folderNeoState"		column="folder_neo_state" />
		<result property="folderNeoStateNm"		column="folder_neo_state_nm" />
		<result property="recordTotCnt"			column="record_tot_cnt" />
		<result property="recordDefCnt"			column="record_def_cnt" />
		<result property="recordIngCnt"			column="record_ing_cnt" />
		<result property="recordFailCnt"		column="record_fail_cnt" />
		<result property="recordEndCnt"			column="record_end_cnt" />
	</resultMap>
	<select id="countPresvFormatNeoFolderPagedList" parameterClass="rms.presv.format.domain.PresvFormatNeo" resultClass="java.lang.Long">
		SELECT COUNT(1)
		FROM (
			SELECT A.record_center_id, A.folder_id
			FROM TB_RDFOLDER A
			WHERE A.record_center_id = #recordCenterId:VARCHAR#
			<isNotEmpty prepend="AND" property="creatSysCd">
				A.creat_sys_cd = #creatSysCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="orgCd">
				A.org_cd = #orgCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="clssId">
				A.clss_id = #clssId:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="creatYyyyFrom">
				<isNotEmpty property="creatYyyyTo">
					(A.creat_yyyy BETWEEN #creatYyyyFrom:VARCHAR# AND #creatYyyyTo:VARCHAR#)
				</isNotEmpty>
				<isEmpty property="creatYyyyTo">
					A.creat_yyyy <![CDATA[>=]]> #creatYyyyFrom:VARCHAR#
				</isEmpty>
			</isNotEmpty>
			<isEmpty prepend="AND" property="creatYyyyFrom">
				<isNotEmpty property="creatYyyyTo">
					A.creat_yyyy <![CDATA[<=]]> #creatYyyyTo:VARCHAR#
				</isNotEmpty>
			</isEmpty>
			<isNotEmpty property="presvTermCd">
				<isEqual property="presvTermCheck" compareValue="1">
					<isEqual prepend="AND" property="presvTermCd" compareValue="25">
						A.presv_term_cd <![CDATA[>=]]> '20'
					</isEqual>
					<isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
					A.presv_term_cd <![CDATA[>=]]> #presvTermCd:VARCHAR#
					</isNotEqual> 					 
				</isEqual>
				<isNotEqual property="presvTermCheck" compareValue="1">
					<isEqual prepend="AND" property="presvTermCd" compareValue="25">
						A.presv_term_cd IN ('20','25') 
					</isEqual>
					<isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
					A.presv_term_cd = #presvTermCd:VARCHAR#
				</isNotEqual>
				</isNotEqual>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="folderTypeDivCd">
				A.folder_type_div_cd = #folderTypeDivCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="neoTransState">
				A.neo_trans_state = #neoTransState:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="folderTitle">
				A.title LIKE #folderTitle:VARCHAR#
			</isNotEmpty>
			AND A.folder_keep_state_cd IN ('01','04')
		)
	</select>
	<select id="findPresvFormatNeoFolderPagedList" parameterClass="rms.presv.format.domain.PresvFormatNeo" resultMap="findPresvFormatNeoFolderPagedList-resultMap">
		SELECT D.record_center_id
			, D.folder_id
			, D.title folder_title
			, D.neo_trans_state folder_neo_state
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='ST03' AND Z.com_cd=D.neo_trans_state) folder_neo_state_nm
			, (SELECT COUNT(1) FROM TB_RDRECORD R WHERE R.record_center_id=D.record_center_id AND R.folder_id=D.folder_id) record_tot_cnt
			, (SELECT COUNT(1) FROM TB_RDRECORD R WHERE R.record_center_id=D.record_center_id AND R.folder_id=D.folder_id AND (R.neo_trans_state IS NULL OR R.neo_trans_state='0')) record_def_cnt
			, (SELECT COUNT(1) FROM TB_RDRECORD R WHERE R.record_center_id=D.record_center_id AND R.folder_id=D.folder_id AND R.neo_trans_state IN ('1','2','3')) record_ing_cnt
			, (SELECT COUNT(1) FROM TB_RDRECORD R WHERE R.record_center_id=D.record_center_id AND R.folder_id=D.folder_id AND R.neo_trans_state='5') record_fail_cnt
			, (SELECT COUNT(1) FROM TB_RDRECORD R WHERE R.record_center_id=D.record_center_id AND R.folder_id=D.folder_id AND R.neo_trans_state IN ('4','6')) record_end_cnt
		FROM TB_RDFOLDER D
		<!--cubrid WHERE (D.record_center_id, D.folder_id)-->
		WHERE
		EXISTS (
			<!--cubrid SELECT C.record_center_id, C.folder_id-->
			SELECT 1
			FROM (
				SELECT ROWNUM AS rnum, B.*
				FROM (
					SELECT A.record_center_id, A.folder_id
					FROM TB_RDFOLDER A
					WHERE A.record_center_id = #recordCenterId:VARCHAR#
					<isNotEmpty prepend="AND" property="creatSysCd">
						A.creat_sys_cd = #creatSysCd:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="orgCd">
						A.org_cd = #orgCd:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="clssId">
						A.clss_id = #clssId:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="creatYyyyFrom">
						<isNotEmpty property="creatYyyyTo">
							(A.creat_yyyy BETWEEN #creatYyyyFrom:VARCHAR# AND #creatYyyyTo:VARCHAR#)
						</isNotEmpty>
						<isEmpty property="creatYyyyTo">
							A.creat_yyyy <![CDATA[>=]]> #creatYyyyFrom:VARCHAR#
						</isEmpty>
					</isNotEmpty>
					<isEmpty prepend="AND" property="creatYyyyFrom">
						<isNotEmpty property="creatYyyyTo">
							A.creat_yyyy <![CDATA[<=]]> #creatYyyyTo:VARCHAR#
						</isNotEmpty>
					</isEmpty>
					<isNotEmpty property="presvTermCd">
						<isEqual property="presvTermCheck" compareValue="1">
							<isEqual prepend="AND" property="presvTermCd" compareValue="25">
								A.presv_term_cd <![CDATA[>=]]> '20'
							</isEqual>
							<isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
							A.presv_term_cd <![CDATA[>=]]> #presvTermCd:VARCHAR#
							</isNotEqual> 					 
						</isEqual>
						<isNotEqual property="presvTermCheck" compareValue="1">
							<isEqual prepend="AND" property="presvTermCd" compareValue="25">
								A.presv_term_cd IN ('20','25') 
							</isEqual>
							<isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
							A.presv_term_cd = #presvTermCd:VARCHAR#
						</isNotEqual>
						</isNotEqual>
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="folderTypeDivCd">
						A.folder_type_div_cd = #folderTypeDivCd:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="neoTransState">
						A.neo_trans_state = #neoTransState:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="folderTitle">
						A.title LIKE #folderTitle:VARCHAR#
					</isNotEmpty>
					AND A.folder_keep_state_cd IN ('01','04')
					ORDER BY A.record_center_id, A.title, A.folder_id
				) B
	            WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
	        ) C
	        WHERE C.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
		AND C.record_center_id = D.record_center_id
		AND C.folder_id = D.folder_id
		)
		ORDER BY D.record_center_id, D.title
	</select>
	
	<!--
		장기보존포맷변환_기록물철별변환
		: 기록물철별변환(기록물건) 목록 조회
	 -->
	<resultMap id="findPresvFormatNeoFolderRecordPagedList-resultMap" class="rms.presv.format.domain.PresvFormatNeoResult">
		<result property="recordId"					column="record_id" />
		<result property="recordTitle"				column="record_title" />
		<result property="recordPdfState"			column="record_pdf_state" />
		<result property="recordPdfStateNm"			column="record_pdf_state_nm" />
		<result property="recordNeoState"			column="record_neo_state" />
		<result property="recordNeoStateNm"			column="record_neo_state_nm" />
		<result property="recordNeoState2cha"		column="record_neo_state2cha" />
		<result property="recordNeoStateNm2cha"		column="record_neo_state_nm2cha" />
	</resultMap> 
	<select id="countPresvFormatNeoFolderRecordPagedList" parameterClass="rms.presv.format.domain.PresvFormatNeo" resultClass="java.lang.Long">
		SELECT COUNT(1)
		FROM (
			SELECT A.record_center_id, A.folder_id
			FROM TB_RDRECORD A
			WHERE A.record_center_id = #recordCenterId:VARCHAR#
			AND   A.folder_id = #folderId:VARCHAR#
		)
	</select>
	<select id="findPresvFormatNeoFolderRecordPagedList" parameterClass="rms.presv.format.domain.PresvFormatNeo" resultMap="findPresvFormatNeoFolderRecordPagedList-resultMap">
	 	SELECT D.record_center_id
			, D.record_id
			, D.title record_title
			, D.pdf_a1_trans_state AS record_pdf_state
	        , (CASE WHEN  d.pdf_a1_trans_state IN (1,2,3) THEN (SELECT z.com_cd_nm FROM tb_zzcomcd z WHERE z.com_type_cd = 'NE02' AND z.com_cd = ( SELECT REQUEST_STATUS FROM TB_STREQTRANS WHERE RECORD_ID = d.record_id AND  JOB_ID = (SELECT MAX(JOB_ID) FROM TB_STREQTRANS WHERE RECORD_ID = d.record_id AND NEO_GUBUN = '0')))
					ELSE (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='ST02' AND Z.com_cd=D.pdf_a1_trans_state)
				END) AS record_pdf_state_nm
            , D.neo_trans_state AS record_neo_state
	        , (CASE WHEN  d.neo_trans_state IN (1,2,3) THEN (SELECT z.com_cd_nm FROM tb_zzcomcd z WHERE z.com_type_cd = 'NE02' AND z.com_cd = ( SELECT REQUEST_STATUS FROM TB_STREQTRANS WHERE RECORD_ID = d.record_id AND  JOB_ID = (SELECT MAX(JOB_ID) FROM TB_STREQTRANS WHERE RECORD_ID = d.record_id AND NEO_GUBUN = '2' AND NEOCHASU=1)))
					ELSE (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='ST03' AND Z.com_cd=D.neo_trans_state)
				END) AS record_neo_state_nm
            , D.neo_trans_state_2 AS record_neo_state2cha
	        , (CASE WHEN  d.neo_trans_state_2 IN (1,2,3) THEN (SELECT z.com_cd_nm FROM tb_zzcomcd z WHERE z.com_type_cd = 'NE02' AND z.com_cd = ( SELECT REQUEST_STATUS FROM TB_STREQTRANS WHERE RECORD_ID = d.record_id AND  JOB_ID = (SELECT MAX(JOB_ID) FROM TB_STREQTRANS WHERE RECORD_ID = d.record_id AND NEO_GUBUN = '2' AND NEOCHASU=2)))
					ELSE (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='ST03' AND Z.com_cd=D.neo_trans_state_2)
				END) AS record_neo_state_nm2cha
		FROM TB_RDRECORD D
			, (
				SELECT C.record_center_id, C.record_id
				FROM (
					SELECT ROWNUM AS rnum, B.*
					FROM (
						SELECT A.record_center_id, A.record_id
						FROM TB_RDRECORD A
						WHERE A.record_center_id = #recordCenterId:VARCHAR#
						AND   A.folder_id = #folderId:VARCHAR#
		                ORDER BY A.record_center_id, A.creat_reg_dtime, A.creat_reg_no
		            ) B
		            WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
		        ) C
		        WHERE C.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
		    ) E
		WHERE D.record_center_id = E.record_center_id
		AND   D.record_id = E.record_id
	    ORDER BY D.record_center_id, D.creat_reg_dtime, D.creat_reg_no
	</select>
	
	<!--
		장기보존포맷변환_포맷변환현황
		 : 생산년도별 보존기간별 현황 조회 
	 -->
	<resultMap id="findPresvFormatNeoCurStateList-resultMap" class="rms.presv.format.domain.PresvFormatNeoResult">
		<result property="creatYyyy"		column="creat_yyyy" />
		<result property="presvTermCd"		column="presv_term_cd" />
		<result property="presvTermNm"		column="presv_term_nm" />
		<result property="folderTotCnt"		column="folder_tot_cnt" />
		<result property="folderDefCnt"		column="folder_def_cnt" />
		<result property="folderIngCnt"		column="folder_ing_cnt" />
		<result property="folderFailCnt"	column="folder_fail_cnt" />
		<result property="folderEndCnt"		column="folder_end_cnt" />
		<result property="recordTotCnt"		column="record_tot_cnt" />
		<result property="recordDefCnt"		column="record_def_cnt" />
		<result property="recordIngCnt"		column="record_ing_cnt" />
		<result property="recordFailCnt"	column="record_fail_cnt" />
		<result property="recordEndCnt"		column="record_end_cnt" />
	</resultMap>
	<select id="findPresvFormatNeoCurStateList" parameterClass="rms.presv.format.domain.PresvFormatNeo" resultMap="findPresvFormatNeoCurStateList-resultMap">
		SELECT D.creat_yyyy
			, D.presv_term_cd
		    , (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD07' AND Z.com_cd=D.presv_term_cd) presv_term_nm 
		    , NVL(C.folder_tot_cnt,0) AS folder_tot_cnt
		    , NVL(C.folder_def_cnt,0) AS folder_def_cnt
		    , NVL(C.folder_ing_cnt,0) AS folder_ing_cnt
		    , NVL(C.folder_fail_cnt,0) AS folder_fail_cnt
		    , NVL(C.folder_end_cnt,0) AS folder_end_cnt
		    , NVL(C.record_tot_cnt,0) AS record_tot_cnt
		    , NVL(C.record_def_cnt,0) AS record_def_cnt
		    , NVL(C.record_ing_cnt,0) AS record_ing_cnt
		    , NVL(C.record_fail_cnt,0) AS record_fail_cnt
		    , NVL(C.record_end_cnt,0) AS record_end_cnt
		FROM 
		(   SELECT B.record_center_id, B.creat_yyyy, B.presv_term_cd
		        , SUM(folder_tot_cnt) folder_tot_cnt
		        , SUM(folder_def_cnt) folder_def_cnt
		        , SUM(folder_ing_cnt) folder_ing_cnt
		        , SUM(folder_fail_cnt) folder_fail_cnt
		        , SUM(folder_end_cnt) folder_end_cnt
		        , SUM(record_tot_cnt) record_tot_cnt
		        , SUM(record_def_cnt) record_def_cnt
		        , SUM(record_ing_cnt) record_ing_cnt
		        , SUM(record_fail_cnt) record_fail_cnt
		        , SUM(record_end_cnt) record_end_cnt
		    FROM 
		    (   SELECT A.record_center_id, A.folder_id, A.creat_yyyy, DECODE(A.presv_term_cd, '20', '25', A.presv_term_cd) presv_term_cd, A.neo_trans_state
		            , 1 folder_tot_cnt
		            , (CASE WHEN (A.neo_trans_state IS NULL OR A.neo_trans_state='0') THEN 1 ELSE 0 END) folder_def_cnt
		            , (CASE WHEN A.neo_trans_state IN ('1','2','3') THEN 1 ELSE 0 END) folder_ing_cnt
		            , (CASE WHEN A.neo_trans_state='5' THEN 1 ELSE 0 END) folder_fail_cnt
		            , (CASE WHEN A.neo_trans_state IN ('4','6') THEN 1 ELSE 0 END) folder_end_cnt
		            , (SELECT COUNT(1) FROM TB_RDRECORD R WHERE R.record_center_id=A.record_center_id AND R.folder_id=A.folder_id) record_tot_cnt
		            , (SELECT COUNT(1) FROM TB_RDRECORD R WHERE R.record_center_id=A.record_center_id AND R.folder_id=A.folder_id AND (R.neo_trans_state IS NULL OR R.neo_trans_state='0')) record_def_cnt
		            , (SELECT COUNT(1) FROM TB_RDRECORD R WHERE R.record_center_id=A.record_center_id AND R.folder_id=A.folder_id AND R.neo_trans_state IN ('1','2','3')) record_ing_cnt
		            , (SELECT COUNT(1) FROM TB_RDRECORD R WHERE R.record_center_id=A.record_center_id AND R.folder_id=A.folder_id AND R.neo_trans_state='5') record_fail_cnt
		            , (SELECT COUNT(1) FROM TB_RDRECORD R WHERE R.record_center_id=A.record_center_id AND R.folder_id=A.folder_id AND R.neo_trans_state IN ('4','6')) record_end_cnt
		        FROM  TB_RDFOLDER A
		        WHERE A.record_center_id = #recordCenterId:VARCHAR#
				<isNotEmpty prepend="AND" property="creatYyyyFrom">
					<isNotEmpty property="creatYyyyTo">
						(A.creat_yyyy BETWEEN #creatYyyyFrom:VARCHAR# AND #creatYyyyTo:VARCHAR#)
					</isNotEmpty>
					<isEmpty property="creatYyyyTo">
						A.creat_yyyy <![CDATA[>=]]> #creatYyyyFrom:VARCHAR#
					</isEmpty>
				</isNotEmpty>
				<isEmpty prepend="AND" property="creatYyyyFrom">
					<isNotEmpty property="creatYyyyTo">
						A.creat_yyyy <![CDATA[<=]]> #creatYyyyTo:VARCHAR#
					</isNotEmpty>
				</isEmpty>
				<isNotEmpty prepend="AND" property="creatDtimeFrom">
					<isNotEmpty property="creatDtimeTo">
						TO_DATE(SUBSTR(A.creat_dtime,1,8),'YYYYMMDD') BETWEEN  TO_DATE(#creatDtimeFrom:VARCHAR#,'YYYYMMDD')  AND  TO_DATE(#creatDtimeTo:VARCHAR#,'YYYYMMDD') 
					</isNotEmpty>
					<isEmpty property="creatDtimeTo">
						TO_DATE(SUBSTR(A.creat_dtime,1,8),'YYYYMMDD')  <![CDATA[>=]]> TO_DATE(#creatDtimeFrom:VARCHAR#,'YYYYMMDD')
					</isEmpty>
				</isNotEmpty>
				<isEmpty prepend="AND" property="creatDtimeFrom">
					<isNotEmpty property="creatDtimeTo">
						TO_DATE(SUBSTR(A.creat_dtime,1,8),'YYYYMMDD')  <![CDATA[<=]]> TO_DATE(#creatDtimeTo:VARCHAR#,'YYYYMMDD') 
					</isNotEmpty>
				</isEmpty>
				<isNotEmpty property="presvTermCd">
					<isEqual property="presvTermCheck" compareValue="1">
						<isEqual prepend="AND" property="presvTermCd" compareValue="25">
							A.presv_term_cd <![CDATA[>=]]> '20'
						</isEqual>
						<isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
						A.presv_term_cd <![CDATA[>=]]> #presvTermCd:VARCHAR# 
						</isNotEqual> 					 
					</isEqual>
					<isNotEqual property="presvTermCheck" compareValue="1">
						<isEqual prepend="AND" property="presvTermCd" compareValue="25">
							A.presv_term_cd IN ('20','25') 
						</isEqual>
						<isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
						A.presv_term_cd = #presvTermCd:VARCHAR# 
					</isNotEqual>
					</isNotEqual>
				</isNotEmpty>
				AND   A.folder_keep_state_cd IN ('01','04')
		    ) B
		    GROUP BY B.record_center_id, B.creat_yyyy, presv_term_cd
		    ORDER BY B.record_center_id, B.creat_yyyy, presv_term_cd
		) C, (
		    SELECT Y.yyyy AS creat_yyyy, Z.com_cd AS presv_term_cd
		    FROM (SELECT com_cd FROM TB_ZZCOMCD WHERE com_type_cd='RD07') Z,
			<isNotEmpty property="creatYyyyFrom">
		     (SELECT yyyy FROM (SELECT LEVEL AS yyyy FROM DUAL CONNECT BY LEVEL <![CDATA[<=]]> #creatYyyyTo:VARCHAR#) WHERE yyyy <![CDATA[>=]]> #creatYyyyFrom:VARCHAR#) Y
            </isNotEmpty>
			<isEmpty property="creatYyyyFrom">
		     (SELECT yyyy FROM (SELECT LEVEL AS yyyy FROM DUAL CONNECT BY LEVEL <![CDATA[<=]]> SUBSTR(#creatDtimeTo:VARCHAR#,1,4)) WHERE yyyy <![CDATA[>=]]> SUBSTR(#creatDtimeFrom:VARCHAR#,1,4)) Y
            </isEmpty>
		) D
		WHERE D.creat_yyyy = C.creat_yyyy(+)
		AND   D.presv_term_cd = C.presv_term_cd(+)
		ORDER BY D.creat_yyyy DESC, D.presv_term_cd DESC
	</select>

	<!-- 
		장기보존포맷변환 : 변환실패 목록 조회
	 -->
	<resultMap id="findPresvFormatNeoFailedMsgPagedList-resultMap" class="rms.presv.format.domain.PresvFormatNeoFailedMsg">
		<result property="rnum"				column="rnum" />
		<result property="recordCenterId"	column="record_center_id" />
		<result property="workHistId"		column="work_hist_id" />
		<result property="folderId"			column="folder_id" />
		<result property="folderTitle"		column="folder_title" />
		<result property="recordId"			column="record_id" />
		<result property="recordTitle"		column="record_title" />
		<result property="orignFileId"		column="orign_file_id" />
		<result property="orignFileNm"		column="orign_file_nm" />
		<result property="workStartDtime"	column="work_start_dtime" />
		<result property="workCloseDtime"	column="work_close_dtime" />
		<result property="errorCd"			column="error_cd" />
		<result property="errorCont"		column="error_cont" />
		<result property="followupDivCd"	column="followup_div_cd" />
		<result property="followupDivNm"	column="followup_div_nm" />
		<result property="followupCause"	column="followup_cause" />
		<result property="neoChasu"			column="neo_chasu" />
		<result property="formatDivCd"		column="format_div_cd" />
	</resultMap>
	<select id="countPresvFormatNeoFailedMsgPagedList" parameterClass="rms.presv.format.domain.PresvFormatNeo" resultClass="java.lang.Long">
		SELECT COUNT(1)
		FROM  TB_STWORKHIST B
<!--cubrid	
    WHERE (B.record_center_id, B.folder_id)
           IN ( 
               SELECT A.record_center_id, A.folder_id -->
    WHERE EXISTS ( SELECT 1
               FROM TB_RDFOLDER A
               WHERE A.record_center_id = #recordCenterId:VARCHAR#
<!--cubrid-->  
                 AND A.record_center_id = B.record_center_id
                 AND A.folder_id = B.folder_id
			<isNotEmpty prepend="AND" property="folderId">
				A.folder_id = #folderId:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="orgCd">
				A.org_cd = #orgCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty property="creatYyyyFrom">
				<isNotEmpty prepend="AND" property="creatYyyyTo">
					A.creat_yyyy BETWEEN #creatYyyyFrom:VARCHAR# AND #creatYyyyTo:VARCHAR#
				</isNotEmpty>
				<isEmpty property="creatYyyyTo">
					A.creat_yyyy <![CDATA[>=]]> #creatYyyyFrom:VARCHAR#
				</isEmpty>
			</isNotEmpty>
			<isEmpty property="creatYyyyFrom">
				<isNotEmpty property="creatYyyyTo">
					A.creat_yyyy <![CDATA[<=]]> #creatYyyyTo:VARCHAR#
				</isNotEmpty>
			</isEmpty>
			<isNotEmpty property="presvTermCd">
				<isEqual prepend="AND" property="presvTermCheck" compareValue="1">
					A.presv_term_cd <![CDATA[>=]]> #presvTermCd:VARCHAR# 
				</isEqual>
				<isNotEqual prepend="AND" property="presvTermCheck" compareValue="1">
					A.presv_term_cd = #presvTermCd:VARCHAR# 
				</isNotEqual>
			</isNotEmpty>
			AND   A.folder_keep_state_cd IN ('01','04')
		)
		<isNotEmpty prepend="AND" property="recordId">
			B.record_id = #recordId:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="formatDivCd">
			B.format_div_cd = #formatDivCd:VARCHAR#
		</isNotEmpty>
		<isEmpty prepend="AND" property="formatDivCd">
			B.format_div_cd IN ('1','2')
		</isEmpty>
		AND (B.followup_fin_flag IS NULL OR B.followup_fin_flag='0')
		AND  (EXISTS (SELECT 1 FROM TB_RDFOLDER F WHERE F.record_center_id=B.record_center_id AND F.folder_id=B.folder_id AND F.neo_trans_state = '5')
				OR EXISTS (SELECT 1 FROM TB_RDRECORD R WHERE R.record_center_id=B.record_center_id AND R.folder_id=B.folder_id AND R.neo_trans_state = '5' ))
	</select>
	<select id="findPresvFormatNeoFailedMsgPagedList" parameterClass="rms.presv.format.domain.PresvFormatNeo" resultMap="findPresvFormatNeoFailedMsgPagedList-resultMap">
		SELECT E.rnum
			, E.record_center_id
			, E.work_hist_id
			, E.folder_id
			, NVL((SELECT Z.title FROM TB_RDFOLDER Z WHERE Z.record_center_id=E.record_center_id AND Z.folder_id=E.folder_id),'') AS folder_title
			, E.record_id
			, NVL((SELECT Z.title FROM TB_RDRECORD Z WHERE Z.record_center_id=E.record_center_id AND Z.record_id=E.record_id),'') AS record_title
			, E.orign_file_id
			, (SELECT Z.file_nm FROM TB_STORIGNFILE Z WHERE Z.orign_file_id=E.orign_file_id) AS orign_file_nm
			, E.work_start_dtime
			, E.work_close_dtime
			, E.error_cd
			, E.error_cont
			, E.followup_div_cd
			, (CASE WHEN E.followup_div_cd='1' THEN '재변환' WHEN E.followup_div_cd='2' THEN '변환불가' ELSE '미조치' END) AS followup_div_nm
			, E.followup_cause
			, (CASE WHEN E.format_div_cd = '1' THEN (SELECT NVL(MAX(Z.neochasu),0) FROM TB_STREQTRANS Z WHERE Z.record_center_id=E.record_center_id AND Z.folder_id=E.folder_id)
					WHEN E.format_div_cd = '2' THEN (SELECT NVL(MAX(Z.neochasu),0) FROM TB_STREQTRANS Z WHERE Z.record_center_id=E.record_center_id AND Z.folder_id=E.folder_id AND Z.record_id=E.record_id)
					ELSE 0 END) AS neo_chasu
			, E.format_div_cd
		FROM (
			SELECT D.*
			FROM (
				SELECT ROWNUM AS rnum, C.*
				FROM (
					SELECT B.record_center_id, B.work_hist_id, B.folder_id, B.record_id, B.orign_file_id
						, B.work_start_dtime, B.work_close_dtime, B.error_cd, B.error_cont
						, B.followup_div_cd, B.followup_cause, B.format_div_cd
					FROM  TB_STWORKHIST B
					<!--cubrid WHERE (B.record_center_id, B.folder_id)
					IN (
		                SELECT A.record_center_id, A.folder_id-->
					WHERE 
					EXISTS (
		                SELECT 1
		                FROM TB_RDFOLDER A
		                WHERE A.record_center_id = #recordCenterId:VARCHAR#
						<isNotEmpty prepend="AND" property="folderId">
							A.folder_id = #folderId:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="orgCd">
							A.org_cd = #orgCd:VARCHAR#
						</isNotEmpty>
						<isNotEmpty property="creatYyyyFrom">
							<isNotEmpty prepend="AND" property="creatYyyyTo">
								A.creat_yyyy BETWEEN #creatYyyyFrom:VARCHAR# AND #creatYyyyTo:VARCHAR#
							</isNotEmpty>
							<isEmpty property="creatYyyyTo">
								A.creat_yyyy <![CDATA[>=]]> #creatYyyyFrom:VARCHAR#
							</isEmpty>
						</isNotEmpty>
						<isEmpty property="creatYyyyFrom">
							<isNotEmpty property="creatYyyyTo">
								A.creat_yyyy <![CDATA[<=]]> #creatYyyyTo:VARCHAR#
							</isNotEmpty>
						</isEmpty>
						<isNotEmpty property="presvTermCd">
							<isEqual prepend="AND" property="presvTermCheck" compareValue="1">
								A.presv_term_cd <![CDATA[>=]]> #presvTermCd:VARCHAR# 
							</isEqual>
							<isNotEqual prepend="AND" property="presvTermCheck" compareValue="1">
								A.presv_term_cd = #presvTermCd:VARCHAR# 
							</isNotEqual>
						</isNotEmpty>
						AND   A.folder_keep_state_cd IN ('01','04')
						<!--cubrid-->
						AND   A.record_center_id = B.record_center_id
						AND   A.folder_id = B.folder_id
					)
					<isNotEmpty prepend="AND" property="recordId">
						B.record_id = #recordId:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="formatDivCd">
						B.format_div_cd = #formatDivCd:VARCHAR#
					</isNotEmpty>
					<isEmpty prepend="AND" property="formatDivCd">
						B.format_div_cd IN ('1','2')
					</isEmpty>
					AND (B.followup_fin_flag IS NULL OR B.followup_fin_flag='0')
					AND  (EXISTS (SELECT 1 FROM TB_RDFOLDER F WHERE F.record_center_id=B.record_center_id AND F.folder_id=B.folder_id AND F.neo_trans_state = '5')
							OR EXISTS (SELECT 1 FROM TB_RDRECORD R WHERE R.record_center_id=B.record_center_id AND R.folder_id=B.folder_id AND R.neo_trans_state = '5' ))
					ORDER BY record_center_id, work_hist_id DESC
				) C
				WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
			) D
			WHERE D.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
		) E
	</select>
	<!-- 
		장기보존포맷변환 : 변환실패 기록물철NEO 수량
	 -->
	<select id="countPresvFormatNeoFailedMsgFolder" parameterClass="rms.presv.format.domain.PresvFormatNeo" resultClass="java.lang.Long">
		SELECT COUNT(1)
		FROM (
			SELECT B.record_center_id, B.folder_id
			FROM  TB_STWORKHIST B
			<!--cubrid WHERE (B.record_center_id, B.folder_id)
	           IN (
	               SELECT A.record_center_id, A.folder_id-->
			WHERE 
	           EXISTS (
	               SELECT 1
	               FROM TB_RDFOLDER A
	               WHERE A.record_center_id = #recordCenterId:VARCHAR#
				<isNotEmpty prepend="AND" property="folderId">
					A.folder_id = #folderId:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="orgCd">
					A.org_cd = #orgCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty property="creatYyyyFrom">
					<isNotEmpty prepend="AND" property="creatYyyyTo">
						A.creat_yyyy BETWEEN #creatYyyyFrom:VARCHAR# AND #creatYyyyTo:VARCHAR#
					</isNotEmpty>
					<isEmpty property="creatYyyyTo">
						A.creat_yyyy <![CDATA[>=]]> #creatYyyyFrom:VARCHAR#
					</isEmpty>
				</isNotEmpty>
				<isEmpty property="creatYyyyFrom">
					<isNotEmpty property="creatYyyyTo">
						A.creat_yyyy <![CDATA[<=]]> #creatYyyyTo:VARCHAR#
					</isNotEmpty>
				</isEmpty>
				<isNotEmpty property="presvTermCd">
					<isEqual prepend="AND" property="presvTermCheck" compareValue="1">
						A.presv_term_cd <![CDATA[>=]]> #presvTermCd:VARCHAR# 
					</isEqual>
					<isNotEqual prepend="AND" property="presvTermCheck" compareValue="1">
						A.presv_term_cd = #presvTermCd:VARCHAR# 
					</isNotEqual>
				</isNotEmpty>
				AND   A.folder_keep_state_cd IN ('01','04')
				<!--cubrid-->
				AND   A.record_center_id = B.record_center_id
				AND   A.folder_id = B.folder_id
	           )
			AND  B.format_div_cd = '2'
			AND (B.followup_fin_flag IS NULL OR B.followup_fin_flag='0')
			AND  (EXISTS (SELECT 1 FROM TB_RDFOLDER F WHERE F.record_center_id=B.record_center_id AND F.folder_id=B.folder_id AND F.neo_trans_state = '5')
					OR EXISTS (SELECT 1 FROM TB_RDRECORD R WHERE R.record_center_id=B.record_center_id AND R.folder_id=B.folder_id AND R.neo_trans_state = '5' ))
			GROUP BY B.record_center_id, B.folder_id
		) C
	</select>
	<!-- 
		장기보존포맷변환 : 변환실패 기록물건NEO 수량
	 -->
	<select id="countPresvFormatNeoFailedMsgRecord" parameterClass="rms.presv.format.domain.PresvFormatNeo" resultClass="java.lang.Long">
		SELECT COUNT(1)
		FROM (
			SELECT B.record_center_id, B.record_id
			FROM  TB_STWORKHIST B
			<!--cubrid WHERE (B.record_center_id, B.folder_id)
	           IN (
	               SELECT A.record_center_id, A.folder_id-->
			WHERE
	           EXISTS (
	               SELECT 1
	               FROM TB_RDFOLDER A
	               WHERE A.record_center_id = #recordCenterId:VARCHAR#
				<isNotEmpty prepend="AND" property="folderId">
					A.folder_id = #folderId:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="orgCd">
					A.org_cd = #orgCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty property="creatYyyyFrom">
					<isNotEmpty prepend="AND" property="creatYyyyTo">
						A.creat_yyyy BETWEEN #creatYyyyFrom:VARCHAR# AND #creatYyyyTo:VARCHAR#
					</isNotEmpty>
					<isEmpty property="creatYyyyTo">
						A.creat_yyyy <![CDATA[>=]]> #creatYyyyFrom:VARCHAR#
					</isEmpty>
				</isNotEmpty>
				<isEmpty property="creatYyyyFrom">
					<isNotEmpty property="creatYyyyTo">
						A.creat_yyyy <![CDATA[<=]]> #creatYyyyTo:VARCHAR#
					</isNotEmpty>
				</isEmpty>
				<isNotEmpty property="presvTermCd">
					<isEqual prepend="AND" property="presvTermCheck" compareValue="1">
						A.presv_term_cd <![CDATA[>=]]> #presvTermCd:VARCHAR# 
					</isEqual>
					<isNotEqual prepend="AND" property="presvTermCheck" compareValue="1">
						A.presv_term_cd = #presvTermCd:VARCHAR# 
					</isNotEqual>
				</isNotEmpty>
				AND   A.folder_keep_state_cd IN ('01','04')
				<!--cubrid-->
				AND   A.record_center_id = B.record_center_id
				AND   A.folder_id = B.folder_id
	           )
			<isNotEmpty prepend="AND" property="recordId">
				B.record_id = #recordId:VARCHAR#
			</isNotEmpty>
			AND  B.format_div_cd = '1'
			AND (B.followup_fin_flag IS NULL OR B.followup_fin_flag='0')
			AND  (EXISTS (SELECT 1 FROM TB_RDFOLDER F WHERE F.record_center_id=B.record_center_id AND F.folder_id=B.folder_id AND F.neo_trans_state = '5')
					OR EXISTS (SELECT 1 FROM TB_RDRECORD R WHERE R.record_center_id=B.record_center_id AND R.folder_id=B.folder_id AND R.neo_trans_state = '5' ))
			GROUP BY B.record_center_id, B.record_id
		) C
	</select>



	<!-- 
		장기보존포맷변환
		: 생산부서에 대한 포맷변환 요청 - A.1.기록물건 포맷변환요청정보 생성(-:신청) 
	 -->
	<insert id="createPresvFormatNeoOrgReqTransRecordList" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		INSERT INTO TB_STREQTRANS (
			record_center_id, job_id, neo_gubun, neochasu, folder_id, record_id, dest_storage_type, dest_storage_vendor, request_status, erecord_flag
			, request_corp_cd, request_corp_nm, request_org_cd, request_org_nm, request_user_id, request_user_nm, request_user_pos_rank_nm
		)
		(
			SELECT B.record_center_id
				<!--cubrid , TO_CHAR(SYSDATE,'YYYY')||LPAD(TB_STFORMAT_SQ01.NEXTVAL,13,'0') AS job_id-->
				, TO_CHAR(sys_datetime,'YYYY')||LPAD(TB_STFORMAT_SQ01.NEXTVAL,13,'0') AS job_id
				, '2' AS neo_gubun
				, 1 AS neochasu
				, B.folder_id
				, B.record_id
				, #destStorageType:VARCHAR# AS dest_storage_type
				, #destStorageVendor:VARCHAR# AS dest_storage_vendor
				, '-' AS request_status
				, B.erecord_flag
				, (SELECT Z.hupper_org_cd FROM TB_STORG Z WHERE Z.record_center_id = #recordCenterId:VARCHAR# AND Z.org_cd = #requestOrgCd:VARCHAR#) AS request_corp_cd
				, (SELECT Y.org_nm FROM TB_STORG Y, (SELECT Z.record_center_id, Z.hupper_org_cd FROM TB_STORG Z WHERE Z.record_center_id = #recordCenterId:VARCHAR# AND Z.org_cd = #requestOrgCd:VARCHAR#) X WHERE Y.record_center_id=X.record_center_id AND Y.org_cd=X.hupper_org_cd) AS request_corp_nm
				, #requestOrgCd:VARCHAR#
				, (SELECT Z.full_org_nm FROM TB_STORG Z WHERE Z.record_center_id = #recordCenterId:VARCHAR# AND Z.org_cd = #requestOrgCd:VARCHAR#) AS request_org_nm
				, #requestUserId:VARCHAR#
				, #requestUserNm:VARCHAR#
				, (SELECT (CASE WHEN pos IS NULL AND rank IS NULL THEN ''
								WHEN pos IS NULL AND rank IS NOT NULL THEN rank
								WHEN pos IS NOT NULL AND rank IS NULL THEN pos
								ELSE pos||'/'||rank
							END)
					FROM  TB_STUSER
					WHERE user_id = #requestUserId:VARCHAR#) AS user_pos_rank
	          FROM  TB_RDRECORD B
	          <!--cubrid WHERE (B.record_center_id, B.folder_id)
	          IN (  SELECT record_center_id, folder_id   -->
	          WHERE 
	          EXISTS (  SELECT 1
	                FROM  TB_RDFOLDER A
	                WHERE A.record_center_id = #recordCenterId:VARCHAR#
	                AND   A.org_cd = #orgCd:VARCHAR#
	                AND   A.folder_keep_state_cd IN ('01','04')
			<!--cubrid-->
			AND   record_center_id = B.record_center_id
			AND   folder_id = B.folder_id	
					<isNotEmpty prepend="AND" property="creatYyyyFrom">
						<isNotEmpty property="creatYyyyTo">
							(A.creat_yyyy BETWEEN #creatYyyyFrom:VARCHAR# AND #creatYyyyTo:VARCHAR#)
						</isNotEmpty>
						<isEmpty property="creatYyyyTo">
							A.creat_yyyy <![CDATA[>=]]> #creatYyyyFrom:VARCHAR#
						</isEmpty>
					</isNotEmpty>
					<isEmpty prepend="AND" property="creatYyyyFrom">
						<isNotEmpty property="creatYyyyTo">
							A.creat_yyyy <![CDATA[<=]]> #creatYyyyTo:VARCHAR#
						</isNotEmpty>
					</isEmpty>
					<isNotEmpty property="presvTermCd">
						<isEqual prepend="AND" property="presvTermCheck" compareValue="1">
							A.presv_term_cd <![CDATA[>=]]> #presvTermCd:VARCHAR#
						</isEqual>
						<isNotEqual prepend="AND" property="presvTermCheck" compareValue="1">
							A.presv_term_cd = #presvTermCd:VARCHAR#
						</isNotEqual>
					</isNotEmpty>
	              )
	          AND   (B.neo_trans_state IS NULL OR B.neo_trans_state='0')
         )
	</insert>
	<!-- 
		장기보존포맷변환
		: 생산부서에 대한 포맷변환 요청 - A.2.기록물철 포맷변환요청정보 생성(-:신청) 
	 -->
	<insert id="createPresvFormatNeoOrgReqTransFolderList" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		INSERT INTO TB_STREQTRANS (
			record_center_id, job_id, neo_gubun, neochasu, folder_id, record_id, dest_storage_type, dest_storage_vendor, request_status, erecord_flag
			, request_corp_cd, request_corp_nm, request_org_cd, request_org_nm, request_user_id, request_user_nm, request_user_pos_rank_nm
		)
		(
			SELECT A.record_center_id
				, TO_CHAR(SYSDATE,'YYYY')||LPAD(TB_STFORMAT_SQ01.NEXTVAL,13,'0') AS job_id
				, '1' AS neo_gubun
				, 1 AS neochasu
				, A.folder_id
				, '' AS record_id
				, #destStorageType:VARCHAR# AS dest_storage_type
				, NVL(#destStorageVendor:VARCHAR#, '01') AS dest_storage_vendor
				, '-' AS request_status
				, A.erecord_flag
				, (SELECT Z.hupper_org_cd FROM TB_STORG Z WHERE Z.record_center_id = #recordCenterId:VARCHAR# AND Z.org_cd = #requestOrgCd:VARCHAR#) AS request_corp_cd
				, (SELECT Y.org_nm FROM TB_STORG Y, (SELECT Z.record_center_id, Z.hupper_org_cd FROM TB_STORG Z WHERE Z.record_center_id = #recordCenterId:VARCHAR# AND Z.org_cd = #requestOrgCd:VARCHAR#) X WHERE Y.record_center_id=X.record_center_id AND Y.org_cd=X.hupper_org_cd) AS request_corp_nm
				, #requestOrgCd:VARCHAR#
				, (SELECT Z.full_org_nm FROM TB_STORG Z WHERE Z.record_center_id = #recordCenterId:VARCHAR# AND Z.org_cd = #requestOrgCd:VARCHAR#) AS request_org_nm
				, #requestUserId:VARCHAR#
				, #requestUserNm:VARCHAR#
				, (SELECT (CASE WHEN pos IS NULL AND rank IS NULL THEN ''
								WHEN pos IS NULL AND rank IS NOT NULL THEN rank
								WHEN pos IS NOT NULL AND rank IS NULL THEN pos
								ELSE pos||'/'||rank
							END)
					FROM  TB_STUSER
					WHERE user_id = #requestUserId:VARCHAR#) AS user_pos_rank
			FROM  TB_RDFOLDER A
			WHERE A.record_center_id = #recordCenterId:VARCHAR#
			AND   A.org_cd = #orgCd:VARCHAR#
			AND   A.folder_keep_state_cd IN ('01','04')
			<isNotEmpty prepend="AND" property="creatYyyyFrom">
				<isNotEmpty property="creatYyyyTo">
					(A.creat_yyyy BETWEEN #creatYyyyFrom:VARCHAR# AND #creatYyyyTo:VARCHAR#)
				</isNotEmpty>
				<isEmpty property="creatYyyyTo">
					A.creat_yyyy <![CDATA[>=]]> #creatYyyyFrom:VARCHAR#
				</isEmpty>
			</isNotEmpty>
			<isEmpty prepend="AND" property="creatYyyyFrom">
				<isNotEmpty property="creatYyyyTo">
					A.creat_yyyy <![CDATA[<=]]> #creatYyyyTo:VARCHAR#
				</isNotEmpty>
			</isEmpty>
			<isNotEmpty property="presvTermCd">
				<isEqual prepend="AND" property="presvTermCheck" compareValue="1">
					A.presv_term_cd <![CDATA[>=]]> #presvTermCd:VARCHAR#
				</isEqual>
				<isNotEqual prepend="AND" property="presvTermCheck" compareValue="1">
					A.presv_term_cd = #presvTermCd:VARCHAR#
				</isNotEqual>
			</isNotEmpty>
			AND   (A.neo_trans_state IS NULL OR A.neo_trans_state='0')
		)
	</insert>

	<!-- 
		장기보존포맷변환
		: 생산부서에 대한 포맷변환 요청 - B.1.기록물건 변환상태 갱신 (1:변환대기)
	 -->
	<insert id="updatePresvFormatNeoOrgWaitToRecord" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		UPDATE TB_RDRECORD B
		SET   B.neo_trans_state = '1'
		<!--cubrid WHERE (B.record_center_id, B.folder_id)
		IN (SELECT A.record_center_id, A.folder_id-->
		WHERE 
		EXISTS (SELECT 1
			FROM  TB_RDFOLDER A
			WHERE A.record_center_id = #recordCenterId:VARCHAR#
			AND   A.org_cd = #orgCd:VARCHAR#
			AND   A.folder_keep_state_cd IN ('01','04')
			<!--cubrid-->
			AND   A.record_center_id = B.record_center_id
			AND   A.folder_id = B.folder_id
			<isNotEmpty prepend="AND" property="creatYyyyFrom">
				<isNotEmpty property="creatYyyyTo">
					(A.creat_yyyy BETWEEN #creatYyyyFrom:VARCHAR# AND #creatYyyyTo:VARCHAR#)
				</isNotEmpty>
				<isEmpty property="creatYyyyTo">
					A.creat_yyyy <![CDATA[>=]]> #creatYyyyFrom:VARCHAR#
				</isEmpty>
			</isNotEmpty>
			<isEmpty prepend="AND" property="creatYyyyFrom">
				<isNotEmpty property="creatYyyyTo">
					A.creat_yyyy <![CDATA[<=]]> #creatYyyyTo:VARCHAR#
				</isNotEmpty>
			</isEmpty>
			<isNotEmpty property="presvTermCd">
				<isEqual prepend="AND" property="presvTermCheck" compareValue="1">
					A.presv_term_cd <![CDATA[>=]]> #presvTermCd:VARCHAR#
				</isEqual>
				<isNotEqual prepend="AND" property="presvTermCheck" compareValue="1">
					A.presv_term_cd = #presvTermCd:VARCHAR#
				</isNotEqual>
			</isNotEmpty>
		)
		AND   (B.neo_trans_state IS NULL OR B.neo_trans_state='0')
	</insert>
	<!-- 
		장기보존포맷변환
		: 생산부서에 대한 포맷변환 요청 - B.2.기록물철 변환상태 갱신 (1:변환대기)
	 -->
	<insert id="createPresvFormatNeoOrgWaitToFolder" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		UPDATE TB_RDFOLDER A
		SET   A.neo_trans_state = '1'
			, A.record_neo_trans_state = ( CASE WHEN NOT EXISTS (SELECT 1 FROM TB_RDRECORD B WHERE B.record_center_id=A.record_center_id AND B.folder_id=A.folder_id AND (B.neo_trans_state IS NULL OR B.neo_trans_state IN ('0','1','2','3','5'))) THEN '4'
												WHEN NOT EXISTS (SELECT 1 FROM TB_RDRECORD B WHERE B.record_center_id=A.record_center_id AND B.folder_id=A.folder_id AND (B.neo_trans_state IS NULL OR B.neo_trans_state IN ('0','1','2','3'))) THEN '5'
												WHEN NOT EXISTS (SELECT 1 FROM TB_RDRECORD B WHERE B.record_center_id=A.record_center_id AND B.folder_id=A.folder_id AND B.neo_trans_state IN ('1','2','3')) THEN '0'
												ELSE '1' END )
		WHERE A.record_center_id = #recordCenterId:VARCHAR#
		AND   A.org_cd = #orgCd:VARCHAR#
		AND   A.folder_keep_state_cd IN ('01','04')
		<isNotEmpty prepend="AND" property="creatYyyyFrom">
			<isNotEmpty property="creatYyyyTo">
				(A.creat_yyyy BETWEEN #creatYyyyFrom:VARCHAR# AND #creatYyyyTo:VARCHAR#)
			</isNotEmpty>
			<isEmpty property="creatYyyyTo">
				A.creat_yyyy <![CDATA[>=]]> #creatYyyyFrom:VARCHAR#
			</isEmpty>
		</isNotEmpty>
		<isEmpty prepend="AND" property="creatYyyyFrom">
			<isNotEmpty property="creatYyyyTo">
				A.creat_yyyy <![CDATA[<=]]> #creatYyyyTo:VARCHAR#
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty property="presvTermCd">
			<isEqual prepend="AND" property="presvTermCheck" compareValue="1">
				A.presv_term_cd <![CDATA[>=]]> #presvTermCd:VARCHAR#
			</isEqual>
			<isNotEqual prepend="AND" property="presvTermCheck" compareValue="1">
				A.presv_term_cd = #presvTermCd:VARCHAR#
			</isNotEqual>
		</isNotEmpty>
		AND   (A.neo_trans_state IS NULL OR A.neo_trans_state='0')
	</insert>

	<!-- 
		장기보존포맷변환
		: 생산부서에 대한 포맷변환 취소요청 - C.1.기록물철/기록물건 포맷변환요청정보 갱신 (E:취소) 
	 -->
	<update id="updatePresvFormatNeoOrgClearReqTransList" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		UPDATE TB_STREQTRANS Z
		SET   request_status = 'E'
			, request_start_time = SYSDATE
		<!--cubridWHERE (record_center_id, folder_id)
		IN (
			SELECT A.record_center_id, A.folder_id-->
		WHERE 
		EXISTS (
			SELECT 1
			FROM  TB_RDFOLDER A
			WHERE A.record_center_id = #recordCenterId:VARCHAR#
			AND   A.org_cd = #orgCd:VARCHAR#
			AND   A.folder_keep_state_cd IN ('01','04')
			<!--cubrid-->
			AND   A.record_center_id = Z.record_center_id
			AND   A.folder_id = Z.folder_id
			<isNotEmpty prepend="AND" property="creatYyyyFrom">
				<isNotEmpty property="creatYyyyTo">
					(A.creat_yyyy BETWEEN #creatYyyyFrom:VARCHAR# AND #creatYyyyTo:VARCHAR#)
				</isNotEmpty>
				<isEmpty property="creatYyyyTo">
					A.creat_yyyy <![CDATA[>=]]> #creatYyyyFrom:VARCHAR#
				</isEmpty>
			</isNotEmpty>
			<isEmpty prepend="AND" property="creatYyyyFrom">
				<isNotEmpty property="creatYyyyTo">
					A.creat_yyyy <![CDATA[<=]]> #creatYyyyTo:VARCHAR#
				</isNotEmpty>
			</isEmpty>
			<isNotEmpty property="presvTermCd">
				<isEqual prepend="AND" property="presvTermCheck" compareValue="1">
					A.presv_term_cd <![CDATA[>=]]> #presvTermCd:VARCHAR#
				</isEqual>
				<isNotEqual prepend="AND" property="presvTermCheck" compareValue="1">
					A.presv_term_cd = #presvTermCd:VARCHAR#
				</isNotEqual>
			</isNotEmpty>
			<isEqual property="clearIngFlag" compareValue="1">
				<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
					A.neo_trans_state IN ('1', '2', '3', '5')
				</isEqual>
				<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
					A.neo_trans_state IN ('1', '2', '3')
				</isNotEqual>
			</isEqual>
			<isNotEqual property="clearIngFlag" compareValue="1">
				<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
					A.neo_trans_state = '5'
				</isEqual>
				<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
					0 = 1
				</isNotEqual>
			</isNotEqual>
		)
		AND   neo_gubun IN ('1','2')
		AND   request_status IN ('-','A','B')
	</update>
	
	<!-- 
		장기보존포맷변환
		: 생산부서에 대한 포맷변환 취소요청 - D.1.포맷변환작업이력 테이블의 기록물건 변환상태 삭제 (E:취소) 
	 -->
	<delete id="deletePresvFormatNeoOrgClearRecordToWorkHist" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		DELETE FROM TB_STWORKHIST Z
		<!--cubrid WHERE (record_center_id, folder_id, record_id)
		IN (
			SELECT B.record_center_id, B.folder_id, B.record_id-->
		WHERE 
		EXISTS (
			SELECT 1
			FROM  TB_RDRECORD B
			<!--cubrid WHERE (B.record_center_id, B.folder_id)
			IN (
				SELECT A.record_center_id, A.folder_id-->
			WHERE 
			EXISTS (
				SELECT 1
				FROM  TB_RDFOLDER A
				WHERE A.record_center_id = #recordCenterId:VARCHAR#
				AND   A.org_cd = #orgCd:VARCHAR#
				AND   A.folder_keep_state_cd IN ('01','04')
				<!--cubrid-->
				AND   A.record_center_id = B.record_center_id
				AND   A.folder_id = B.folder_id
				<isNotEmpty prepend="AND" property="creatYyyyFrom">
					<isNotEmpty property="creatYyyyTo">
						(A.creat_yyyy BETWEEN #creatYyyyFrom:VARCHAR# AND #creatYyyyTo:VARCHAR#)
					</isNotEmpty>
					<isEmpty property="creatYyyyTo">
						A.creat_yyyy <![CDATA[>=]]> #creatYyyyFrom:VARCHAR#
					</isEmpty>
				</isNotEmpty>
				<isEmpty prepend="AND" property="creatYyyyFrom">
					<isNotEmpty property="creatYyyyTo">
						A.creat_yyyy <![CDATA[<=]]> #creatYyyyTo:VARCHAR#
					</isNotEmpty>
				</isEmpty>
				<isNotEmpty property="presvTermCd">
					<isEqual prepend="AND" property="presvTermCheck" compareValue="1">
						A.presv_term_cd <![CDATA[>=]]> #presvTermCd:VARCHAR#
					</isEqual>
					<isNotEqual prepend="AND" property="presvTermCheck" compareValue="1">
						A.presv_term_cd = #presvTermCd:VARCHAR#
					</isNotEqual>
				</isNotEmpty>
			)
			<isEqual property="clearIngFlag" compareValue="1">
				<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
					B.neo_trans_state IN ('1', '2', '3', '5')
				</isEqual>
				<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
					B.neo_trans_state IN ('1', '2', '3')
				</isNotEqual>
			</isEqual>
			<isNotEqual property="clearIngFlag" compareValue="1">
				<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
					B.neo_trans_state = '5'
				</isEqual>
				<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
					0 = 1
				</isNotEqual>
			</isNotEqual>
			<!--cubrid-->
			AND B.record_center_id = Z.record_center_id
			AND B.folder_id	= Z.folder_id
			AND B.record_id = Z.record_id
		)
		AND   format_div_cd = '1'
		AND   (followup_div_cd IS NULL OR followup_div_cd IN ('0','1'))
	</delete>
	<!-- 
		장기보존포맷변환
		: 생산부서에 대한 포맷변환 취소요청 - D.2.건원문 테이블의 기록물건 변환상태 갱신 (0:미변환) 
	 -->
	<update id="updatePresvFormatNeoOrgClearRecordToRecordOrign" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		UPDATE TB_STRECORDORIGN Z
		SET   neo_trans_state = '0'
		<!--cubrid WHERE (record_center_id, record_id)
		IN (
			SELECT B.record_center_id, B.record_id-->
		WHERE 
		EXISTS (
			SELECT 1
			FROM  TB_RDRECORD B
			<!--cubrid WHERE (B.record_center_id, B.folder_id)
			IN (
				SELECT A.record_center_id, A.folder_id-->
			WHERE 
			EXISTS (
				SELECT 1
				FROM  TB_RDFOLDER A
				WHERE A.record_center_id = #recordCenterId:VARCHAR#
				AND   A.org_cd = #orgCd:VARCHAR#
				AND   A.folder_keep_state_cd IN ('01','04')
				<!--cubrid-->
				AND   A.record_center_id = B.record_center_id
				AND   A.folder_id = B.folder_id
				<isNotEmpty prepend="AND" property="creatYyyyFrom">
					<isNotEmpty property="creatYyyyTo">
						(A.creat_yyyy BETWEEN #creatYyyyFrom:VARCHAR# AND #creatYyyyTo:VARCHAR#)
					</isNotEmpty>
					<isEmpty property="creatYyyyTo">
						A.creat_yyyy <![CDATA[>=]]> #creatYyyyFrom:VARCHAR#
					</isEmpty>
				</isNotEmpty>
				<isEmpty prepend="AND" property="creatYyyyFrom">
					<isNotEmpty property="creatYyyyTo">
						A.creat_yyyy <![CDATA[<=]]> #creatYyyyTo:VARCHAR#
					</isNotEmpty>
				</isEmpty>
				<isNotEmpty property="presvTermCd">
					<isEqual prepend="AND" property="presvTermCheck" compareValue="1">
						A.presv_term_cd <![CDATA[>=]]> #presvTermCd:VARCHAR#
					</isEqual>
					<isNotEqual prepend="AND" property="presvTermCheck" compareValue="1">
						A.presv_term_cd = #presvTermCd:VARCHAR#
					</isNotEqual>
				</isNotEmpty>
			)
			<isEqual property="clearIngFlag" compareValue="1">
				<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
					B.neo_trans_state IN ('1', '2', '3', '5')
				</isEqual>
				<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
					B.neo_trans_state IN ('1', '2', '3')
				</isNotEqual>
			</isEqual>
			<isNotEqual property="clearIngFlag" compareValue="1">
				<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
					B.neo_trans_state = '5'
				</isEqual>
				<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
					0 = 1
				</isNotEqual>
			</isNotEqual>
			<!--cubrid-->
			AND B.record_center_id = Z.record_center_id
			AND B.record_id = Z.record_id
		)
	</update>
	<!-- 
		장기보존포맷변환
		: 생산부서에 대한 포맷변환 취소요청 - D.3.기록물철 테이블의 기록물건 변환상태 갱신 (0:미변환) 
	 -->
	<update id="updatePresvFormatNeoOrgClearRecordToFolder" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		UPDATE TB_RDFOLDER Z
		SET   record_neo_trans_state = '0'
		<!--cubrid
		WHERE (record_center_id, folder_id)
		IN (
			SELECT B.record_center_id, B.folder_id-->
		WHERE EXISTS(
			SELECT 1
			FROM  TB_RDRECORD B
			<!--cubrid
			WHERE (B.record_center_id, B.folder_id)
			IN (
				SELECT A.record_center_id, A.folder_id-->
			WHERE EXISTS(
				SELECT 1
				FROM  TB_RDFOLDER A
				WHERE A.record_center_id = #recordCenterId:VARCHAR#
				AND   A.org_cd = #orgCd:VARCHAR#
				AND   A.folder_keep_state_cd IN ('01','04')
                                <!--cubrid-->
				AND A.record_center_id = B.record_center_id
				AND A.folder_id = B.folder_id
				<isNotEmpty prepend="AND" property="creatYyyyFrom">
					<isNotEmpty property="creatYyyyTo">
						(A.creat_yyyy BETWEEN #creatYyyyFrom:VARCHAR# AND #creatYyyyTo:VARCHAR#)
					</isNotEmpty>
					<isEmpty property="creatYyyyTo">
						A.creat_yyyy <![CDATA[>=]]> #creatYyyyFrom:VARCHAR#
					</isEmpty>
				</isNotEmpty>
				<isEmpty prepend="AND" property="creatYyyyFrom">
					<isNotEmpty property="creatYyyyTo">
						A.creat_yyyy <![CDATA[<=]]> #creatYyyyTo:VARCHAR#
					</isNotEmpty>
				</isEmpty>
				<isNotEmpty property="presvTermCd">
					<isEqual prepend="AND" property="presvTermCheck" compareValue="1">
						A.presv_term_cd <![CDATA[>=]]> #presvTermCd:VARCHAR#
					</isEqual>
					<isNotEqual prepend="AND" property="presvTermCheck" compareValue="1">
						A.presv_term_cd = #presvTermCd:VARCHAR#
					</isNotEqual>
				</isNotEmpty>
			)
			<isEqual property="clearIngFlag" compareValue="1">
				<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
					B.neo_trans_state IN ('1', '2', '3', '5')
				</isEqual>
				<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
					B.neo_trans_state IN ('1', '2', '3')
				</isNotEqual>
			</isEqual>
			<isNotEqual property="clearIngFlag" compareValue="1">
				<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
					B.neo_trans_state = '5'
				</isEqual>
				<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
					0 = 1
				</isNotEqual>
			</isNotEqual>
		<!--cubrid-->
		and B.record_center_id=Z.record_center_id
		and B.folder_id=Z.folder_id
		)
	</update>
	<!-- 
		장기보존포맷변환
		: 생산부서에 대한 포맷변환 취소요청 - D.4.기록물건 테이블의 기록물건 변환상태 갱신 (0:미변환) 
	 -->
	<update id="updatePresvFormatNeoOrgClearRecordToRecord" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		UPDATE TB_RDRECORD B
		SET   B.neo_trans_state = '0'
		<!--cubrid
		WHERE (B.record_center_id, B.folder_id)
		IN (
			SELECT A.record_center_id, A.folder_id-->
		WHERE EXISTS(
			SELECT 1
			FROM  TB_RDFOLDER A
			WHERE A.record_center_id = #recordCenterId:VARCHAR#
			AND   A.org_cd = #orgCd:VARCHAR#
			AND   A.folder_keep_state_cd IN ('01','04')
			<!--cubrid-->
			AND B.record_center_id = A.record_center_id
			AND B.folder_id = A.folder_id

			<isNotEmpty prepend="AND" property="creatYyyyFrom">
				<isNotEmpty property="creatYyyyTo">
					(A.creat_yyyy BETWEEN #creatYyyyFrom:VARCHAR# AND #creatYyyyTo:VARCHAR#)
				</isNotEmpty>
				<isEmpty property="creatYyyyTo">
					A.creat_yyyy <![CDATA[>=]]> #creatYyyyFrom:VARCHAR#
				</isEmpty>
			</isNotEmpty>
			<isEmpty prepend="AND" property="creatYyyyFrom">
				<isNotEmpty property="creatYyyyTo">
					A.creat_yyyy <![CDATA[<=]]> #creatYyyyTo:VARCHAR#
				</isNotEmpty>
			</isEmpty>
			<isNotEmpty property="presvTermCd">
				<isEqual prepend="AND" property="presvTermCheck" compareValue="1">
					A.presv_term_cd <![CDATA[>=]]> #presvTermCd:VARCHAR#
				</isEqual>
				<isNotEqual prepend="AND" property="presvTermCheck" compareValue="1">
					A.presv_term_cd = #presvTermCd:VARCHAR#
				</isNotEqual>
			</isNotEmpty>
		)
		<isEqual property="clearIngFlag" compareValue="1">
			<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
				B.neo_trans_state IN ('1', '2', '3', '5')
			</isEqual>
			<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
				B.neo_trans_state IN ('1', '2', '3')
			</isNotEqual>
		</isEqual>
		<isNotEqual property="clearIngFlag" compareValue="1">
			<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
				B.neo_trans_state = '5'
			</isEqual>
			<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
				0 = 1
			</isNotEqual>
		</isNotEqual>
	</update>
	<!-- 
		장기보존포맷변환
		: 생산부서에 대한 포맷변환 취소요청 - D.5.포맷변환작업이력 테이블의 기록물철 변환상태 삭제 
	 -->
	<delete id="updatePresvFormatNeoOrgClearFolderToWorkHist" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		DELETE FROM TB_STWORKHIST Z
		<!--cubrid
		WHERE (record_center_id, folder_id)
		IN (
			SELECT A.record_center_id, A.folder_id-->
		WHERE EXISTS (
			SELECT 1
			FROM  TB_RDFOLDER A
			WHERE A.record_center_id = #recordCenterId:VARCHAR#
			AND   A.org_cd = #orgCd:VARCHAR#
			AND   A.folder_keep_state_cd IN ('01','04')
			AND A.record_center_id = Z.record_center_id
			AND A.folder_id = Z.folder_id

			<isNotEmpty prepend="AND" property="creatYyyyFrom">
				<isNotEmpty property="creatYyyyTo">
					(A.creat_yyyy BETWEEN #creatYyyyFrom:VARCHAR# AND #creatYyyyTo:VARCHAR#)
				</isNotEmpty>
				<isEmpty property="creatYyyyTo">
					A.creat_yyyy <![CDATA[>=]]> #creatYyyyFrom:VARCHAR#
				</isEmpty>
			</isNotEmpty>
			<isEmpty prepend="AND" property="creatYyyyFrom">
				<isNotEmpty property="creatYyyyTo">
					A.creat_yyyy <![CDATA[<=]]> #creatYyyyTo:VARCHAR#
				</isNotEmpty>
			</isEmpty>
			<isNotEmpty property="presvTermCd">
				<isEqual prepend="AND" property="presvTermCheck" compareValue="1">
					A.presv_term_cd <![CDATA[>=]]> #presvTermCd:VARCHAR#
				</isEqual>
				<isNotEqual prepend="AND" property="presvTermCheck" compareValue="1">
					A.presv_term_cd = #presvTermCd:VARCHAR#
				</isNotEqual>
			</isNotEmpty>
			<isEqual property="clearIngFlag" compareValue="1">
				<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
					A.neo_trans_state IN ('1', '2', '3', '5')
				</isEqual>
				<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
					A.neo_trans_state IN ('1', '2', '3')
				</isNotEqual>
			</isEqual>
			<isNotEqual property="clearIngFlag" compareValue="1">
				<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
					A.neo_trans_state = '5'
				</isEqual>
				<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
					0 = 1
				</isNotEqual>
			</isNotEqual>
		)
		AND   format_div_cd = '2'
		AND   (followup_div_cd IS NULL OR followup_div_cd IN ('0','1'))
	</delete>
	<!-- 
		장기보존포맷변환
		: 생산부서에 대한 포맷변환 취소요청 - D.6.기록물철 테이블의 기록물철 변환상태 갱신 (0:미변환) 
	 -->
	<update id="updatePresvFormatNeoOrgClearFolderToFolder" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		UPDATE TB_RDFOLDER A
		SET   A.neo_trans_state = '0'
		WHERE A.record_center_id = #recordCenterId:VARCHAR#
		AND   A.org_cd = #orgCd:VARCHAR#
		AND   A.folder_keep_state_cd IN ('01','04')
		<isNotEmpty prepend="AND" property="creatYyyyFrom">
			<isNotEmpty property="creatYyyyTo">
				(A.creat_yyyy BETWEEN #creatYyyyFrom:VARCHAR# AND #creatYyyyTo:VARCHAR#)
			</isNotEmpty>
			<isEmpty property="creatYyyyTo">
				A.creat_yyyy <![CDATA[>=]]> #creatYyyyFrom:VARCHAR#
			</isEmpty>
		</isNotEmpty>
		<isEmpty prepend="AND" property="creatYyyyFrom">
			<isNotEmpty property="creatYyyyTo">
				A.creat_yyyy <![CDATA[<=]]> #creatYyyyTo:VARCHAR#
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty property="presvTermCd">
			<isEqual prepend="AND" property="presvTermCheck" compareValue="1">
				A.presv_term_cd <![CDATA[>=]]> #presvTermCd:VARCHAR#
			</isEqual>
			<isNotEqual prepend="AND" property="presvTermCheck" compareValue="1">
				A.presv_term_cd = #presvTermCd:VARCHAR#
			</isNotEqual>
		</isNotEmpty>
		<isEqual property="clearIngFlag" compareValue="1">
			<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
				A.neo_trans_state IN ('1', '2', '3', '5')
			</isEqual>
			<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
				A.neo_trans_state IN ('1', '2', '3')
			</isNotEqual>
		</isEqual>
		<isNotEqual property="clearIngFlag" compareValue="1">
			<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
				A.neo_trans_state = '5'
			</isEqual>
			<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
				0 = 1
			</isNotEqual>
		</isNotEqual>
	</update>
	




	<!-- 
		장기보존포맷변환
		: 기록물철에 대한 포맷변환 요청 - A.1.기록물건 포맷변환요청정보 생성(-:신청) 
	 -->
	<insert id="createPresvFormatNeoFolderReqTransRecordList" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		INSERT INTO TB_STREQTRANS (
			record_center_id, job_id, neo_gubun, neochasu, folder_id, record_id, dest_storage_type, dest_storage_vendor, request_status, erecord_flag
			, request_corp_cd, request_corp_nm, request_org_cd, request_org_nm, request_user_id, request_user_nm, request_user_pos_rank_nm
		)
		(
			SELECT B.record_center_id
				, TO_CHAR(SYSDATE,'YYYY')||LPAD(TB_STFORMAT_SQ01.NEXTVAL,13,'0') AS job_id
				, '2' AS neo_gubun
				, 1 AS neochasu
				, B.folder_id
				, B.record_id
				, #destStorageType:VARCHAR# AS dest_storage_type
				, #destStorageVendor:VARCHAR# AS dest_storage_vendor
				, '-' AS request_status
				, B.erecord_flag
				, (SELECT Z.hupper_org_cd FROM TB_STORG Z WHERE Z.record_center_id = #recordCenterId:VARCHAR# AND Z.org_cd = #requestOrgCd:VARCHAR#) AS request_corp_cd
				, (SELECT Y.org_nm FROM TB_STORG Y, (SELECT Z.record_center_id, Z.hupper_org_cd FROM TB_STORG Z WHERE Z.record_center_id = #recordCenterId:VARCHAR# AND Z.org_cd = #requestOrgCd:VARCHAR#) X WHERE Y.record_center_id=X.record_center_id AND Y.org_cd=X.hupper_org_cd) AS request_corp_nm
				, #requestOrgCd:VARCHAR#
				, (SELECT Z.full_org_nm FROM TB_STORG Z WHERE Z.record_center_id = #recordCenterId:VARCHAR# AND Z.org_cd = #requestOrgCd:VARCHAR#) AS request_org_nm
				, #requestUserId:VARCHAR#
				, #requestUserNm:VARCHAR#
				, (SELECT (CASE WHEN pos IS NULL AND rank IS NULL THEN ''
								WHEN pos IS NULL AND rank IS NOT NULL THEN rank
								WHEN pos IS NOT NULL AND rank IS NULL THEN pos
								ELSE pos||'/'||rank
							END)
					FROM  TB_STUSER
					WHERE user_id = #requestUserId:VARCHAR#) AS user_pos_rank
			FROM  TB_RDRECORD B
			<!-- cubrid
			WHERE (B.record_center_id, B.folder_id)
			IN (
				SELECT record_center_id, folder_id-->
			WHERE EXISTS(
				SELECT 1   
				FROM  TB_RDFOLDER A
				WHERE A.record_center_id = #recordCenterId:VARCHAR#
				AND   A.folder_id = #folderId:VARCHAR#
                                <!--cubrid-->
				AND record_center_id = B.record_center_id
				AND folder_id = B.folder_id
			)
			AND   (B.neo_trans_state IS NULL OR B.neo_trans_state='0')
         )
	</insert>
	<!-- 
		장기보존포맷변환
		: 기록물철에 대한 포맷변환 요청 - A.2.기록물철 포맷변환요청정보 생성(-:신청) 
	 -->
	<insert id="createPresvFormatNeoFolderReqTransFolderList" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		INSERT INTO TB_STREQTRANS (
			record_center_id, job_id, neo_gubun, neochasu, folder_id, record_id, dest_storage_type, dest_storage_vendor, request_status, erecord_flag
			, request_corp_cd, request_corp_nm, request_org_cd, request_org_nm, request_user_id, request_user_nm, request_user_pos_rank_nm
		)
		(
			SELECT A.record_center_id
				, TO_CHAR(SYSDATE,'YYYY')||LPAD(TB_STFORMAT_SQ01.NEXTVAL,13,'0') AS job_id
				, '1' AS neo_gubun
				, 1 AS neochasu
				, A.folder_id
				, '' AS record_id
				, #destStorageType:VARCHAR# AS dest_storage_type
				, #destStorageVendor:VARCHAR# AS dest_storage_vendor
				, '-' AS request_status
				, A.erecord_flag
				, (SELECT Z.hupper_org_cd FROM TB_STORG Z WHERE Z.record_center_id = #recordCenterId:VARCHAR# AND Z.org_cd = #requestOrgCd:VARCHAR#) AS request_corp_cd
				, (SELECT Y.org_nm FROM TB_STORG Y, (SELECT Z.record_center_id, Z.hupper_org_cd FROM TB_STORG Z WHERE Z.record_center_id = #recordCenterId:VARCHAR# AND Z.org_cd = #requestOrgCd:VARCHAR#) X WHERE Y.record_center_id=X.record_center_id AND Y.org_cd=X.hupper_org_cd) AS request_corp_nm
				, #requestOrgCd:VARCHAR#
				, (SELECT Z.full_org_nm FROM TB_STORG Z WHERE Z.record_center_id = #recordCenterId:VARCHAR# AND Z.org_cd = #requestOrgCd:VARCHAR#) AS request_org_nm
				, #requestUserId:VARCHAR#
				, #requestUserNm:VARCHAR#
				, (SELECT (CASE WHEN pos IS NULL AND rank IS NULL THEN ''
								WHEN pos IS NULL AND rank IS NOT NULL THEN rank
								WHEN pos IS NOT NULL AND rank IS NULL THEN pos
								ELSE pos||'/'||rank
							END)
					FROM  TB_STUSER
					WHERE user_id = #requestUserId:VARCHAR#) AS user_pos_rank
			FROM  TB_RDFOLDER A
			WHERE A.record_center_id = #recordCenterId:VARCHAR#
			AND   A.folder_id = #folderId:VARCHAR#
			AND   (A.neo_trans_state IS NULL OR A.neo_trans_state='0')
		)
	</insert>

	<!-- 
		장기보존포맷변환
		: 기록물철에 대한 포맷변환 요청 - B.1.기록물건 변환상태 갱신 (1:변환대기)
	 -->
	<insert id="updatePresvFormatNeoFolderWaitToRecord" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		UPDATE TB_RDRECORD B
		SET   B.neo_trans_state = '1'
		<!--cubrid
		WHERE (B.record_center_id, B.folder_id)
		IN (
			SELECT A.record_center_id, A.folder_id-->
		WHERE EXISTS (
			SELECT 1
			FROM  TB_RDFOLDER A
			WHERE A.record_center_id = #recordCenterId:VARCHAR#
			AND   A.folder_id = #folderId:VARCHAR#
			AND B.record_center_id = A.record_center_id
			AND B.folder_id = A.folder_id
		)
		AND   (B.neo_trans_state IS NULL OR B.neo_trans_state='0')
	</insert>
	<!-- 
		장기보존포맷변환
		: 기록물철에 대한 포맷변환 요청 - B.2.기록물철 변환상태 갱신 (1:변환대기)
	 -->
	<update id="updatePresvFormatNeoFolderWaitToFolder" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		UPDATE TB_RDFOLDER A
		SET   A.neo_trans_state = '1'
			, A.record_neo_trans_state = ( CASE WHEN NOT EXISTS (SELECT 1 FROM TB_RDRECORD B WHERE B.record_center_id=A.record_center_id AND B.folder_id=A.folder_id AND (B.neo_trans_state IS NULL OR B.neo_trans_state IN ('0','1','2','3','5'))) THEN '4'
												WHEN NOT EXISTS (SELECT 1 FROM TB_RDRECORD B WHERE B.record_center_id=A.record_center_id AND B.folder_id=A.folder_id AND (B.neo_trans_state IS NULL OR B.neo_trans_state IN ('0','1','2','3'))) THEN '5'
												WHEN NOT EXISTS (SELECT 1 FROM TB_RDRECORD B WHERE B.record_center_id=A.record_center_id AND B.folder_id=A.folder_id AND B.neo_trans_state IN ('1','2','3')) THEN '0'
												ELSE '1' END )
		WHERE A.record_center_id = #recordCenterId:VARCHAR#
		AND   A.folder_id = #folderId:VARCHAR#
		AND   (A.neo_trans_state IS NULL OR A.neo_trans_state='0')
	</update>

	<!-- 
		장기보존포맷변환
		: 기록물철에 대한 포맷변환 취소요청 - C.1.기록물철/기록물건 포맷변환요청정보 갱신 (E:취소) 
	 -->
	<update id="updatePresvFormatNeoFolderClearReqTransList" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		UPDATE TB_STREQTRANS Z
		SET   request_status = 'E'
			, request_start_time = SYSDATE
		<!--cubrid
		WHERE (record_center_id, folder_id)
		IN (
			SELECT A.record_center_id, A.folder_id-->
		WHERE EXISTS (
			SELECT 1
			FROM  TB_RDFOLDER A
			WHERE A.record_center_id = #recordCenterId:VARCHAR#
			AND   A.folder_id = #folderId:VARCHAR#
			AND A.record_center_id = Z.record_center_id
			AND A.folder_id = Z.folder_id

			<isEqual property="clearIngFlag" compareValue="1">
				<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
					A.neo_trans_state IN ('1', '2', '3', '5')
				</isEqual>
				<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
					A.neo_trans_state IN ('1', '2', '3')
				</isNotEqual>
			</isEqual>
			<isNotEqual property="clearIngFlag" compareValue="1">
				<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
					A.neo_trans_state = '5'
				</isEqual>
				<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
					0 = 1
				</isNotEqual>
			</isNotEqual>
		)
		AND   neo_gubun IN ('1','2')
		AND   request_status IN ('-','A','B')
	</update>
	
	<!-- 
		장기보존포맷변환
		: 기록물철에 대한 포맷변환 취소요청 - D.1.포맷변환작업이력 테이블의 기록물건 변환상태 삭제 (E:취소) 
	 -->
	<delete id="deletePresvFormatNeoFolderClearRecordToWorkHist" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		DELETE FROM TB_STWORKHIST Z
		<!--cubrid
		WHERE (record_center_id, folder_id, record_id)
		IN (
			SELECT B.record_center_id, B.folder_id, B.record_id-->
		WHERE EXISTS(
			SELECT 1
			FROM  TB_RDRECORD B
			<!--cubrid
			WHERE (B.record_center_id, B.folder_id)
			IN (
				SELECT A.record_center_id, A.folder_id-->
			WHERE EXISTS (
				SELECT 1
				FROM  TB_RDFOLDER A
				WHERE A.record_center_id = #recordCenterId:VARCHAR#
				AND   A.folder_id = #folderId:VARCHAR#
				AND A.record_center_id = B.record_center_id
				AND A.folder_id = B.folder_id
			)

			<isEqual property="clearIngFlag" compareValue="1">
				<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
					B.neo_trans_state IN ('1', '2', '3', '5')
				</isEqual>
				<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
					B.neo_trans_state IN ('1', '2', '3')
				</isNotEqual>
			</isEqual>
			<isNotEqual property="clearIngFlag" compareValue="1">
				<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
					B.neo_trans_state = '5'
				</isEqual>
				<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
					0 = 1
				</isNotEqual>
			</isNotEqual>
		AND B.record_center_id = Z.record_center_id
		AND B.folder_id = Z.folder_id
		)
		AND   format_div_cd = '1'
		AND   (followup_div_cd IS NULL OR followup_div_cd IN ('0','1'))
	</delete>
	<!-- 
		장기보존포맷변환
		: 기록물철에 대한 포맷변환 취소요청 - D.2.건원문 테이블의 기록물건 변환상태 갱신 (0:미변환) 
	 -->
	<update id="updatePresvFormatNeoFolderClearRecordToRecordOrign" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		UPDATE TB_STRECORDORIGN Z
		SET   neo_trans_state = '0'
		<!--cubrid
		WHERE (record_center_id, record_id)
		IN (
			SELECT B.record_center_id, B.record_id-->
		WHERE EXISTS (
			SELECT 1
			FROM  TB_RDRECORD B
			<!--cubrid
			WHERE (B.record_center_id, B.folder_id)
			IN (
				SELECT A.record_center_id, A.folder_id-->
			WHERE EXISTS (
				SELECT 1
				FROM  TB_RDFOLDER A
				WHERE A.record_center_id = #recordCenterId:VARCHAR#
				AND   A.folder_id = #folderId:VARCHAR#
				AND A.record_center_id = B.record_center_id
				AND A.folder_id = B.folder_id
			)
	
			<isEqual property="clearIngFlag" compareValue="1">
				<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
					B.neo_trans_state IN ('1', '2', '3', '5')
				</isEqual>
				<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
					B.neo_trans_state IN ('1', '2', '3')
				</isNotEqual>
			</isEqual>
			<isNotEqual property="clearIngFlag" compareValue="1">
				<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
					B.neo_trans_state = '5'
				</isEqual>
				<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
					0 = 1
				</isNotEqual>
			</isNotEqual>
		AND B.record_center_id = Z.record_center_id
		AND B.record_id = Z.record_id
		)
	</update>
	<!-- 
		장기보존포맷변환
		: 기록물철에 대한 포맷변환 취소요청 - D.3.기록물건 테이블의 기록물건 변환상태 갱신 (0:미변환) 
	 -->
	<update id="updatePresvFormatNeoFolderClearRecordToRecord" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		UPDATE TB_RDRECORD B
		SET   B.neo_trans_state = '0'
		<!--cubrid
		WHERE (B.record_center_id, B.folder_id)
		IN (
			SELECT A.record_center_id, A.folder_id-->
		WHERE EXISTS (
			SELECT 1
			FROM  TB_RDFOLDER A
			WHERE A.record_center_id = #recordCenterId:VARCHAR#
			AND   A.folder_id = #folderId:VARCHAR#
			AND A.record_center_id = B.record_center_id
			AND A.folder_id = B.folder_id
		)
		<isEqual property="clearIngFlag" compareValue="1">
			<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
				B.neo_trans_state IN ('1', '2', '3', '5')
			</isEqual>
			<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
				B.neo_trans_state IN ('1', '2', '3')
			</isNotEqual>
		</isEqual>
		<isNotEqual property="clearIngFlag" compareValue="1">
			<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
				B.neo_trans_state = '5'
			</isEqual>
			<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
				0 = 1
			</isNotEqual>
		</isNotEqual>
	</update>
	<!-- 
		장기보존포맷변환
		: 기록물철에 대한 포맷변환 취소요청 - D.4.기록물철 테이블의 기록물건 변환상태 갱신 (건상태에 따른 취합) 
	 -->
	<update id="updatePresvFormatNeoFolderClearRecordToFolder" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		UPDATE TB_RDFOLDER A
		SET   A.record_neo_trans_state = ( CASE WHEN NOT EXISTS (SELECT 1 FROM TB_RDRECORD B WHERE B.record_center_id=A.record_center_id AND B.folder_id=A.folder_id AND (B.neo_trans_state IS NULL OR B.neo_trans_state IN ('0','1','2','3','5'))) THEN '4'
												WHEN NOT EXISTS (SELECT 1 FROM TB_RDRECORD B WHERE B.record_center_id=A.record_center_id AND B.folder_id=A.folder_id AND (B.neo_trans_state IS NULL OR B.neo_trans_state IN ('0','1','2','3'))) THEN '5'
												WHEN NOT EXISTS (SELECT 1 FROM TB_RDRECORD B WHERE B.record_center_id=A.record_center_id AND B.folder_id=A.folder_id AND B.neo_trans_state IN ('1','2','3')) THEN '0'
												ELSE '1' END )
		WHERE A.record_center_id = #recordCenterId:VARCHAR#
		AND   A.folder_id = #folderId:VARCHAR#
	</update>
	<!-- 
		장기보존포맷변환
		: 기록물철에 대한 포맷변환 취소요청 - D.5.포맷변환작업이력 테이블의 기록물철 변환상태 삭제 
	 -->
	<delete id="updatePresvFormatNeoFolderClearFolderToWorkHist" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		DELETE FROM TB_STWORKHIST Z
		<!--cubrid
		WHERE (record_center_id, folder_id)
		IN (
			SELECT A.record_center_id, A.folder_id-->
		WHERE EXISTS (
			SELECT 1
			FROM  TB_RDFOLDER A
			WHERE A.record_center_id = #recordCenterId:VARCHAR#
			AND   A.folder_id = #folderId:VARCHAR#
			AND A.record_center_id = Z.record_center_id
			AND A.folder_id = Z.folder_id

			<isEqual property="clearIngFlag" compareValue="1">
				<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
					A.neo_trans_state IN ('1', '2', '3', '5')
				</isEqual>
				<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
					A.neo_trans_state IN ('1', '2', '3')
				</isNotEqual>
			</isEqual>
			<isNotEqual property="clearIngFlag" compareValue="1">
				<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
					A.neo_trans_state = '5'
				</isEqual>
				<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
					0 = 1
				</isNotEqual>
			</isNotEqual>
		)
		AND   format_div_cd = '2'
		AND   (followup_div_cd IS NULL OR followup_div_cd IN ('0','1'))
	</delete>
	<!-- 
		장기보존포맷변환
		: 기록물철에 대한 포맷변환 취소요청 - D.6.기록물철 테이블의 기록물철 변환상태 갱신 (0:미변환) 
	 -->
	<update id="updatePresvFormatNeoFolderClearFolderToFolder" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		UPDATE TB_RDFOLDER A
		SET   A.neo_trans_state = '0'
		WHERE A.record_center_id = #recordCenterId:VARCHAR#
		AND   A.folder_id = #folderId:VARCHAR#
		<isEqual property="clearIngFlag" compareValue="1">
			<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
				A.neo_trans_state IN ('1', '2', '3', '5')
			</isEqual>
			<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
				A.neo_trans_state IN ('1', '2', '3')
			</isNotEqual>
		</isEqual>
		<isNotEqual property="clearIngFlag" compareValue="1">
			<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
				A.neo_trans_state = '5'
			</isEqual>
			<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
				0 = 1
			</isNotEqual>
		</isNotEqual>
	</update>







	<!-- 
		장기보존포맷변환
		: 기록물건에 대한 포맷변환 요청 - A.1.기록물건 포맷변환요청정보 생성(-:신청) 
	 -->
	<insert id="createPresvFormatNeoRecordReqTransRecordList" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		INSERT INTO TB_STREQTRANS (
			record_center_id, job_id, neo_gubun, neochasu, folder_id, record_id, dest_storage_type, dest_storage_vendor, request_status, erecord_flag
			, request_corp_cd, request_corp_nm, request_org_cd, request_org_nm, request_user_id, request_user_nm, request_user_pos_rank_nm
		)
		(
			SELECT A.record_center_id
				, TO_CHAR(SYSDATE,'YYYY')||LPAD(TB_STFORMAT_SQ01.NEXTVAL,13,'0') AS job_id
				, '2' AS neo_gubun
				, 1 AS neochasu
				, A.folder_id
				, A.record_id
				, #destStorageType:VARCHAR# AS dest_storage_type
				, #destStorageVendor:VARCHAR# AS dest_storage_vendor
				, '-' AS request_status
				, A.erecord_flag
				, (SELECT Z.hupper_org_cd FROM TB_STORG Z WHERE Z.record_center_id = #recordCenterId:VARCHAR# AND Z.org_cd = #requestOrgCd:VARCHAR#) AS request_corp_cd
				, (SELECT Y.org_nm FROM TB_STORG Y, (SELECT Z.record_center_id, Z.hupper_org_cd FROM TB_STORG Z WHERE Z.record_center_id = #recordCenterId:VARCHAR# AND Z.org_cd = #requestOrgCd:VARCHAR#) X WHERE Y.record_center_id=X.record_center_id AND Y.org_cd=X.hupper_org_cd) AS request_corp_nm
				, #requestOrgCd:VARCHAR#
				, (SELECT Z.full_org_nm FROM TB_STORG Z WHERE Z.record_center_id = #recordCenterId:VARCHAR# AND Z.org_cd = #requestOrgCd:VARCHAR#) AS request_org_nm
				, #requestUserId:VARCHAR#
				, #requestUserNm:VARCHAR#
				, (SELECT (CASE WHEN pos IS NULL AND rank IS NULL THEN ''
								WHEN pos IS NULL AND rank IS NOT NULL THEN rank
								WHEN pos IS NOT NULL AND rank IS NULL THEN pos
								ELSE pos||'/'||rank
							END)
					FROM  TB_STUSER
					WHERE user_id = #requestUserId:VARCHAR#) AS user_pos_rank
	          FROM  TB_RDRECORD A
	          WHERE A.record_center_id = #recordCenterId:VARCHAR#
	          AND   A.record_id = #recordId:VARCHAR#
	          AND   (A.neo_trans_state IS NULL OR A.neo_trans_state='0')
         )
	</insert>

	<!-- 
		장기보존포맷변환
		: 기록물건에 대한 포맷변환 요청 - B.1.기록물건 변환상태 갱신 (1:변환대기)
	 -->
	<insert id="updatePresvFormatNeoRecordWaitToRecord" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		UPDATE TB_RDRECORD A
		SET   A.neo_trans_state = '1'
		WHERE A.record_center_id = #recordCenterId:VARCHAR#
		AND   A.record_id = #recordId:VARCHAR#
		AND   (A.neo_trans_state IS NULL OR A.neo_trans_state='0')
	</insert>

	<!-- 
		장기보존포맷변환
		: 기록물건에 대한 포맷변환 취소요청 - C.1.기록물건 포맷변환요청정보 갱신 (E:취소) 
	 -->
	<update id="updatePresvFormatNeoRecordClearReqTransList" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		UPDATE TB_STREQTRANS Z
		SET   request_status = 'E'
			, request_start_time = SYSDATE
		<!--cubrid
		WHERE (record_center_id, folder_id, record_id)
		IN (
			SELECT B.record_center_id, B.folder_id, B.record_id-->
		WHERE EXISTS (
			SELECT 1
			FROM  TB_RDRECORD B
			WHERE B.record_center_id = #recordCenterId:VARCHAR#
			AND   B.record_id = #recordId:VARCHAR#
			AND B.record_center_id = Z.record_center_id 
			AND B.folder_id = Z.folder_id
			AND B.record_id = Z.record_id

			<isEqual property="clearIngFlag" compareValue="1">
				<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
					B.neo_trans_state IN ('1', '2', '3', '5')
				</isEqual>
				<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
					B.neo_trans_state IN ('1', '2', '3')
				</isNotEqual>
			</isEqual>
			<isNotEqual property="clearIngFlag" compareValue="1">
				<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
					B.neo_trans_state = '5'
				</isEqual>
				<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
					0 = 1
				</isNotEqual>
			</isNotEqual>
		)
		AND   neo_gubun IN ('1','2')
		AND   request_status IN ('-','A','B')
	</update>
	
	<!-- 
		장기보존포맷변환
		: 기록물건에 대한 포맷변환 취소요청 - D.1.포맷변환작업이력 테이블의 기록물건 변환상태 삭제 (E:취소) 
	 -->
	<delete id="deletePresvFormatNeoRecordClearRecordToWorkHist" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		DELETE FROM TB_STWORKHIST Z
		<!--cubrid
		WHERE (record_center_id, folder_id, record_id)
		IN (
			SELECT B.record_center_id, B.folder_id, B.record_id-->
		WHERE EXISTS (
			SELECT 1
			FROM  TB_RDRECORD B
			WHERE B.record_center_id = #recordCenterId:VARCHAR#
			AND   B.record_id = #recordId:VARCHAR#
			AND B.record_center_id = Z.record_center_id
			AND B.folder_id = Z.folder_id
			AND B.record_id = Z.record_id

			<isEqual property="clearIngFlag" compareValue="1">
				<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
					B.neo_trans_state IN ('1', '2', '3', '5')
				</isEqual>
				<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
					B.neo_trans_state IN ('1', '2', '3')
				</isNotEqual>
			</isEqual>
			<isNotEqual property="clearIngFlag" compareValue="1">
				<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
					B.neo_trans_state = '5'
				</isEqual>
				<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
					0 = 1
				</isNotEqual>
			</isNotEqual>
		)
		AND   format_div_cd = '1'
		AND   (followup_div_cd IS NULL OR followup_div_cd IN ('0','1'))
	</delete>
	<!-- 
		장기보존포맷변환
		: 기록물건에 대한 포맷변환 취소요청 - D.2.건원문 테이블의 기록물건 변환상태 갱신 (0:미변환) 
	 -->
	<update id="updatePresvFormatNeoRecordClearRecordToRecordOrign" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		UPDATE TB_STRECORDORIGN Z
		SET   neo_trans_state = '0'
		<!--cubrid
		WHERE (record_center_id, record_id)
		IN (
			SELECT B.record_center_id, B.record_id-->
		WHERE EXISTS( 
			SELECT 1	
			FROM  TB_RDRECORD B
			WHERE B.record_center_id = #recordCenterId:VARCHAR#
			AND   B.record_id = #recordId:VARCHAR#
			AND B.record_center_id = Z.record_center_id
			AND B.record_id = Z.record_id

			<isEqual property="clearIngFlag" compareValue="1">
				<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
					B.neo_trans_state IN ('1', '2', '3', '5')
				</isEqual>
				<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
					B.neo_trans_state IN ('1', '2', '3')
				</isNotEqual>
			</isEqual>
			<isNotEqual property="clearIngFlag" compareValue="1">
				<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
					B.neo_trans_state = '5'
				</isEqual>
				<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
					0 = 1
				</isNotEqual>
			</isNotEqual>
		)
	</update>
	<!-- 
		장기보존포맷변환
		: 기록물건에 대한 포맷변환 취소요청 - D.3.기록물건 테이블의 기록물건 변환상태 갱신 (0:미변환) 
	 -->
	<update id="updatePresvFormatNeoRecordClearRecordToRecord" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		UPDATE TB_RDRECORD B
		SET   B.neo_trans_state = '0'
		WHERE B.record_center_id = #recordCenterId:VARCHAR#
		AND   B.record_id = #recordId:VARCHAR#
		<isEqual property="clearIngFlag" compareValue="1">
			<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
				B.neo_trans_state IN ('1', '2', '3', '5')
			</isEqual>
			<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
				B.neo_trans_state IN ('1', '2', '3')
			</isNotEqual>
		</isEqual>
		<isNotEqual property="clearIngFlag" compareValue="1">
			<isEqual prepend="AND" property="clearFailFlag" compareValue="1">
				B.neo_trans_state = '5'
			</isEqual>
			<isNotEqual prepend="AND" property="clearFailFlag" compareValue="1">
				0 = 1
			</isNotEqual>
		</isNotEqual>
	</update>
	<!-- 
		장기보존포맷변환
		: 기록물건에 대한 포맷변환 취소요청 - D.4.기록물철 테이블의 기록물건 변환상태 갱신 (건상태에 따른 취합) 
	 -->
	<update id="updatePresvFormatNeoRecordClearRecordToFolder" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		UPDATE TB_RDFOLDER A
		SET   A.record_neo_trans_state = ( CASE WHEN NOT EXISTS (SELECT 1 FROM TB_RDRECORD B WHERE B.record_center_id=A.record_center_id AND B.folder_id=A.folder_id AND (B.neo_trans_state IS NULL OR B.neo_trans_state IN ('0','1','2','3','5'))) THEN '4'
												WHEN NOT EXISTS (SELECT 1 FROM TB_RDRECORD B WHERE B.record_center_id=A.record_center_id AND B.folder_id=A.folder_id AND (B.neo_trans_state IS NULL OR B.neo_trans_state IN ('0','1','2','3'))) THEN '5'
												WHEN NOT EXISTS (SELECT 1 FROM TB_RDRECORD B WHERE B.record_center_id=A.record_center_id AND B.folder_id=A.folder_id AND B.neo_trans_state IN ('1','2','3')) THEN '0'
												ELSE '1' END )
		<!--cubrid
		WHERE (A.record_center_id, A.folder_id)
		IN (
			SELECT B.record_center_id, B.folder_id-->
		WHERE EXISTS (
			SELECT 1
			FROM  TB_RDRECORD B
			WHERE B.record_center_id = #recordCenterId:VARCHAR#
			AND   B.record_id = #recordId:VARCHAR#
			AND B.record_center_id = A.record_center_id
			AND B.folder_id = A.folder_id
		)
	
	</update>
	
	<!-- 
		장기보존포맷변환 : 변환실패 파일 후속조치 (후속조치이력 입력)
	 -->
	<update id="updatePresvFormatNeoFollowup" parameterClass="rms.presv.format.domain.PresvFormatNeoFailedMsg">
		UPDATE TB_STWORKHIST
		SET   followup_div_cd = #followupDivCd:VARCHAR#
			, followup_cause = #followupCause:VARCHAR#
			, followup_fin_flag = '1'
		WHERE record_center_id = #recordCenterId:VARCHAR#
		AND   work_hist_id = #workHistId:VARCHAR#
	</update>
	<!-- 
		장기보존포맷변환
		: 기록물철에 대한 포맷변환 요청 - F.1.기록물철 포맷변환요청정보 생성(-:신청) 
	 -->
	<insert id="createPresvFormatNeoFolderReqTransFollowup" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		INSERT INTO TB_STREQTRANS (
			record_center_id, job_id, neo_gubun, neochasu, folder_id, record_id, dest_storage_type, dest_storage_vendor, request_status, erecord_flag
			, request_corp_cd, request_corp_nm, request_org_cd, request_org_nm, request_user_id, request_user_nm, request_user_pos_rank_nm
		)
		(
			SELECT A.record_center_id
				, TO_CHAR(SYSDATE,'YYYY')||LPAD(TB_STFORMAT_SQ01.NEXTVAL,13,'0') AS job_id
				, '1' AS neo_gubun
				, 1 AS neochasu
				, A.folder_id
				, '' AS record_id
				, #destStorageType:VARCHAR# AS dest_storage_type
				, #destStorageVendor:VARCHAR# AS dest_storage_vendor
				, '-' AS request_status
				, A.erecord_flag
				, (SELECT Z.hupper_org_cd FROM TB_STORG Z WHERE Z.record_center_id = #recordCenterId:VARCHAR# AND Z.org_cd = #requestOrgCd:VARCHAR#) AS request_corp_cd
				, (SELECT Y.org_nm FROM TB_STORG Y, (SELECT Z.record_center_id, Z.hupper_org_cd FROM TB_STORG Z WHERE Z.record_center_id = #recordCenterId:VARCHAR# AND Z.org_cd = #requestOrgCd:VARCHAR#) X WHERE Y.record_center_id=X.record_center_id AND Y.org_cd=X.hupper_org_cd) AS request_corp_nm
				, #requestOrgCd:VARCHAR#
				, (SELECT Z.full_org_nm FROM TB_STORG Z WHERE Z.record_center_id = #recordCenterId:VARCHAR# AND Z.org_cd = #requestOrgCd:VARCHAR#) AS request_org_nm
				, #requestUserId:VARCHAR#
				, #requestUserNm:VARCHAR#
				, (SELECT (CASE WHEN pos IS NULL AND rank IS NULL THEN ''
								WHEN pos IS NULL AND rank IS NOT NULL THEN rank
								WHEN pos IS NOT NULL AND rank IS NULL THEN pos
								ELSE pos||'/'||rank
							END)
					FROM  TB_STUSER
					WHERE user_id = #requestUserId:VARCHAR#) AS user_pos_rank
			FROM  TB_RDFOLDER A
			WHERE A.record_center_id = #recordCenterId:VARCHAR#
			AND   A.folder_id = #folderId:VARCHAR#
			AND   A.neo_trans_state = '5'
		)
	</insert>
	<!-- 
		장기보존포맷변환
		: 기록물철에 대한 포맷변환 요청 - F.2.기록물철 변환상태 갱신 (1:변환대기)
	 -->
	<insert id="updatePresvFormatNeoFolderFollowup" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		UPDATE TB_RDFOLDER A
		SET   A.neo_trans_state = '1'
			, A.record_neo_trans_state = ( CASE WHEN NOT EXISTS (SELECT 1 FROM TB_RDRECORD B WHERE B.record_center_id=A.record_center_id AND B.folder_id=A.folder_id AND (B.neo_trans_state IS NULL OR B.neo_trans_state IN ('0','1','2','3','5'))) THEN '4'
												WHEN NOT EXISTS (SELECT 1 FROM TB_RDRECORD B WHERE B.record_center_id=A.record_center_id AND B.folder_id=A.folder_id AND (B.neo_trans_state IS NULL OR B.neo_trans_state IN ('0','1','2','3'))) THEN '5'
												WHEN NOT EXISTS (SELECT 1 FROM TB_RDRECORD B WHERE B.record_center_id=A.record_center_id AND B.folder_id=A.folder_id AND B.neo_trans_state IN ('1','2','3')) THEN '0'
												ELSE '1' END )
		WHERE A.record_center_id = #recordCenterId:VARCHAR#
		AND   A.folder_id = #folderId:VARCHAR#
		AND   A.neo_trans_state = '5'
	</insert>
	<!-- 
		장기보존포맷변환
		: 기록물건에 대한 포맷변환 요청 - R.1.기록물건 포맷변환요청정보 생성(-:신청) 
	 -->
	<insert id="createPresvFormatNeoRecordReqTransFollowup" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		INSERT INTO TB_STREQTRANS (
			record_center_id, job_id, neo_gubun, neochasu, folder_id, record_id, dest_storage_type, dest_storage_vendor, request_status, erecord_flag
			, request_corp_cd, request_corp_nm, request_org_cd, request_org_nm, request_user_id, request_user_nm, request_user_pos_rank_nm
		)
		(
			SELECT A.record_center_id
				, TO_CHAR(SYSDATE,'YYYY')||LPAD(TB_STFORMAT_SQ01.NEXTVAL,13,'0') AS job_id
				, '2' AS neo_gubun
				, 1 AS neochasu
				, A.folder_id
				, A.record_id
				, #destStorageType:VARCHAR# AS dest_storage_type
				, #destStorageVendor:VARCHAR# AS dest_storage_vendor
				, '-' AS request_status
				, A.erecord_flag
				, (SELECT Z.hupper_org_cd FROM TB_STORG Z WHERE Z.record_center_id = #recordCenterId:VARCHAR# AND Z.org_cd = #requestOrgCd:VARCHAR#) AS request_corp_cd
				, (SELECT Y.org_nm FROM TB_STORG Y, (SELECT Z.record_center_id, Z.hupper_org_cd FROM TB_STORG Z WHERE Z.record_center_id = #recordCenterId:VARCHAR# AND Z.org_cd = #requestOrgCd:VARCHAR#) X WHERE Y.record_center_id=X.record_center_id AND Y.org_cd=X.hupper_org_cd) AS request_corp_nm
				, #requestOrgCd:VARCHAR#
				, (SELECT Z.full_org_nm FROM TB_STORG Z WHERE Z.record_center_id = #recordCenterId:VARCHAR# AND Z.org_cd = #requestOrgCd:VARCHAR#) AS request_org_nm
				, #requestUserId:VARCHAR#
				, #requestUserNm:VARCHAR#
				, (SELECT (CASE WHEN pos IS NULL AND rank IS NULL THEN ''
								WHEN pos IS NULL AND rank IS NOT NULL THEN rank
								WHEN pos IS NOT NULL AND rank IS NULL THEN pos
								ELSE pos||'/'||rank
							END)
					FROM  TB_STUSER
					WHERE user_id = #requestUserId:VARCHAR#) AS user_pos_rank
	          FROM  TB_RDRECORD A
	          WHERE A.record_center_id = #recordCenterId:VARCHAR#
	          AND   A.record_id = #recordId:VARCHAR#
	          AND   A.neo_trans_state = '5'
         )
	</insert>
	<!-- 
		장기보존포맷변환
		: 기록물건에 대한 포맷변환 취소요청 - R.2.건원문 테이블의 기록물건 변환상태 갱신 (1:변환대기)
	 -->
	<update id="updatePresvFormatNeoRecordFollowupRecordToRecordOrign" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		UPDATE TB_STRECORDORIGN
		SET   neo_trans_state = '1'
		WHERE record_center_id = #recordCenterId:VARCHAR#
		AND   record_id = #recordId:VARCHAR#
	</update>
	<!-- 
		장기보존포맷변환
		: 기록물건에 대한 포맷변환 취소요청 - R.3.기록물건 테이블의 기록물건 변환상태 갱신 (1:변환대기)
	 -->
	<update id="updatePresvFormatNeoRecordFollowupRecordToRecord" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		UPDATE TB_RDRECORD B
		SET   B.neo_trans_state = '1'
		WHERE B.record_center_id = #recordCenterId:VARCHAR#
		AND   B.record_id = #recordId:VARCHAR#
	</update>
	<!-- 
		장기보존포맷변환
		: 기록물건에 대한 포맷변환 취소요청 - R.4.기록물철 테이블의 기록물건 변환상태 갱신 (건상태에 따른 취합) 
	 -->
	<update id="updatePresvFormatNeoRecordFollowupRecordToFolder" parameterClass="rms.presv.format.domain.PresvFormatNeo">
		UPDATE TB_RDFOLDER A
		SET   A.record_neo_trans_state = ( CASE WHEN NOT EXISTS (SELECT 1 FROM TB_RDRECORD B WHERE B.record_center_id=A.record_center_id AND B.folder_id=A.folder_id AND (B.neo_trans_state IS NULL OR B.neo_trans_state IN ('0','1','2','3','5'))) THEN '4'
												WHEN NOT EXISTS (SELECT 1 FROM TB_RDRECORD B WHERE B.record_center_id=A.record_center_id AND B.folder_id=A.folder_id AND (B.neo_trans_state IS NULL OR B.neo_trans_state IN ('0','1','2','3'))) THEN '5'
												WHEN NOT EXISTS (SELECT 1 FROM TB_RDRECORD B WHERE B.record_center_id=A.record_center_id AND B.folder_id=A.folder_id AND B.neo_trans_state IN ('1','2','3')) THEN '0'
												ELSE '1' END )
		WHERE 
		<!--cubrid
		(A.record_center_id, A.folder_id)
		IN (
			SELECT B.record_center_id, B.folder_id
			-->
		exists (select 1
			FROM  TB_RDRECORD B
			WHERE B.record_center_id = #recordCenterId:VARCHAR#
			AND   B.record_id = #recordId:VARCHAR#
			and a.record_center_id = b.record_center_id
			and a.folder_id = b.folder_id
		)
	</update>
</sqlMap>
