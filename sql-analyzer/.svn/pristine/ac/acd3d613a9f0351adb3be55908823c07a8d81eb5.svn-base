<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="eval.openresortopin">


	<!-- 공개재분류 Default ResultMap -->
	<resultMap id="open-resort-opin-case-result"	class="rms.eval.openresortopin.domain.OpenResortOpin" >
		<result property="recordCenterId" 			column="RECORD_CENTER_ID" 		nullValue=""  />
		<result property="folderId" 				column="FOLDER_ID" 				nullValue=""  />
		<result property="recordId" 				column="RECORD_ID" 				nullValue=""  />
		<result property="resortSeq" 				column="RESORT_SEQ" 			nullValue="0" />
		<result property="resortYyyy" 				column="RESORT_YYYY" 			nullValue=""  />
		<result property="resortCase" 				column="RESORT_CASE" 			nullValue=""  />
		<result property="resortCaseNo" 			column="RESORT_CASE_NO" 		nullValue="0" />
		<result property="resortProgStateCd" 		column="RESORT_PROG_STATE_CD" 	nullValue=""  />
		<result property="currentOpenDivCd" 		column="CURRENT_OPEN_DIV_CD" 	nullValue=""  />
		<result property="handlOrgCd" 				column="HANDL_ORG_CD" 			nullValue=""  />
		<result property="handlOrgOpenDivCd" 		column="HANDL_ORG_OPEN_DIV_CD"	nullValue=""  />
		<result property="handlOrgOpenOpin" 		column="HANDL_ORG_OPEN_OPIN" 	nullValue=""  />
		<result property="handlOpenGrade" 			column="HANDL_OPEN_GRADE" 		nullValue=""  />
		<result property="handlOpenLimitPart" 		column="HANDL_OPEN_LIMIT_PART" 	nullValue=""  />
		<result property="handlOpenRegYmd" 			column="HANDL_OPEN_REG_YMD" 	nullValue=""  />
		<result property="handlOrgChrgrId"			column="HANDL_ORG_CHRGR_ID" 	nullValue=""  />
		<result property="expertOrgOpenDivCd"		column="EXPERT_ORG_OPEN_DIV_CD" nullValue=""  />
		<result property="expertOrgOpenOpin" 		column="EXPERT_ORG_OPEN_OPIN" 	nullValue=""  />
		<result property="expertOpenGrade" 			column="EXPERT_OPEN_GRADE" 		nullValue=""  />
		<result property="expertLimitPart" 			column="EXPERT_LIMIT_PART" 		nullValue=""  />
		<result property="recordChrgrId" 			column="RECORD_CHRGR_ID" 		nullValue=""  />
		<result property="discuTrgtFlag" 			column="DISCU_TRGT_FLAG" 		nullValue=""  />
		<result property="reviewOrgOpenDivCd" 		column="REVIEW_ORG_OPEN_DIV_CD" nullValue=""  />
		<result property="reviewOrgOpenOpin" 		column="REVIEW_ORG_OPEN_OPIN" 	nullValue=""  />
		<result property="reviewOpenGrade" 			column="REVIEW_OPEN_GRADE" 		nullValue=""  />
		<result property="reviewLimitPart" 			column="REVIEW_LIMIT_PART" 		nullValue=""  />
		<result property="reviewRegYmd" 			column="REVIEW_REG_YMD" 		nullValue=""  />
		<result property="rsltDecisionCd" 			column="RSLT_DECISION_CD" 		nullValue=""  />
		<result property="rsltRegYmd" 				column="RSLT_REG_YMD" 			nullValue=""  />
		<result property="resortDocNo" 				column="RESORT_DOC_NO" 			nullValue=""  />
		<result property="expertRegYmd" 			column="EXPERT_REG_YMD" 		nullValue=""  />
		<result property="orgCd"					column="ORG_CD" 				nullValue=""  />
		<result property="curKeepOrgCd"				column="CUR_KEEP_ORG_CD"		nullValue=""  />
		<result property="clssId"					column="CLSS_ID" 				nullValue=""  />
		<result property="title"					column="TITLE"	 				nullValue=""  />
		<result property="recordDetlTypeCd"			column="RECORD_DETL_TYPE_CD"	nullValue=""  />
		<result property="recordDetlTypeNm"			column="RECORD_DETL_TYPE_NM"	nullValue=""  />
		<result property="deptAbbrNm" 				column="DEPT_ABBR_NM"			nullValue=""  />
		<result property="curKeepOrgNm" 			column="CUR_KEEP_ORG_NM"		nullValue=""  />
		<result property="bisClssNm" 				column="BIS_CLSS_NM"			nullValue=""  />
		<result property="closeFlag" 				column="CLOSE_FLAG"				nullValue="0" />
		<result property="rjctFlag" 				column="RJCT_FLAG"				nullValue="0" />	
		<result property="takeMngNo"				column="TAKE_MNG_NO"			nullValue=""  />
		<result property="openGrade"				column="OPEN_GRADE"				nullValue=""  />
		<result property="partOpenRsn"				column="PART_OPEN_RSN"			nullValue=""  />
		<result property="openHistCnt"				column="OPEN_HIST_CNT"			nullValue="0" />
		<result property="regDtime"					column="REG_DTIME"				nullValue=""  />
		<result property="folderTitle"				column="FOLDER_TITLE"			nullValue=""  />
		<result property="lastOpenResortYyyy"		column="LAST_OPEN_RESORT_YYYY"	nullValue=""  />
		<result property="creatSysCd"				column="CREAT_SYS_CD"			nullValue=""  />
		<result property="creatYyyy"				column="CREAT_YYYY"				nullValue=""  />
		<result property="creatRegNo"				column="CREAT_REG_NO"			nullValue=""  />
		<result property="dtchRegNo"				column="DTCH_REG_NO"			nullValue=""  />
		<result property="folderRegSeq"				column="FOLDER_REG_SEQ"			nullValue=""  />
		<result property="hoNo"						column="HO_NO"					nullValue=""  />
		<result property="handlOrgNm"				column="HANDL_ORG_NM"			nullValue=""  />
		<result property="creatRegDtime"			column="CREAT_REG_DTIME"		nullValue=""  />
		<result property="docNoNm"					column="DOC_NO_NM"				nullValue=""  />
		<result property="excelDwnFlag"				column="EXCEL_DWN_FLAG"			nullValue="0" />
		<result property="centerSelFlag"			column="CENTER_SEL_FLAG"		nullValue="0" />
		<result property="openDivCd"				column="OPEN_DIV_CD"			nullValue=""  />
		<result property="histQty"					column="HIST_QTY"				nullValue=""  />
		<result property="folderKeepStateCd"		column="FOLDER_KEEP_STATE_CD"	nullValue=""  />
		<result property="presvTermCd"				column="PRESV_TERM_CD"			nullValue=""  />
		<result property="fullOrgNm"				column="FULL_ORG_NM"			nullValue=""  />
		<result property="openLimitDate"			column="open_limit_date"		nullValue=""  />
		<result property="handlOrgOpenYmd"			column="handl_org_open_ymd"		nullValue=""  />
		<result property="expertOrgOpenYmd"			column="expert_org_open_ymd"	nullValue=""  />		
		<result property="reviewOrgOpenYmd"			column="review_org_open_ymd"	nullValue=""  />				
	</resultMap>
	<!-- 
		SELECT - 공개재분류 대상선정(5년주기,이관,공개전환) 목록을 조회한다.
	 -->
	<select id="findOpenResortOpinCasePagedList" parameterClass="rms.eval.openresortopin.domain.OpenResortOpin" resultMap="open-resort-opin-case-result">
		SELECT D.*
		FROM (
			SELECT ROWNUM AS rnum
				, C.*
			FROM (
				SELECT o.resort_case
					, o.resort_case_no
					, o.record_center_id
					, o.record_chrgr_id
					, o.record_id
					, o.folder_id
					, o.clss_id
					, o.resort_doc_no
					, o.discu_trgt_flag
					, o.rslt_reg_ymd
					, o.review_org_open_div_cd
					, o.review_org_open_opin
					, o.review_limit_part
					, o.review_open_grade
					, o.review_reg_ymd
					, o.resort_prog_state_cd
					, o.handl_org_cd
					, o.resort_yyyy
					, o.resort_seq
					, o.rslt_decision_cd
					, o.expert_org_open_div_cd
					, o.expert_org_open_opin
					, o.expert_limit_part
					, o.expert_open_grade
					, o.expert_reg_ymd
					, o.handl_open_limit_part
					, o.handl_org_chrgr_id
					, o.handl_open_reg_ymd
					, o.org_cd
					, o.handl_org_open_div_cd
					, o.handl_org_open_opin
					,  o.handl_open_grade
					, o.current_open_div_cd
					, o.rjct_flag
					, o.excel_dwn_flag
					, o.center_sel_flag
					,r.title
					, r.record_detl_type_cd
					, r.take_mng_no
					, r.open_grade
					, r.open_limit_part
					, r.part_open_rsn
					, r.reg_dtime
					, r.last_open_resort_yyyy
					, r.creat_sys_cd
					, r.creat_yyyy
					, r.folder_reg_seq
					, r.ho_no
					, r.creat_reg_no
					, r.dtch_reg_no
					, r.creat_reg_dtime
					, r.doc_no_nm
					, r.open_div_cd
					, r.cur_keep_org_cd
					, r.folder_keep_state_cd
					, r.presv_term_cd
					, (SELECT dept_abbr_nm FROM tb_stdept WHERE org_cd = o.handl_org_cd AND record_center_id = #recordCenterId:VARCHAR#) as handl_org_nm
					, (SELECT dept_abbr_nm FROM tb_stdept WHERE org_cd = o.org_cd AND record_center_id = #recordCenterId:VARCHAR#) as dept_abbr_nm
					, (SELECT full_org_nm FROM tb_storg WHERE org_cd = o.org_cd AND record_center_id = #recordCenterId:VARCHAR#) as full_org_nm
					, (SELECT dept_abbr_nm FROM tb_stdept WHERE org_cd = r.cur_keep_org_cd AND record_center_id = #recordCenterId:VARCHAR#) as cur_keep_org_nm
					, (SELECT close_flag FROM tb_stdept WHERE org_cd = r.cur_keep_org_cd AND record_center_id = #recordCenterId:VARCHAR#) as close_flag
					, (CASE 
				    		WHEN r.clss_div_cd = '1' THEN (SELECT bis_clss_nm FROM tb_zzbisclss WHERE bis_clss_id = r.clss_id)
				            WHEN r.clss_div_cd = '2' THEN (SELECT unit_nm FROM tb_zzunit WHERE record_center_id = r.record_center_id and unit_cd = r.clss_id)
				       END) as bis_clss_nm
				    , (SELECT COUNT(*) FROM tb_rdopenhist WHERE record_center_id = o.record_center_id AND record_id = o.record_id) as open_hist_cnt
				    , (SELECT title FROM tb_rdfolder WHERE record_center_id = o.record_center_id AND folder_id = o.folder_id) as folder_title
				    , (SELECT com_cd_nm FROM tb_zzcomcd WHERE com_type_cd = 'RD03' AND com_cd = r.record_detl_type_cd) as record_detl_type_nm
				    , (SELECT COUNT(1) FROM tb_rdopenhist WHERE record_center_id = o.record_center_id AND record_id = o.record_id) AS hist_qty
				    , r.open_limit_date
				    , o.handl_org_open_ymd
				    , o.expert_org_open_ymd
				    , o.review_org_open_ymd
				FROM tb_rdopenresortopin o
					, (
					SELECT /*+ index(A, TB_RDRECORD_IX01) */  
						a.record_center_id
						, a.record_id
						, a.title
						, a.record_detl_type_cd
						, a.take_mng_no
						, a.open_grade
						, a.open_limit_part
						, a.part_open_rsn
						, a.reg_dtime
						, a.last_open_resort_yyyy
						, a.org_cd
						, a.creat_reg_no
						, a.dtch_reg_no
						, a.creat_yyyy
						, a.creat_reg_dtime
						, a.clss_div_cd
						, a.open_div_cd
						, f.creat_sys_cd
						, f.folder_reg_seq
						, f.ho_no, a.clss_id
						, f.cur_keep_org_cd
						, f.folder_keep_state_cd
						, (CASE 
				               WHEN ((A.creat_sys_cd='02' OR A.creat_sys_cd='05' OR A.creat_sys_cd='06') AND (SELECT 1 FROM TB_STORG Z WHERE Z.record_center_id=A.record_center_id AND Z.org_cd=SUBSTR(A.creat_reg_no,1,7))=1)
				               THEN NVL((SELECT Z.org_abbr_nm FROM TB_STORG Z WHERE Z.record_center_id=A.record_center_id AND Z.org_cd=SUBSTR(A.creat_reg_no,1,7)),SUBSTR(A.creat_reg_no,1,7)) ||'-'|| TO_NUMBER(SUBSTR(A.creat_reg_no,8))
				               WHEN (A.creat_sys_cd='05' OR ((A.creat_sys_cd='01' OR A.creat_sys_cd='04') AND A.record_detl_type_cd='01'))
				               THEN NVL((SELECT Z.org_abbr_nm FROM TB_STORG Z WHERE Z.record_center_id=A.record_center_id AND Z.org_cd=A.org_cd),A.org_cd) ||'-'|| TO_NUMBER(A.doc_no)
				               ELSE doc_no
				           END) as doc_no_nm
				        , f.presv_term_cd
				        , a.open_limit_date
					FROM tb_rdfolder f, tb_rdrecord a   
				    WHERE f.record_center_id = a.record_center_id
				    AND	  f.folder_id = a.folder_id
				    AND	  f.record_center_id = #recordCenterId:VARCHAR#				    
					<isNotEmpty property="presvTermCd">
						<isEqual property="presvTermCheck" compareValue="1">
							<isEqual prepend="AND" property="presvTermCd" compareValue="25">
								f.presv_term_cd <![CDATA[>=]]> '20'
							</isEqual>
							<isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
								f.presv_term_cd <![CDATA[>=]]> #presvTermCd:VARCHAR#
							</isNotEqual> 					 
						</isEqual>
						<isNotEqual property="presvTermCheck" compareValue="1">
							<isEqual prepend="AND" property="presvTermCd" compareValue="25">
								f.presv_term_cd IN ('20','25') 
							</isEqual>
							<isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
								f.presv_term_cd = #presvTermCd:VARCHAR# 
							</isNotEqual>
						</isNotEqual>
					</isNotEmpty>				    
				    ) r
				WHERE o.record_center_id = #recordCenterId:VARCHAR#
				AND	  o.record_id = r.record_id
				AND	  o.record_center_id = r.record_center_id
				<isNotEmpty prepend="AND" property="folderId">
					o.folder_id = #folderId:VARCHAR#
				</isNotEmpty>
				<isNotEmpty property="resortYyyy" prepend="AND">
					o.resort_yyyy = #resortYyyy:VARCHAR#
				</isNotEmpty>
				<isNotEmpty property="title" prepend="AND">
					r.title like #title:VARCHAR#
				</isNotEmpty>
				<isNotEmpty property="resortCase" prepend="AND">
					o.resort_case = #resortCase:VARCHAR#
				</isNotEmpty>
				<isNotEmpty property="orgCd" prepend="AND">
					<isEqual property="searchDivCd" compareValue="1">
						r.cur_keep_org_cd = #orgCd:VARCHAR#
					</isEqual>
					<isEqual property="searchDivCd" compareValue="2">
						o.org_cd = #orgCd:VARCHAR#
					</isEqual>
				</isNotEmpty>
				<isNotEmpty property="recordDetlTypeCd" prepend="AND">
					r.record_detl_type_cd = #recordDetlTypeCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty property="resortProgStateCd" prepend="AND">
					<isNotEqual property="resortProgStateCd" compareValue="0">
						<isEqual property="resortProgStateCd" compareValue="36">
							o.resort_prog_state_cd IN ('3','4','5','6')
						</isEqual>
						<isNotEqual property="resortProgStateCd" compareValue="36">
							o.resort_prog_state_cd = #resortProgStateCd:VARCHAR#
						</isNotEqual>
					</isNotEqual>
				</isNotEmpty>
				<isNotEmpty property="clssId" prepend="AND">
					o.clss_id = #clssId:VARCHAR#
				</isNotEmpty>
				<isNotEmpty property="currentOpenDivCd" prepend="AND">
					o.current_open_div_cd = #currentOpenDivCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty property="openGrade" prepend="AND">
					r.open_grade = #gradeCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty property="handlOpenGrade" prepend="AND">
					r.open_grade = #handlGradeCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty property="expertOpenGrade" prepend="AND">
					r.open_grade = #expertGradeCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty property="reviewOpenGrade" prepend="AND">
					r.open_grade = #reviewGradeCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty property="discuTrgtFlag" prepend="AND">
					o.discu_trgt_flag = #discuTrgtFlag:VARCHAR#
				</isNotEmpty>
				<isNotEmpty property="handlOpinState">
					<isEqual property="handlOpinState" compareValue="0" prepend="AND">
						o.resort_prog_state_cd in ('3','4','5','6','7')
					</isEqual>
					<isEqual property="handlOpinState" compareValue="1" prepend="AND">
						o.resort_prog_state_cd = '4'
					</isEqual>
					<isEqual property="handlOpinState" compareValue="2" prepend="AND">
						o.resort_prog_state_cd = '3'
					</isEqual>
					<isEqual property="handlOpinState" compareValue="3" prepend="AND">
						o.resort_prog_state_cd in ('5','6')
					</isEqual>
					<isEqual property="handlOpinState" compareValue="4" prepend="AND">
						o.resort_prog_state_cd = '7'
					</isEqual>
				</isNotEmpty>
				<isNotEmpty property="expertOpinState">
					<isEqual property="expertOpinState" compareValue="0" prepend="AND">
						o.resort_prog_state_cd in ('3','4','5','6','7')
					</isEqual>
					<isEqual property="expertOpinState" compareValue="1" prepend="AND">
						o.resort_prog_state_cd = '5'
					</isEqual>
					<isEqual property="expertOpinState" compareValue="2" prepend="AND">
						o.resort_prog_state_cd in ('3','4')
					</isEqual>
					<isEqual property="expertOpinState" compareValue="3" prepend="AND">
						o.resort_prog_state_cd = '6'
					</isEqual>
					<isEqual property="expertOpinState" compareValue="4" prepend="AND">
						o.resort_prog_state_cd = '7'
					</isEqual>
				</isNotEmpty>
				<isNotEmpty property="reviewOpinState">
					<isEqual property="reviewOpinState" compareValue="0">
						AND	o.resort_prog_state_cd in ('5','6','7')
					</isEqual>
					<isEqual property="reviewOpinState" compareValue="1">
						AND	o.resort_prog_state_cd = '6'
					</isEqual>
					<isEqual property="reviewOpinState" compareValue="2">
						AND	 o.resort_prog_state_cd = '5'
					</isEqual>
					<isEqual property="reviewOpinState" compareValue="3">
						AND	 o.resort_prog_state_cd = '7'
					</isEqual>
					AND	 o.discu_trgt_flag = '1'
				</isNotEmpty>
				<isNotEmpty property="handlOrgCd" prepend="AND">
					o.handl_org_cd = #handlOrgCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty property="deptTrgtState">
					<isEqual property="deptTrgtState" compareValue="0" prepend="AND">
						o.resort_prog_state_cd in ('2','3','4','5','6','7')
					</isEqual>
					<isEqual property="deptTrgtState" compareValue="1" prepend="AND">
						o.resort_prog_state_cd = '2'
					</isEqual>
					<isEqual property="deptTrgtState" compareValue="2" prepend="AND">
						o.resort_prog_state_cd = '3'
					</isEqual>
					<isEqual property="deptTrgtState" compareValue="3" prepend="AND">
						o.resort_prog_state_cd in ('4','5','6')
					</isEqual>
					<isEqual property="deptTrgtState" compareValue="4" prepend="AND">
						o.resort_prog_state_cd = '7'
					</isEqual>
				</isNotEmpty>
				<isNotEmpty property="resortCaseNo">
					<isNotEqual property="resortCaseNo" prepend="AND" compareValue="0">
						o.resort_case_no = #resortCaseNo#
					</isNotEqual>
				</isNotEmpty>
				<isNotEmpty property="excelFlag" prepend="AND">
					<isEqual property="excelFlag" compareValue="Y">
						o.resort_prog_state_cd != '7'
					</isEqual>
				</isNotEmpty>
				<isNotEmpty property="excelDwnFlag" prepend="AND">
					o.excel_dwn_flag = #excelDwnFlag:VARCHAR#
				</isNotEmpty>
			) C
			WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
		) D
		WHERE D.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
	</select>
	<!-- 
		COUNT - 공개재분류 대상선정(5년주기,이관,공개전환) 목록을 조회한다.
	 -->
	<select id="countOpenResortOpinCasePagedList" parameterClass="rms.eval.openresortopin.domain.OpenResortOpin" resultClass="java.lang.Long">
		SELECT COUNT(1)
			FROM tb_rdopenresortopin o
				, (
				SELECT  /*+ index(A, TB_RDRECORD_IX01) */ 
					  a.record_center_id
					, a.record_id
					, a.title
					, a.record_detl_type_cd
					, a.take_mng_no
					, a.open_grade
					, a.open_limit_part
					, a.part_open_rsn
					, a.reg_dtime
					, a.last_open_resort_yyyy
					, a.org_cd
					, a.creat_reg_no
					, a.dtch_reg_no
					, a.creat_yyyy
					, a.creat_reg_dtime
					, a.clss_div_cd
					, a.open_div_cd
					, f.creat_sys_cd
					, f.folder_reg_seq
					, f.ho_no, a.clss_id
					, f.cur_keep_org_cd
					, f.folder_keep_state_cd
					, (CASE 
			               WHEN ((A.creat_sys_cd='02' OR A.creat_sys_cd='05' OR A.creat_sys_cd='06') AND (SELECT 1 FROM TB_STORG Z WHERE Z.record_center_id=A.record_center_id AND Z.org_cd=SUBSTR(A.creat_reg_no,1,7))=1)
			               THEN NVL((SELECT Z.org_abbr_nm FROM TB_STORG Z WHERE Z.record_center_id=A.record_center_id AND Z.org_cd=SUBSTR(A.creat_reg_no,1,7)),SUBSTR(A.creat_reg_no,1,7)) ||'-'|| TO_NUMBER(SUBSTR(A.creat_reg_no,8))
			               WHEN (A.creat_sys_cd='05' OR ((A.creat_sys_cd='01' OR A.creat_sys_cd='04') AND A.record_detl_type_cd='01'))
			               THEN NVL((SELECT Z.org_abbr_nm FROM TB_STORG Z WHERE Z.record_center_id=A.record_center_id AND Z.org_cd=A.org_cd),A.org_cd) ||'-'|| TO_NUMBER(A.doc_no)
			               ELSE doc_no
			           END) as doc_no_nm
			        , f.presv_term_cd
				FROM tb_rdfolder f, tb_rdrecord a   
			    WHERE f.record_center_id = a.record_center_id
			    AND	  f.folder_id = a.folder_id
			    AND	  f.record_center_id = #recordCenterId:VARCHAR#
				<isNotEmpty property="presvTermCd">
					<isEqual property="presvTermCheck" compareValue="1">
						<isEqual prepend="AND" property="presvTermCd" compareValue="25">
							f.presv_term_cd <![CDATA[>=]]> '20'
						</isEqual>
						<isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
							f.presv_term_cd <![CDATA[>=]]> #presvTermCd:VARCHAR#
						</isNotEqual> 					 
					</isEqual>
						<isNotEqual property="presvTermCheck" compareValue="1">
							<isEqual prepend="AND" property="presvTermCd" compareValue="25">
								f.presv_term_cd IN ('20','25') 
							</isEqual>
						<isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
							f.presv_term_cd = #presvTermCd:VARCHAR# 
						</isNotEqual>
					</isNotEqual>
				</isNotEmpty>			    	
			    ) r
			WHERE o.record_center_id = #recordCenterId:VARCHAR#
			AND	  o.record_id = r.record_id
			AND	  o.record_center_id = r.record_center_id
			<isNotEmpty prepend="AND" property="folderId">
				o.folder_id = #folderId:VARCHAR#
			</isNotEmpty>
			<isNotEmpty property="resortYyyy" prepend="AND">
				o.resort_yyyy = #resortYyyy:VARCHAR#
			</isNotEmpty>
			<isNotEmpty property="title" prepend="AND">
				r.title like #title:VARCHAR#
			</isNotEmpty>
			<isNotEmpty property="resortCase" prepend="AND">
				o.resort_case = #resortCase:VARCHAR#
			</isNotEmpty>
			<isNotEmpty property="orgCd" prepend="AND">
				<isEqual property="searchDivCd" compareValue="1">
					r.cur_keep_org_cd = #orgCd:VARCHAR#
				</isEqual>
				<isEqual property="searchDivCd" compareValue="2">
					o.org_cd = #orgCd:VARCHAR#
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="recordDetlTypeCd" prepend="AND">
				r.record_detl_type_cd = #recordDetlTypeCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty property="resortProgStateCd" prepend="AND">
				<isNotEqual property="resortProgStateCd" compareValue="0">
					<isEqual property="resortProgStateCd" compareValue="36">
						o.resort_prog_state_cd IN ('3','4','5','6')
					</isEqual>
					<isNotEqual property="resortProgStateCd" compareValue="36">
						o.resort_prog_state_cd = #resortProgStateCd:VARCHAR#
					</isNotEqual>
				</isNotEqual>
			</isNotEmpty>
			<isNotEmpty property="clssId" prepend="AND">
				o.clss_id = #clssId:VARCHAR#
			</isNotEmpty>
			<isNotEmpty property="currentOpenDivCd" prepend="AND">
				o.current_open_div_cd = #currentOpenDivCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty property="openGrade" prepend="AND">
				r.open_grade = #gradeCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty property="handlOpenGrade" prepend="AND">
				r.open_grade = #handlGradeCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty property="expertOpenGrade" prepend="AND">
				r.open_grade = #expertGradeCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty property="reviewOpenGrade" prepend="AND">
				r.open_grade = #reviewGradeCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty property="discuTrgtFlag" prepend="AND">
				o.discu_trgt_flag = #discuTrgtFlag:VARCHAR#
			</isNotEmpty>
			<isNotEmpty property="handlOpinState">
				<isEqual property="handlOpinState" compareValue="0" prepend="AND">
					o.resort_prog_state_cd in ('3','4','5','6','7')
				</isEqual>
				<isEqual property="handlOpinState" compareValue="1" prepend="AND">
					o.resort_prog_state_cd = '4'
				</isEqual>
				<isEqual property="handlOpinState" compareValue="2" prepend="AND">
					o.resort_prog_state_cd = '3'
				</isEqual>
				<isEqual property="handlOpinState" compareValue="3" prepend="AND">
					o.resort_prog_state_cd in ('5','6')
				</isEqual>
				<isEqual property="handlOpinState" compareValue="4" prepend="AND">
					o.resort_prog_state_cd = '7'
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="expertOpinState">
				<isEqual property="expertOpinState" compareValue="0" prepend="AND">
					o.resort_prog_state_cd in ('3','4','5','6','7')
				</isEqual>
				<isEqual property="expertOpinState" compareValue="1" prepend="AND">
					o.resort_prog_state_cd = '5'
				</isEqual>
				<isEqual property="expertOpinState" compareValue="2" prepend="AND">
					o.resort_prog_state_cd in ('3','4')
				</isEqual>
				<isEqual property="expertOpinState" compareValue="3" prepend="AND">
					o.resort_prog_state_cd = '6'
				</isEqual>
				<isEqual property="expertOpinState" compareValue="4" prepend="AND">
					o.resort_prog_state_cd = '7'
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="reviewOpinState">
				<isEqual property="reviewOpinState" compareValue="0">
					AND	o.resort_prog_state_cd in ('5','6','7')
				</isEqual>
				<isEqual property="reviewOpinState" compareValue="1">
					AND	o.resort_prog_state_cd = '6'
				</isEqual>
				<isEqual property="reviewOpinState" compareValue="2">
					AND	 o.resort_prog_state_cd = '5'
				</isEqual>
				<isEqual property="reviewOpinState" compareValue="3">
					AND	 o.resort_prog_state_cd = '7'
				</isEqual>
				AND	 o.discu_trgt_flag = '1'
			</isNotEmpty>
			<isNotEmpty property="handlOrgCd" prepend="AND">
				o.handl_org_cd = #handlOrgCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty property="deptTrgtState">
				<isEqual property="deptTrgtState" compareValue="0" prepend="AND">
					o.resort_prog_state_cd in ('2','3','4','5','6','7')
				</isEqual>
				<isEqual property="deptTrgtState" compareValue="1" prepend="AND">
					o.resort_prog_state_cd = '2'
				</isEqual>
				<isEqual property="deptTrgtState" compareValue="2" prepend="AND">
					o.resort_prog_state_cd = '3'
				</isEqual>
				<isEqual property="deptTrgtState" compareValue="3" prepend="AND">
					o.resort_prog_state_cd in ('4','5','6')
				</isEqual>
				<isEqual property="deptTrgtState" compareValue="4" prepend="AND">
					o.resort_prog_state_cd = '7'
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="resortCaseNo">
				<isNotEqual property="resortCaseNo" prepend="AND" compareValue="0">
					o.resort_case_no = #resortCaseNo#
				</isNotEqual>
			</isNotEmpty>
			<isNotEmpty property="excelFlag" prepend="AND">
				<isEqual property="excelFlag" compareValue="Y">
					o.resort_prog_state_cd != '7'
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="excelDwnFlag" prepend="AND">
				o.excel_dwn_flag = #excelDwnFlag:VARCHAR#
			</isNotEmpty>
	</select>
	<!-- 공개재분류 대상선정(5년주기,이관,공개전환) 목록을 조회한다. -->
	<select id="findOpenResortOpinCaseList" parameterClass="rms.eval.openresortopin.domain.OpenResortOpin" resultMap="open-resort-opin-case-result">
		SELECT o.resort_case
			, o.resort_case_no
			, o.record_center_id
			, o.record_chrgr_id
			, o.record_id
			, o.folder_id
			, o.clss_id
			, o.resort_doc_no
			, o.discu_trgt_flag
			, o.rslt_reg_ymd
			, o.review_org_open_div_cd
			, o.review_org_open_opin
			, o.review_limit_part
			, o.review_open_grade
			, o.review_reg_ymd
			, o.resort_prog_state_cd
			, o.handl_org_cd
			, o.resort_yyyy
			, o.resort_seq
			, o.rslt_decision_cd
			, o.expert_org_open_div_cd
			, o.expert_org_open_opin
			, o.expert_limit_part
			, o.expert_open_grade
			, o.expert_reg_ymd
			, o.handl_open_limit_part
			, o.handl_org_chrgr_id
			, o.handl_open_reg_ymd
			, o.org_cd
			, o.handl_org_open_div_cd
			, o.handl_org_open_opin
			,  o.handl_open_grade
			, o.current_open_div_cd
			, o.rjct_flag
			, o.excel_dwn_flag
			, o.center_sel_flag
			,r.title
			, r.record_detl_type_cd
			, r.take_mng_no
			, r.open_grade
			, r.open_limit_part
			, r.part_open_rsn
			, r.reg_dtime
			, r.last_open_resort_yyyy
			, r.creat_sys_cd
			, r.creat_yyyy
			, r.folder_reg_seq
			, r.ho_no
			, r.creat_reg_no
			, r.dtch_reg_no
			, r.creat_reg_dtime
			, r.doc_no_nm
			, r.open_div_cd
			, r.cur_keep_org_cd
			, r.folder_keep_state_cd
			, r.presv_term_cd
			, (SELECT dept_abbr_nm FROM tb_stdept WHERE org_cd = o.handl_org_cd AND record_center_id = #recordCenterId:VARCHAR#) as handl_org_nm
			, (SELECT full_org_nm FROM tb_storg WHERE org_cd = o.org_cd AND record_center_id = #recordCenterId:VARCHAR#) as full_org_nm
		    , (SELECT dept_abbr_nm FROM tb_stdept WHERE org_cd = o.org_cd AND record_center_id = #recordCenterId:VARCHAR#) as dept_abbr_nm
			, (SELECT dept_abbr_nm FROM tb_stdept WHERE org_cd = r.cur_keep_org_cd AND record_center_id = #recordCenterId:VARCHAR#) as cur_keep_org_nm
			, (SELECT close_flag FROM tb_stdept WHERE org_cd = r.cur_keep_org_cd AND record_center_id = #recordCenterId:VARCHAR#) as close_flag
			, (CASE 
		    		WHEN r.clss_div_cd = '1' THEN (SELECT bis_clss_nm FROM tb_zzbisclss WHERE bis_clss_id = r.clss_id)
		            WHEN r.clss_div_cd = '2' THEN (SELECT unit_nm FROM tb_zzunit WHERE record_center_id = r.record_center_id and unit_cd = r.clss_id)
		       END) as bis_clss_nm
		    , (SELECT COUNT(*) FROM tb_rdopenhist WHERE record_center_id = o.record_center_id AND record_id = o.record_id) as open_hist_cnt
		    , (SELECT title FROM tb_rdfolder WHERE record_center_id = o.record_center_id AND folder_id = o.folder_id) as folder_title
		    , (SELECT com_cd_nm FROM tb_zzcomcd WHERE com_type_cd = 'RD03' AND com_cd = r.record_detl_type_cd) as record_detl_type_nm
		    , (SELECT COUNT(1) FROM tb_rdopenhist WHERE record_center_id = o.record_center_id AND record_id = o.record_id) AS hist_qty
		    , r.open_limit_date
		    , o.handl_org_open_ymd
		    , o.expert_org_open_ymd
		    , o.review_org_open_ymd	    
		FROM tb_rdopenresortopin o
			, (
			SELECT /*+ index(A, TB_RDRECORD_IX01) */ 
			      a.record_center_id
				, a.record_id
				, a.title
				, a.record_detl_type_cd
				, a.take_mng_no
				, a.open_grade
				, a.open_limit_part
				, a.part_open_rsn
				, a.reg_dtime
				, a.last_open_resort_yyyy
				, a.org_cd
				, a.creat_reg_no
				, a.dtch_reg_no
				, a.creat_yyyy
				, a.creat_reg_dtime
				, a.clss_div_cd
				, a.open_div_cd
				, f.creat_sys_cd
				, f.folder_reg_seq
				, f.ho_no, a.clss_id
				, f.cur_keep_org_cd
				, f.folder_keep_state_cd
				, (CASE 
		               WHEN ((A.creat_sys_cd='02' OR A.creat_sys_cd='05' OR A.creat_sys_cd='06') AND (SELECT 1 FROM TB_STORG Z WHERE Z.record_center_id=A.record_center_id AND Z.org_cd=SUBSTR(A.creat_reg_no,1,7))=1)
		               THEN NVL((SELECT Z.org_abbr_nm FROM TB_STORG Z WHERE Z.record_center_id=A.record_center_id AND Z.org_cd=SUBSTR(A.creat_reg_no,1,7)),SUBSTR(A.creat_reg_no,1,7)) ||'-'|| TO_NUMBER(SUBSTR(A.creat_reg_no,8))
		               WHEN (A.creat_sys_cd='05' OR ((A.creat_sys_cd='01' OR A.creat_sys_cd='04') AND A.record_detl_type_cd='01'))
		               THEN NVL((SELECT Z.org_abbr_nm FROM TB_STORG Z WHERE Z.record_center_id=A.record_center_id AND Z.org_cd=A.org_cd),A.org_cd) ||'-'|| TO_NUMBER(A.doc_no)
		               ELSE doc_no
		           END) as doc_no_nm
		        , (case when f.presv_term_cd = '01' then '1년' when f.presv_term_cd = '03' then '3년' when f.presv_term_cd = '05' then '5년'
		           when f.presv_term_cd = '10' then '10년' when f.presv_term_cd in ('20','25') then '30년' when f.presv_term_cd = '30' then '준영구'
		           when f.presv_term_cd = '40' then '영구' else '' end) presv_term_nm		          		  
		        , SUBSTR(a.open_limit_date,1,8) open_limit_date
				, f.presv_term_cd presv_term_cd 
			FROM  tb_rdfolder f, tb_rdrecord a   
		    WHERE f.record_center_id = a.record_center_id
		    AND	  f.folder_id = a.folder_id
		    AND	  a.record_center_id = #recordCenterId:VARCHAR#
			<isNotEmpty property="presvTermCd">
				<isEqual property="presvTermCheck" compareValue="1">
					<isEqual prepend="AND" property="presvTermCd" compareValue="25">
						f.presv_term_cd <![CDATA[>=]]> '20'
					</isEqual>
					<isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
						f.presv_term_cd <![CDATA[>=]]> #presvTermCd:VARCHAR#
					</isNotEqual> 					 
				</isEqual>
					<isNotEqual property="presvTermCheck" compareValue="1">
						<isEqual prepend="AND" property="presvTermCd" compareValue="25">
							f.presv_term_cd IN ('20','25') 
						</isEqual>
					<isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
						f.presv_term_cd = #presvTermCd:VARCHAR# 
					</isNotEqual>
				</isNotEqual>
			</isNotEmpty>	
		    ) r
		WHERE o.record_center_id = #recordCenterId:VARCHAR#
		AND	  o.record_id = r.record_id
		AND	  o.record_center_id = r.record_center_id
		<isNotEmpty prepend="AND" property="folderId">
			o.folder_id = #folderId:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="resortYyyy" prepend="AND">
			o.resort_yyyy = #resortYyyy:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="title" prepend="AND">
			r.title like #title:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="resortCase" prepend="AND">
			o.resort_case = #resortCase:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="orgCd" prepend="AND">
			<isEqual property="searchDivCd" compareValue="1">
				r.cur_keep_org_cd = #orgCd:VARCHAR#
			</isEqual>
			<isEqual property="searchDivCd" compareValue="2">
				o.org_cd = #orgCd:VARCHAR#
			</isEqual>
		</isNotEmpty>
		<isNotEmpty property="recordDetlTypeCd" prepend="AND">
			r.record_detl_type_cd = #recordDetlTypeCd:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="resortProgStateCd" prepend="AND">
			<isNotEqual property="resortProgStateCd" compareValue="0">
				<isEqual property="resortProgStateCd" compareValue="36">
					o.resort_prog_state_cd IN ('3','4','5','6')
				</isEqual>
				<isNotEqual property="resortProgStateCd" compareValue="36">
					o.resort_prog_state_cd = #resortProgStateCd:VARCHAR#
				</isNotEqual>
			</isNotEqual>
		</isNotEmpty>
		<isNotEmpty property="clssId" prepend="AND">
			o.clss_id = #clssId:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="currentOpenDivCd" prepend="AND">
			o.current_open_div_cd = #currentOpenDivCd:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="openGrade" prepend="AND">
			r.open_grade = #gradeCd:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="handlOpenGrade" prepend="AND">
			r.open_grade = #handlGradeCd:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="expertOpenGrade" prepend="AND">
			r.open_grade = #expertGradeCd:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="reviewOpenGrade" prepend="AND">
			r.open_grade = #reviewGradeCd:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="discuTrgtFlag" prepend="AND">
			o.discu_trgt_flag = #discuTrgtFlag:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="handlOpinState">
			<isEqual property="handlOpinState" compareValue="0" prepend="AND">
				o.resort_prog_state_cd in ('3','4','5','6','7')
			</isEqual>
			<isEqual property="handlOpinState" compareValue="1" prepend="AND">
				o.resort_prog_state_cd = '4'
			</isEqual>
			<isEqual property="handlOpinState" compareValue="2" prepend="AND">
				o.resort_prog_state_cd = '3'
			</isEqual>
			<isEqual property="handlOpinState" compareValue="3" prepend="AND">
				o.resort_prog_state_cd in ('5','6')
			</isEqual>
			<isEqual property="handlOpinState" compareValue="4" prepend="AND">
				o.resort_prog_state_cd = '7'
			</isEqual>
		</isNotEmpty>
		<isNotEmpty property="expertOpinState">
			<isEqual property="expertOpinState" compareValue="0" prepend="AND">
				o.resort_prog_state_cd in ('3','4','5','6','7')
			</isEqual>
			<isEqual property="expertOpinState" compareValue="1" prepend="AND">
				o.resort_prog_state_cd = '5'
			</isEqual>
			<isEqual property="expertOpinState" compareValue="2" prepend="AND">
				o.resort_prog_state_cd in ('3','4')
			</isEqual>
			<isEqual property="expertOpinState" compareValue="3" prepend="AND">
				o.resort_prog_state_cd = '6'
			</isEqual>
			<isEqual property="expertOpinState" compareValue="4" prepend="AND">
				o.resort_prog_state_cd = '7'
			</isEqual>
		</isNotEmpty>
		<isNotEmpty property="reviewOpinState">
			<isEqual property="reviewOpinState" compareValue="0">
				AND	o.resort_prog_state_cd in ('5','6','7')
			</isEqual>
			<isEqual property="reviewOpinState" compareValue="1">
				AND	o.resort_prog_state_cd = '6'
			</isEqual>
			<isEqual property="reviewOpinState" compareValue="2">
				AND	 o.resort_prog_state_cd = '5'
			</isEqual>
			<isEqual property="reviewOpinState" compareValue="3">
				AND	 o.resort_prog_state_cd = '7'
			</isEqual>
			AND	 o.discu_trgt_flag = '1'
		</isNotEmpty>
		<isNotEmpty property="handlOrgCd" prepend="AND">
			o.handl_org_cd = #handlOrgCd:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="deptTrgtState">
			<isEqual property="deptTrgtState" compareValue="0" prepend="AND">
				o.resort_prog_state_cd in ('2','3','4','5','6','7')
			</isEqual>
			<isEqual property="deptTrgtState" compareValue="1" prepend="AND">
				o.resort_prog_state_cd = '2'
			</isEqual>
			<isEqual property="deptTrgtState" compareValue="2" prepend="AND">
				o.resort_prog_state_cd = '3'
			</isEqual>
			<isEqual property="deptTrgtState" compareValue="3" prepend="AND">
				o.resort_prog_state_cd in ('4','5','6')
			</isEqual>
			<isEqual property="deptTrgtState" compareValue="4" prepend="AND">
				o.resort_prog_state_cd = '7'
			</isEqual>
		</isNotEmpty>
		<isNotEmpty property="resortCaseNo">
			<isNotEqual property="resortCaseNo" prepend="AND" compareValue="0">
				o.resort_case_no = #resortCaseNo#
			</isNotEqual>
		</isNotEmpty>
		<isNotEmpty property="excelFlag" prepend="AND">
			<isEqual property="excelFlag" compareValue="Y">
				o.resort_prog_state_cd != '7'
			</isEqual>
		</isNotEmpty>
		<isNotEmpty property="excelDwnFlag" prepend="AND">
			o.excel_dwn_flag = #excelDwnFlag:VARCHAR#
		</isNotEmpty>
	</select>
	<!-- 공개재분류 결과반영 선정사유별 대상 건 정보 -->
	<select id="findOpenResortOpin" resultMap="open-resort-opin-case-result" parameterClass="rms.eval.openresortopin.domain.OpenResortOpin">
		SELECT o.resort_case
			, o.resort_case_no
			, o.record_center_id
			, o.record_chrgr_id
			, o.record_id
			, o.folder_id
			, o.clss_id
			, o.resort_doc_no
			, o.discu_trgt_flag
			, o.rslt_reg_ymd
			, o.review_org_open_div_cd
			, o.review_org_open_opin
			, o.review_limit_part
			, o.review_open_grade
			, o.review_reg_ymd
			, o.resort_prog_state_cd
			, o.handl_org_cd
			, o.resort_yyyy
			, o.resort_seq
			, o.rslt_decision_cd
			, o.expert_org_open_div_cd
			, o.expert_org_open_opin
			, o.expert_limit_part
			, o.expert_open_grade
			, o.expert_reg_ymd
			, o.handl_open_limit_part
			, o.handl_org_chrgr_id
			, o.handl_open_reg_ymd
			, o.org_cd
			, o.handl_org_open_div_cd
			, o.handl_org_open_opin
			, o.handl_open_grade
			, o.current_open_div_cd
			, o.rjct_flag
			, o.excel_dwn_flag
			, o.center_sel_flag
			, r.title
			, r.record_detl_type_cd
			, r.take_mng_no
			, r.open_grade
			, r.open_limit_part
			, r.part_open_rsn
			, r.reg_dtime
			, r.last_open_resort_yyyy
			, r.creat_sys_cd
			, r.creat_yyyy
			, r.folder_reg_seq
			, r.ho_no
			, r.creat_reg_no
			, r.dtch_reg_no
			, r.creat_reg_dtime
			, r.doc_no_nm
			, r.open_div_cd
			, r.presv_term_cd
			, (SELECT dept_abbr_nm FROM tb_stdept WHERE org_cd = o.handl_org_cd AND record_center_id = #recordCenterId:VARCHAR#) as handl_org_nm, r.cur_keep_org_cd, r.folder_keep_state_cd
			, (SELECT dept_abbr_nm FROM tb_stdept WHERE org_cd = o.org_cd AND record_center_id = #recordCenterId:VARCHAR#) as dept_abbr_nm
			, (SELECT full_org_nm FROM tb_storg WHERE org_cd = o.org_cd AND record_center_id = #recordCenterId:VARCHAR#) as full_org_nm
			, (SELECT dept_abbr_nm FROM tb_stdept WHERE org_cd = r.cur_keep_org_cd AND record_center_id = #recordCenterId:VARCHAR#) as cur_keep_org_nm
			, (SELECT close_flag FROM tb_stdept WHERE org_cd = o.org_cd AND record_center_id = #recordCenterId:VARCHAR#) as close_flag
			, (CASE WHEN r.clss_div_cd = '1' THEN (SELECT bis_clss_nm FROM tb_zzbisclss WHERE bis_clss_id = r.clss_id)
		            WHEN r.clss_div_cd = '2' THEN (SELECT unit_nm FROM tb_zzunit WHERE record_center_id = r.record_center_id and unit_cd = o.clss_id)
		       END) as bis_clss_nm
		    , (SELECT COUNT(*) FROM tb_rdopenhist WHERE record_center_id = o.record_center_id AND record_id = o.record_id) as open_hist_cnt
		    , (SELECT title FROM tb_rdfolder WHERE record_center_id = o.record_center_id AND folder_id = o.folder_id) as folder_title
		    , (SELECT com_cd_nm FROM tb_zzcomcd WHERE com_type_cd = 'RD03' AND com_cd = r.record_detl_type_cd) as record_detl_type_nm
		    , (SELECT COUNT(1) FROM tb_rdopenhist WHERE record_center_id = o.record_center_id and record_id = o.record_id) as hist_qty
		    , r.open_limit_date
		    , o.handl_org_open_ymd
		    , o.expert_org_open_ymd
		    , o.review_org_open_ymd
		FROM tb_rdopenresortopin o, (
			SELECT a.record_center_id
				, a.record_id
				, a.title
				, a.record_detl_type_cd
				, a.take_mng_no
				, a.open_grade
				, a.open_limit_part
				, a.part_open_rsn
				, a.reg_dtime
				, a.last_open_resort_yyyy
				, a.org_cd
				, a.creat_reg_no
				, a.dtch_reg_no
				, a.creat_yyyy
				, a.creat_reg_dtime
				, a.clss_div_cd
				, a.open_div_cd
				, f.creat_sys_cd
				, f.folder_reg_seq
				, f.ho_no, a.clss_id
				, f.cur_keep_org_cd
				, f.folder_keep_state_cd
				, f.presv_term_cd
				, (CASE WHEN ((A.creat_sys_cd='02' OR A.creat_sys_cd='05' OR A.creat_sys_cd='06') AND (SELECT 1 FROM TB_STORG Z WHERE Z.record_center_id=A.record_center_id AND Z.org_cd=SUBSTR(A.creat_reg_no,1,7))=1)
					    THEN NVL((SELECT Z.org_abbr_nm FROM TB_STORG Z WHERE Z.record_center_id=A.record_center_id AND Z.org_cd=SUBSTR(A.creat_reg_no,1,7)),SUBSTR(A.creat_reg_no,1,7)) ||'-'|| TO_NUMBER(SUBSTR(A.creat_reg_no,8))
						WHEN (A.creat_sys_cd='05' OR ((A.creat_sys_cd='01' OR A.creat_sys_cd='04') AND A.record_detl_type_cd='01'))
						THEN NVL((SELECT Z.org_abbr_nm FROM TB_STORG Z WHERE Z.record_center_id=A.record_center_id AND Z.org_cd=A.org_cd),A.org_cd) ||'-'|| TO_NUMBER(A.doc_no)
						ELSE doc_no
				   END) as doc_no_nm
				, a.open_limit_date
			FROM tb_rdrecord a, tb_rdfolder f   
		    WHERE a.record_center_id = f.record_center_id
		    AND a.folder_id = f.folder_id	
		) r
		WHERE o.record_center_id = #recordCenterId:VARCHAR#
		AND o.record_id = #recordId:VARCHAR#
		AND	o.resort_seq = #resortSeq:VARCHAR#
		AND	o.record_id = r.record_id
		<isNotEmpty prepend="AND" property="folderId">
			o.folder_id = #folderId:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="resortYyyy" prepend="AND">
			o.resort_yyyy = #resortYyyy:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="title" prepend="AND">
			r.title like '%$title$%'
		</isNotEmpty>
		<isNotEmpty property="resortCase" prepend="AND">
			o.resort_case = #resortCase:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="orgCd" prepend="AND">
			<isEqual property="searchDivCd" compareValue="1">
				r.cur_keep_org_cd = #orgCd:VARCHAR#
			</isEqual>
			<isEqual property="searchDivCd" compareValue="2">
				o.org_cd = #orgCd:VARCHAR#
			</isEqual>
		</isNotEmpty>
		<isNotEmpty property="recordDetlTypeCd" prepend="AND">
			r.record_detl_type_cd = #recordDetlTypeCd:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="resortProgStateCd" prepend="AND">
			<isNotEqual property="resortProgStateCd" compareValue="0">
				<isEqual property="resortProgStateCd" compareValue="36">
					o.resort_prog_state_cd IN ('3','4','5','6')
				</isEqual>
				<isNotEqual property="resortProgStateCd" compareValue="36">
					o.resort_prog_state_cd = #resortProgStateCd:VARCHAR#
				</isNotEqual>
			</isNotEqual>
		</isNotEmpty>
		<isNotEmpty property="clssId" prepend="AND">
			o.clss_id = #clssId:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="currentOpenDivCd" prepend="AND">
			o.current_open_div_cd = #currentOpenDivCd:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="openGrade" prepend="AND">
			r.open_grade = #gradeCd:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="handlOpenGrade" prepend="AND">
			r.open_grade = #handlGradeCd:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="expertOpenGrade" prepend="AND">
			r.open_grade = #expertGradeCd:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="reviewOpenGrade" prepend="AND">
			r.open_grade = #reviewGradeCd:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="discuTrgtFlag" prepend="AND">
			o.discu_trgt_flag = #discuTrgtFlag:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="handlOpinState">
			<isEqual property="handlOpinState" compareValue="0" prepend="AND">
				o.resort_prog_state_cd in ('3','4','5','6','7')
			</isEqual>
			<isEqual property="handlOpinState" compareValue="1" prepend="AND">
				o.resort_prog_state_cd = '4'
			</isEqual>
			<isEqual property="handlOpinState" compareValue="2" prepend="AND">
				o.resort_prog_state_cd = '3'
			</isEqual>
			<isEqual property="handlOpinState" compareValue="3" prepend="AND">
				o.resort_prog_state_cd in ('5','6')
			</isEqual>
			<isEqual property="handlOpinState" compareValue="4" prepend="AND">
				o.resort_prog_state_cd = '7'
			</isEqual>
		</isNotEmpty>
		<isNotEmpty property="expertOpinState">
			<isEqual property="expertOpinState" compareValue="0" prepend="AND">
				o.resort_prog_state_cd in ('3','4','5','6','7')
			</isEqual>
			<isEqual property="expertOpinState" compareValue="1" prepend="AND">
				o.resort_prog_state_cd = '5'
			</isEqual>
			<isEqual property="expertOpinState" compareValue="2" prepend="AND">
				o.resort_prog_state_cd in ('3','4')
			</isEqual>
			<isEqual property="expertOpinState" compareValue="3" prepend="AND">
				o.resort_prog_state_cd = '6'
			</isEqual>
			<isEqual property="expertOpinState" compareValue="4" prepend="AND">
				o.resort_prog_state_cd = '7'
			</isEqual>
		</isNotEmpty>
		<isNotEmpty property="reviewOpinState">
			<isEqual property="reviewOpinState" compareValue="0">
				AND	o.resort_prog_state_cd in ('5','6','7')
			</isEqual>
			<isEqual property="reviewOpinState" compareValue="1">
				AND	o.resort_prog_state_cd = '6'
			</isEqual>
			<isEqual property="reviewOpinState" compareValue="2">
				AND	 o.resort_prog_state_cd = '5'
			</isEqual>
			<isEqual property="reviewOpinState" compareValue="3">
				AND	 o.resort_prog_state_cd = '7'
			</isEqual>
			AND	 o.discu_trgt_flag = '1'
		</isNotEmpty>
		<isNotEmpty property="handlOrgCd" prepend="AND">
			o.handl_org_cd = #handlOrgCd:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="deptTrgtState">
			<isEqual property="deptTrgtState" compareValue="0" prepend="AND">
				o.resort_prog_state_cd in ('2','3','4','5','6','7')
			</isEqual>
			<isEqual property="deptTrgtState" compareValue="1" prepend="AND">
				o.resort_prog_state_cd = '2'
			</isEqual>
			<isEqual property="deptTrgtState" compareValue="2" prepend="AND">
				o.resort_prog_state_cd = '3'
			</isEqual>
			<isEqual property="deptTrgtState" compareValue="3" prepend="AND">
				o.resort_prog_state_cd in ('4','5','6')
			</isEqual>
			<isEqual property="deptTrgtState" compareValue="4" prepend="AND">
				o.resort_prog_state_cd = '7'
			</isEqual>
		</isNotEmpty>
		<isNotEmpty property="resortCaseNo">
			<isNotEqual property="resortCaseNo" prepend="AND" compareValue="0">
				o.resort_case_no = #resortCaseNo#
			</isNotEqual>
		</isNotEmpty>
		<isNotEmpty property="excelFlag" prepend="AND">
			<isEqual property="excelFlag" compareValue="Y">
				o.resort_prog_state_cd != '7'
			</isEqual>
		</isNotEmpty>
		<isNotEmpty property="excelDwnFlag" prepend="AND">
			o.excel_dwn_flag = #excelDwnFlag:VARCHAR#
		</isNotEmpty>
		
		<!-- 조회조건에 보존기간 추가 2014.09.22 김도형 추가 시작 -->
		<isNotEmpty property="presvTermCd">
			<isEqual prepend="AND" property="presvTermCheck" compareValue="1">
				r.presv_term_cd <![CDATA[>=]]> #presvTermCd:VARCHAR# 
			</isEqual>
			<isNotEqual prepend="AND" property="presvTermCheck" compareValue="1">
				r.presv_term_cd = #presvTermCd:VARCHAR# 
			</isNotEqual>
		</isNotEmpty>
		<!-- 조회조건에 보존기간 추가 2014.09.22 김도형 추가 종료 -->
		
	</select>
	<!-- 
		COUNT - 공개재분류 대상생성 (5년주기, 이관대상) 대상선정 이후 진행중인 목록 갯수
	 -->
	<select id="countOpenResortOpinCaseProcessList" parameterClass="rms.eval.openresortopin.domain.OpenResortOpin" resultClass="int">
		SELECT COUNT(*)
		FROM (
			SELECT o.resort_case
				, o.resort_case_no
				, o.record_center_id
				, o.record_chrgr_id
				, o.record_id
				, o.folder_id
				, o.clss_id
				, o.resort_doc_no
				, o.discu_trgt_flag
				, o.rslt_reg_ymd
				, o.review_org_open_div_cd
				, o.review_org_open_opin
				, o.review_limit_part
				, o.review_open_grade
				, o.review_reg_ymd
				, o.resort_prog_state_cd
				, o.handl_org_cd
				, o.resort_yyyy
				, o.resort_seq
				, o.rslt_decision_cd
				, o.expert_org_open_div_cd
				, o.expert_org_open_opin
				, o.expert_limit_part
				, o.expert_open_grade
				, o.expert_reg_ymd
				, o.handl_open_limit_part
				, o.handl_org_chrgr_id
				, o.handl_open_reg_ymd
				, o.org_cd
				, o.handl_org_open_div_cd
				, o.handl_org_open_opin
				, o.handl_open_grade
				, o.current_open_div_cd
				, o.rjct_flag
				, o.excel_dwn_flag
				, o.center_sel_flag
				, r.title
				, r.record_detl_type_cd
				, r.take_mng_no
				, r.open_grade
				, r.open_limit_part
				, r.part_open_rsn
				, r.reg_dtime
				, r.last_open_resort_yyyy
				, r.creat_sys_cd
				, r.creat_yyyy
				, r.folder_reg_seq
				, r.ho_no
				, r.creat_reg_no
				, r.dtch_reg_no
				, r.creat_reg_dtime
				, r.doc_no_nm
				, r.open_div_cd
				, (SELECT dept_abbr_nm FROM tb_stdept WHERE org_cd = o.handl_org_cd) as handl_org_nm
				, (SELECT dept_abbr_nm FROM tb_stdept WHERE org_cd = o.org_cd) as dept_abbr_nm
				, (SELECT full_org_nm FROM tb_storg WHERE org_cd = o.org_cd) as full_org_nm
				, (SELECT close_flag FROM tb_stdept WHERE org_cd = o.org_cd) as close_flag
				, (case when r.clss_div_cd = '1' then (SELECT bis_clss_nm FROM tb_zzbisclss WHERE bis_clss_id = r.clss_id)
			            when r.clss_div_cd = '2' then (SELECT unit_nm FROM tb_zzunit WHERE record_center_id = r.record_center_id and unit_cd = r.clss_id)
			       end 
			    ) as bis_clss_nm
			    , (SELECT COUNT(*) FROM tb_rdopenhist WHERE record_center_id = o.record_center_id AND record_id = o.record_id) as open_hist_cnt
			    , (SELECT title FROM tb_rdfolder WHERE record_center_id = o.record_center_id AND folder_id = o.folder_id) as folder_title
			    , (SELECT com_cd_nm FROM tb_zzcomcd WHERE com_type_cd = 'RD03' AND com_cd = r.record_detl_type_cd) as record_detl_type_nm
			FROM tb_rdopenresortopin o
				, (
					SELECT a.record_center_id
						, a.record_id
						, a.title
						, a.record_detl_type_cd
						, a.take_mng_no
						, a.open_grade
						, a.open_limit_part
						, a.part_open_rsn
						, a.reg_dtime
						, a.last_open_resort_yyyy
						, a.org_cd
						, a.creat_reg_no
						, a.dtch_reg_no
						, a.creat_yyyy
						, a.creat_reg_dtime
						, a.clss_div_cd
						, a.open_div_cd
						, f.creat_sys_cd
						, f.folder_reg_seq
						, f.ho_no
						, a.clss_id
						, f.cur_keep_org_cd
						, (CASE WHEN ((A.creat_sys_cd='02' OR A.creat_sys_cd='05' OR A.creat_sys_cd='06') AND (SELECT 1 FROM TB_STORG Z WHERE Z.record_center_id=A.record_center_id AND Z.org_cd=SUBSTR(A.creat_reg_no,1,7))=1)
			                    THEN NVL((SELECT Z.org_abbr_nm FROM TB_STORG Z WHERE Z.record_center_id=A.record_center_id AND Z.org_cd=SUBSTR(A.creat_reg_no,1,7)),SUBSTR(A.creat_reg_no,1,7)) ||'-'|| TO_NUMBER(SUBSTR(A.creat_reg_no,8))
			                    WHEN (A.creat_sys_cd='05' OR ((A.creat_sys_cd='01' OR A.creat_sys_cd='04') AND A.record_detl_type_cd='01'))
			                    THEN NVL((SELECT Z.org_abbr_nm FROM TB_STORG Z WHERE Z.record_center_id=A.record_center_id AND Z.org_cd=A.org_cd),A.org_cd) ||'-'|| TO_NUMBER(A.doc_no)
			                    ELSE doc_no
			               END
			          	) as doc_no_nm
			          	<!-- 조회조건에 보존기간 추가 2014.09.22 김도형 추가 -->
          		  		, f.presv_term_cd	
			        FROM tb_rdrecord a, tb_rdfolder f   
			        WHERE a.record_center_id = #recordCenterId:VARCHAR#
          			AND	a.record_center_id = f.record_center_id
			        AND	a.folder_id = f.folder_id	
			    ) r
			WHERE o.record_center_id = #recordCenterId:VARCHAR#
			AND	o.record_id = r.record_id
			AND	o.record_center_id = r.record_center_id
			AND o.resort_prog_state_cd > '1'
			AND o.SCHEDULE_SEQ = #scheduleSeq#
			<isNotEmpty property="resortYyyy" prepend="AND">
				o.resort_yyyy = #resortYyyy:VARCHAR#
			</isNotEmpty>
			<isNotEmpty property="title" prepend="AND">
				r.title like '%$title$%'
			</isNotEmpty>
			<isNotEmpty property="resortCase" prepend="AND">
				o.resort_case = #resortCase:VARCHAR#
			</isNotEmpty>
			<isNotEmpty property="orgCd" prepend="AND">
				<isEqual property="searchDivCd" compareValue="1">
					r.cur_keep_org_cd = #orgCd:VARCHAR#
				</isEqual>
				<isEqual property="searchDivCd" compareValue="2">
					o.org_cd = #orgCd:VARCHAR#
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="recordDetlTypeCd" prepend="AND">
				r.record_detl_type_cd = #recordDetlTypeCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty property="resortProgStateCd" prepend="AND">
				<isNotEqual property="resortProgStateCd" compareValue="0">
					<isEqual property="resortProgStateCd" compareValue="36">
						o.resort_prog_state_cd IN ('3','4','5','6')
					</isEqual>
					<isNotEqual property="resortProgStateCd" compareValue="36">
						o.resort_prog_state_cd = #resortProgStateCd:VARCHAR#
					</isNotEqual>
				</isNotEqual>
			</isNotEmpty>
			<isNotEmpty property="clssId" prepend="AND">
				o.clss_id = #clssId:VARCHAR#
			</isNotEmpty>
			<isNotEmpty property="currentOpenDivCd" prepend="AND">
				o.current_open_div_cd = #currentOpenDivCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty property="openGrade" prepend="AND">
				r.open_grade = #gradeCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty property="handlOpenGrade" prepend="AND">
				r.open_grade = #handlGradeCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty property="expertOpenGrade" prepend="AND">
				r.open_grade = #expertGradeCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty property="reviewOpenGrade" prepend="AND">
				r.open_grade = #reviewGradeCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty property="discuTrgtFlag" prepend="AND">
				o.discu_trgt_flag = #discuTrgtFlag:VARCHAR#
			</isNotEmpty>
			<isNotEmpty property="handlOpinState">
				<isEqual property="handlOpinState" compareValue="0" prepend="AND">
					o.resort_prog_state_cd in ('3','4','5','6','7')
				</isEqual>
				<isEqual property="handlOpinState" compareValue="1" prepend="AND">
					o.resort_prog_state_cd = '4'
				</isEqual>
				<isEqual property="handlOpinState" compareValue="2" prepend="AND">
					o.resort_prog_state_cd = '3'
				</isEqual>
				<isEqual property="handlOpinState" compareValue="3" prepend="AND">
					o.resort_prog_state_cd in ('5','6')
				</isEqual>
				<isEqual property="handlOpinState" compareValue="4" prepend="AND">
					o.resort_prog_state_cd = '7'
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="expertOpinState">
				<isEqual property="expertOpinState" compareValue="0" prepend="AND">
					o.resort_prog_state_cd in ('3','4','5','6','7')
				</isEqual>
				<isEqual property="expertOpinState" compareValue="1" prepend="AND">
					o.resort_prog_state_cd = '5'
				</isEqual>
				<isEqual property="expertOpinState" compareValue="2" prepend="AND">
					o.resort_prog_state_cd in ('3','4')
				</isEqual>
				<isEqual property="expertOpinState" compareValue="3" prepend="AND">
					o.resort_prog_state_cd = '6'
				</isEqual>
				<isEqual property="expertOpinState" compareValue="4" prepend="AND">
					o.resort_prog_state_cd = '7'
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="reviewOpinState">
				<isEqual property="reviewOpinState" compareValue="0">
					AND	o.resort_prog_state_cd in ('5','6','7')
				</isEqual>
				<isEqual property="reviewOpinState" compareValue="1">
					AND	o.resort_prog_state_cd = '6'
				</isEqual>
				<isEqual property="reviewOpinState" compareValue="2">
					AND	 o.resort_prog_state_cd = '5'
				</isEqual>
				<isEqual property="reviewOpinState" compareValue="3">
					AND	 o.resort_prog_state_cd = '7'
				</isEqual>
				AND	 o.discu_trgt_flag = '1'
			</isNotEmpty>
			<isNotEmpty property="handlOrgCd" prepend="AND">
				o.handl_org_cd = #handlOrgCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty property="deptTrgtState">
				<isEqual property="deptTrgtState" compareValue="0" prepend="AND">
					o.resort_prog_state_cd in ('2','3','4','5','6','7')
				</isEqual>
				<isEqual property="deptTrgtState" compareValue="1" prepend="AND">
					o.resort_prog_state_cd = '2'
				</isEqual>
				<isEqual property="deptTrgtState" compareValue="2" prepend="AND">
					o.resort_prog_state_cd = '3'
				</isEqual>
				<isEqual property="deptTrgtState" compareValue="3" prepend="AND">
					o.resort_prog_state_cd in ('4','5','6')
				</isEqual>
				<isEqual property="deptTrgtState" compareValue="4" prepend="AND">
					o.resort_prog_state_cd = '7'
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="resortCaseNo">
				<isNotEqual property="resortCaseNo" prepend="AND" compareValue="0">
					o.resort_case_no = #resortCaseNo#
				</isNotEqual>
			</isNotEmpty>
			<isNotEmpty property="excelFlag" prepend="AND">
				<isEqual property="excelFlag" compareValue="Y">
					o.resort_prog_state_cd != '7'
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="excelDwnFlag" prepend="AND">
				o.excel_dwn_flag = #excelDwnFlag:VARCHAR#
			</isNotEmpty>
			<!-- 조회조건에 보존기간 추가 2014.09.22 김도형 추가 시작 -->
			<isNotEmpty property="presvTermCd">
				<isEqual prepend="AND" property="presvTermCheck" compareValue="1">
					r.presv_term_cd <![CDATA[>=]]> #presvTermCd:VARCHAR# 
				</isEqual>
				<isNotEqual prepend="AND" property="presvTermCheck" compareValue="1">
					r.presv_term_cd = #presvTermCd:VARCHAR# 
				</isNotEqual>
			</isNotEmpty>
			<!-- 조회조건에 보존기간 추가 2014.09.22 김도형 추가 종료 -->
		)
	</select>
	
	
	<!-- 공개재분류 대상선정(정보공개청구, 오분류) 조회 -->
	<resultMap id="open-resort-opin-call-result" 	class="rms.eval.openresortopin.domain.OpenResortOpin">
		<result property="recordCenterId" 			column="RECORD_CENTER_ID" 			nullValue=""  />
		<result property="folderId" 				column="FOLDER_ID" 					nullValue=""  />
		<result property="recordId" 				column="RECORD_ID" 					nullValue=""  />
		<result property="resortSeq" 				column="RESORT_SEQ" 				nullValue="0" />
		<result property="resortYyyy" 				column="RESORT_YYYY" 				nullValue=""  />
		<result property="resortCase" 				column="RESORT_CASE" 				nullValue=""  />
		<result property="resortProgStateCd" 		column="RESORT_PROG_STATE_CD" 		nullValue=""  />
		<result property="currentOpenDivCd"			column="CURRENT_OPEN_DIV_CD" 		nullValue=""  />
		<result property="orgCd"					column="ORG_CD" 					nullValue=""  />
		<result property="clssId"					column="CLSS_ID" 					nullValue=""  />
		<result property="title"					column="TITLE"	 					nullValue=""  />
		<result property="recordDetlTypeCd"			column="RECORD_DETL_TYPE_CD"	 	nullValue=""  />
		<result property="recordDetlTypeNm"			column="RECORD_DETL_TYPE_NM"	 	nullValue=""  />
		<result property="deptAbbrNm" 				column="DEPT_ABBR_NM"				nullValue=""  />
		<result property="bisClssNm" 				column="BIS_CLSS_NM"				nullValue=""  />
		<result property="openGrade"				column="OPEN_GRADE"					nullValue=""  />
		<result property="folderKeepStateCd"		column="folder_keep_state_cd"		nullValue=""  />
		<result property="presvTermCd"				column="PRESV_TERM_CD"				nullValue=""  />
		<result property="fullOrgNm"				column="FULL_ORG_NM"				nullValue=""  />
	</resultMap>
	<!-- 
		SELECT - 공개재분류 대상선정(정보공개청구, 오분류) 조회
	 -->
	<select id="findOpenResortOpinCallPagedList" parameterClass="rms.eval.openresortopin.domain.OpenResortOpin" resultMap="open-resort-opin-call-result">
		SELECT D.*
		FROM (
			SELECT ROWNUM AS rnum
				, C.*
			FROM (
				SELECT t.record_center_id
					, t.folder_id
					, t.record_id
					, t.title
					, t.current_open_div_cd
					, t.open_grade
					, t.org_cd
					, t.record_detl_type_cd
					, t.clss_id
					, t.dept_abbr_nm
					, t.bis_clss_nm
					, t.record_detl_type_nm
					, t.resort_yyyy
					, NVL(t.resort_case, '0') as resort_case
					, t.resort_prog_state_cd
					, t.resort_seq
					, t.folder_keep_state_cd
					, t.presv_term_cd
					, t.full_org_nm
					, t.last_open_resort_yyyy
				FROM (
					SELECT /*+ index(R, TB_RDRECORD_IX01) */ 
					    r.record_center_id
						, r.folder_id
						, r.record_id
						, r.title
						, r.open_div_cd as current_open_div_cd
						, r.open_grade
						, r.org_cd
						, r.record_detl_type_cd
						, r.clss_id
						, r.creat_yyyy
						, f.cur_keep_org_cd
						, f.folder_keep_state_cd
						, (SELECT dept_abbr_nm FROM tb_stdept WHERE org_cd = r.org_cd) as dept_abbr_nm
						, (SELECT full_org_nm FROM tb_storg WHERE org_cd = r.org_cd and record_center_id = r.record_center_id) as full_org_nm
						, (CASE WHEN r.clss_div_cd = '1' THEN (SELECT bis_clss_nm FROM tb_zzbisclss WHERE bis_clss_id = r.clss_id)
							    WHEN r.clss_div_cd = '2' THEN (SELECT unit_nm FROM tb_zzunit WHERE record_center_id = r.record_center_id and unit_cd = r.clss_id)
						   END) as bis_clss_nm
						, (SELECT com_cd_nm FROM tb_zzcomcd WHERE com_type_cd = 'RD03' AND com_cd = r.record_detl_type_cd) as record_detl_type_nm
						, o.resort_yyyy
						, o.resort_case
						, NVL(o.resort_prog_state_cd, '0') as resort_prog_state_cd
						, o.resort_seq
						, f.presv_term_cd
						, r.last_open_resort_yyyy
				    FROM tb_rdfolder f
							INNER JOIN tb_rdrecord r 
							ON  f.record_center_id = r.record_center_id
							AND f.folder_id = r.folder_id
							LEFT OUTER JOIN tb_rdopenresortopin o 
			              ON 	r.record_center_id = o.record_center_id 
			              AND r.record_id = o.record_id 
			              AND o.resort_yyyy = #resortYyyy:VARCHAR# 
			              AND o.resort_case in ('3','4')
		                  AND	o.resort_prog_state_cd != '7'
					WHERE   f.record_center_id = #recordCenterId:VARCHAR#	
				    AND     f.folder_keep_state_cd in ('01', '04')
					<isNotEmpty property="presvTermCd">
						<isEqual property="presvTermCheck" compareValue="1">
							<isEqual prepend="AND" property="presvTermCd" compareValue="25">
								f.presv_term_cd <![CDATA[>=]]> '20'
							</isEqual>
							<isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
								f.presv_term_cd <![CDATA[>=]]> #presvTermCd:VARCHAR#
							</isNotEqual> 					 
						</isEqual>
						<isNotEqual property="presvTermCheck" compareValue="1">
							<isEqual prepend="AND" property="presvTermCd" compareValue="25">
								f.presv_term_cd IN ('20','25') 
							</isEqual>
							<isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
								f.presv_term_cd = #presvTermCd:VARCHAR# 
							</isNotEqual>
						</isNotEqual>
					</isNotEmpty>						
				    <isEqual property="recordGubun" compareValue="1">
						<isNotEmpty property="startYyyy">
							<isNotEmpty property="endYyyy" prepend="AND">
								f.creat_yyyy BETWEEN  #startYyyy:VARCHAR# AND #endYyyy:VARCHAR#
							</isNotEmpty>
						</isNotEmpty>
						<isNotEmpty property="title" prepend="AND">
							f.title like '%' || #title:VARCHAR# || '%'
						</isNotEmpty>
						<isNotEmpty property="orgCd" prepend="AND">
							<isEqual property="searchDivCd" compareValue="1">
								f.cur_keep_org_cd = #orgCd:VARCHAR#
							</isEqual>
							<isEqual property="searchDivCd" compareValue="2">
								f.org_cd = #orgCd:VARCHAR#
							</isEqual>
						</isNotEmpty>						
					</isEqual>
					<isEqual property="recordGubun" compareValue="2">
						<isNotEmpty property="startYyyy">
							<isNotEmpty property="endYyyy" prepend="AND">
								r.creat_yyyy BETWEEN  #startYyyy:VARCHAR# AND #endYyyy:VARCHAR#
							</isNotEmpty>
						</isNotEmpty>
						<isNotEmpty property="title" prepend="AND">
							r.title like '%' || #title:VARCHAR# || '%'
						</isNotEmpty>
						<isNotEmpty property="orgCd" prepend="AND">
							<isEqual property="searchDivCd" compareValue="1">
								f.cur_keep_org_cd = #orgCd:VARCHAR#
							</isEqual>
							<isEqual property="searchDivCd" compareValue="2">
								r.org_cd = #orgCd:VARCHAR#
							</isEqual>
						</isNotEmpty>
					</isEqual>
			    ) t
				WHERE   1 = 1
				<isNotEmpty property="recordDetlTypeCd" prepend="AND">
					t.record_detl_type_cd = #recordDetlTypeCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty property="clssId" prepend="AND">
					t.clss_id = #clssId:VARCHAR#
				</isNotEmpty>
				<isNotEmpty property="currentOpenDivCd" prepend="AND">
					t.current_open_div_cd = #currentOpenDivCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty property="openGrade" prepend="AND">
					t.open_grade = #gradeCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty property="lastOpenResortYyyy" prepend="AND">
					t.last_open_resort_yyyy = #lastOpenResortYyyy:VARCHAR#
				</isNotEmpty>
				<isNotEmpty property="callTrgtState">
					<isEqual property="callTrgtState" compareValue="2" prepend="AND">
						t.resort_prog_state_cd in ('3','4','5','6')
					</isEqual>
					<isEqual property="callTrgtState" compareValue="1" prepend="AND">
						t.resort_prog_state_cd = '2'
					</isEqual>
					<isEqual property="callTrgtState" compareValue="0" prepend="AND">
						t.resort_prog_state_cd in ('0','7')
					</isEqual>		
				</isNotEmpty>
			) C
			WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
		) D
		WHERE D.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
	</select>
	<!-- 
		COUNT - 공개재분류 대상선정(정보공개청구, 오분류) 조회
	 -->
	<select id="countOpenResortOpinCallPagedList" parameterClass="rms.eval.openresortopin.domain.OpenResortOpin" resultClass="java.lang.Long">
		SELECT COUNT(1)
		FROM (
				SELECT /*+ index(R, TB_RDRECORD_IX01) */
					r.record_center_id
					, r.folder_id
					, r.record_id
					, r.title
					, r.open_div_cd as current_open_div_cd
					, r.open_grade
					, r.org_cd
					, r.record_detl_type_cd
					, r.clss_id
					, r.creat_yyyy
					, f.cur_keep_org_cd
					, f.folder_keep_state_cd
					, (SELECT dept_abbr_nm FROM tb_stdept WHERE org_cd = r.org_cd) as dept_abbr_nm
					, (SELECT full_org_nm FROM tb_storg WHERE org_cd = r.org_cd and record_center_id = r.record_center_id) as full_org_nm
					, (CASE WHEN r.clss_div_cd = '1' THEN (SELECT bis_clss_nm FROM tb_zzbisclss WHERE bis_clss_id = r.clss_id)
						    WHEN r.clss_div_cd = '2' THEN (SELECT unit_nm FROM tb_zzunit WHERE record_center_id = r.record_center_id and unit_cd = r.clss_id)
					   END) as bis_clss_nm
					, (SELECT com_cd_nm FROM tb_zzcomcd WHERE com_type_cd = 'RD03' AND com_cd = r.record_detl_type_cd) as record_detl_type_nm
					, o.resort_yyyy
					, o.resort_case
					, NVL(o.resort_prog_state_cd, '0') as resort_prog_state_cd
					, o.resort_seq
					, f.presv_term_cd
					, r.last_open_resort_yyyy
			    FROM tb_rdfolder f
						INNER JOIN tb_rdrecord r 
						ON  f.record_center_id = r.record_center_id
						AND f.folder_id = r.folder_id
						LEFT OUTER JOIN tb_rdopenresortopin o 
		              ON 	r.record_center_id = o.record_center_id 
		              AND r.record_id = o.record_id 
		              AND o.resort_yyyy = #resortYyyy:VARCHAR# 
		              AND o.resort_case in ('3','4')
	                  AND	o.resort_prog_state_cd != '7'
				WHERE   f.record_center_id = #recordCenterId:VARCHAR#  
			    AND     f.folder_keep_state_cd in ('01', '04')
				<isNotEmpty property="presvTermCd">
					<isEqual property="presvTermCheck" compareValue="1">
						<isEqual prepend="AND" property="presvTermCd" compareValue="25">
							f.presv_term_cd <![CDATA[>=]]> '20'
						</isEqual>
						<isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
							f.presv_term_cd <![CDATA[>=]]> #presvTermCd:VARCHAR#
						</isNotEqual> 					 
					</isEqual>
					<isNotEqual property="presvTermCheck" compareValue="1">
						<isEqual prepend="AND" property="presvTermCd" compareValue="25">
							f.presv_term_cd IN ('20','25') 
						</isEqual>
						<isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
							f.presv_term_cd = #presvTermCd:VARCHAR# 
						</isNotEqual>
					</isNotEqual>
				</isNotEmpty>									    
			    <isEqual property="recordGubun" compareValue="1">
					<isNotEmpty property="startYyyy">
						<isNotEmpty property="endYyyy" prepend="AND">
							f.creat_yyyy BETWEEN  #startYyyy:VARCHAR# AND #endYyyy:VARCHAR#
						</isNotEmpty>
					</isNotEmpty>
					<isNotEmpty property="title" prepend="AND">
						f.title like '%' || #title:VARCHAR# || '%'
					</isNotEmpty>
					<isNotEmpty property="orgCd" prepend="AND">
						<isEqual property="searchDivCd" compareValue="1">
							f.cur_keep_org_cd = #orgCd:VARCHAR#
						</isEqual>
						<isEqual property="searchDivCd" compareValue="2">
							f.org_cd = #orgCd:VARCHAR#
						</isEqual>
					</isNotEmpty>						
				</isEqual>
				<isEqual property="recordGubun" compareValue="2">
					<isNotEmpty property="startYyyy">
						<isNotEmpty property="endYyyy" prepend="AND">
							r.creat_yyyy BETWEEN  #startYyyy:VARCHAR# AND #endYyyy:VARCHAR#
						</isNotEmpty>
					</isNotEmpty>
					<isNotEmpty property="title" prepend="AND">
						r.title like '%' || #title:VARCHAR# || '%'
					</isNotEmpty>
					<isNotEmpty property="orgCd" prepend="AND">
						<isEqual property="searchDivCd" compareValue="1">
							f.cur_keep_org_cd = #orgCd:VARCHAR#
						</isEqual>
						<isEqual property="searchDivCd" compareValue="2">
							r.org_cd = #orgCd:VARCHAR#
						</isEqual>
					</isNotEmpty>
				</isEqual>
		    ) t
			WHERE   1 = 1
			<isNotEmpty property="recordDetlTypeCd" prepend="AND">
				t.record_detl_type_cd = #recordDetlTypeCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty property="clssId" prepend="AND">
				t.clss_id = #clssId:VARCHAR#
			</isNotEmpty>
			<isNotEmpty property="currentOpenDivCd" prepend="AND">
				t.current_open_div_cd = #currentOpenDivCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty property="openGrade" prepend="AND">
				t.open_grade = #gradeCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty property="lastOpenResortYyyy" prepend="AND">
				t.last_open_resort_yyyy = #lastOpenResortYyyy:VARCHAR#
			</isNotEmpty>
			<isNotEmpty property="callTrgtState">
				<isEqual property="callTrgtState" compareValue="2" prepend="AND">
					t.resort_prog_state_cd in ('3','4','5','6')
				</isEqual>
				<isEqual property="callTrgtState" compareValue="1" prepend="AND">
					t.resort_prog_state_cd = '2'
				</isEqual>
				<isEqual property="callTrgtState" compareValue="0" prepend="AND">
					t.resort_prog_state_cd in ('0','7')
				</isEqual>		
		</isNotEmpty>
	</select>
	<!-- 공개재분류 대상선정(정보공개청구, 오분류) 일괄선정 대상 조회 -->
	<select id="findOpenResortOpinCallList" parameterClass="rms.eval.openresortopin.domain.OpenResortOpin" resultMap="open-resort-opin-call-result">
		SELECT t.record_center_id
			, t.folder_id
			, t.record_id
			, t.title
			, t.current_open_div_cd
			, t.open_grade
			, t.org_cd
			, t.record_detl_type_cd
			, t.clss_id
			, t.dept_abbr_nm
			, t.bis_clss_nm
			, t.record_detl_type_nm
			, t.resort_yyyy
			, NVL(t.resort_case, '0') as resort_case
			, t.resort_prog_state_cd
			, t.resort_seq
			, t.folder_keep_state_cd
			, t.presv_term_cd
			, t.full_org_nm
		FROM (
			SELECT r.record_center_id
				, r.folder_id
				, r.record_id
				, r.title
				, r.open_div_cd as current_open_div_cd
				, r.open_grade
				, r.org_cd
				, r.record_detl_type_cd
				, r.clss_id
				, r.creat_yyyy
				, f.cur_keep_org_cd
				, f.folder_keep_state_cd
				, (SELECT dept_abbr_nm FROM tb_stdept WHERE org_cd = r.org_cd) as dept_abbr_nm
				, (SELECT full_org_nm FROM tb_storg WHERE org_cd = r.org_cd) as full_org_nm
				, (CASE WHEN r.clss_div_cd = '1' THEN (SELECT bis_clss_nm FROM tb_zzbisclss WHERE bis_clss_id = r.clss_id)
					    WHEN r.clss_div_cd = '2' THEN (SELECT unit_nm FROM tb_zzunit WHERE record_center_id = r.record_center_id and unit_cd = r.clss_id)
				   END) as bis_clss_nm
				, (SELECT com_cd_nm FROM tb_zzcomcd WHERE com_type_cd = 'RD03' AND com_cd = r.record_detl_type_cd) as record_detl_type_nm
				, o.resort_yyyy
				, o.resort_case
				, NVL(o.resort_prog_state_cd, '0') as resort_prog_state_cd
				, o.resort_seq
				, f.presv_term_cd
		    FROM tb_rdfolder f
		    	, tb_rdrecord r LEFT OUTER JOIN tb_rdopenresortopin o 
	              ON 	r.record_center_id = o.record_center_id 
	              AND r.record_id = o.record_id 
	              AND o.resort_yyyy = #resortYyyy:VARCHAR# 
	              AND o.resort_case in ('3','4')
                  AND	o.resort_prog_state_cd != '7'
		    WHERE   r.record_center_id = f.record_center_id
		    AND     r.folder_id = f.folder_id
		    AND     f.folder_keep_state_cd in ('01', '04')
		    ORDER BY r.creat_yyyy DESC
	    ) t
		WHERE   t.record_center_id = #recordCenterId:VARCHAR#
		<isNotEmpty property="startYyyy">
			<isNotEmpty property="endYyyy" prepend="AND">
				t.creat_yyyy BETWEEN  #startYyyy:VARCHAR# AND #endYyyy:VARCHAR#
			</isNotEmpty>
		</isNotEmpty>
		<isNotEmpty property="title" prepend="AND">
			t.title like '%' || #title:VARCHAR# || '%'
		</isNotEmpty>
		<isNotEmpty property="orgCd" prepend="AND">
			<isEqual property="searchDivCd" compareValue="1">
				t.cur_keep_org_cd = #orgCd:VARCHAR#
			</isEqual>
			<isEqual property="searchDivCd" compareValue="2">
				t.org_cd = #orgCd:VARCHAR#
			</isEqual>
		</isNotEmpty>
		<isNotEmpty property="recordDetlTypeCd" prepend="AND">
			t.record_detl_type_cd = #recordDetlTypeCd:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="clssId" prepend="AND">
			t.clss_id = #clssId:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="currentOpenDivCd" prepend="AND">
			t.current_open_div_cd = #currentOpenDivCd:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="openGrade" prepend="AND">
			t.open_grade = #gradeCd:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="lastOpenResortYyyy" prepend="AND">
			t.last_open_resort_yyyy = #lastOpenResortYyyy:VARCHAR#
		</isNotEmpty>
		<isNotEmpty property="callTrgtState">
			<isEqual property="callTrgtState" compareValue="2" prepend="AND">
				t.resort_prog_state_cd in ('3','4','5','6')
			</isEqual>
			<isEqual property="callTrgtState" compareValue="1" prepend="AND">
				t.resort_prog_state_cd = '2'
			</isEqual>
			<isEqual property="callTrgtState" compareValue="0" prepend="AND">
				t.resort_prog_state_cd in ('0','7')
			</isEqual>		
		</isNotEmpty>
		<isNotEmpty property="presvTermCd">
			<isEqual prepend="AND" property="presvTermCheck" compareValue="1">
				t.presv_term_cd <![CDATA[>=]]> #presvTermCd:VARCHAR# 
			</isEqual>
			<isNotEqual prepend="AND" property="presvTermCheck" compareValue="1">
				t.presv_term_cd = #presvTermCd:VARCHAR# 
			</isNotEqual>
		</isNotEmpty>
		ORDER BY t.resort_case DESC
	</select>
	
	
	<!-- 
		SELECT - 공개재분류 대상선정 선정사유 조회
	 -->
	<select id="findOpenResortReasonPagedList" parameterClass="rms.eval.openresortopin.domain.OpenResortReason" resultClass="rms.eval.openresortopin.domain.OpenResortReason">
		SELECT B.*
		FROM (
			SELECT ROWNUM AS rnum
				, A.*
			FROM (
				SELECT record_center_id as recordCenterId
					, resort_yyyy as resortYyyy
					, resort_case as resortCase
					, resort_case_no as resortCaseNo
					, resort_reason as resortReason
					, (SELECT COUNT(*) FROM tb_rdopenresortopin WHERE record_center_id=rs.record_center_id AND resort_yyyy=rs.resort_yyyy AND resort_case=rs.resort_case AND resort_case_no=rs.resort_case_no) as opinTotalCnt
					, (SELECT COUNT(*) FROM tb_rdopenresortopin WHERE record_center_id=rs.record_center_id AND resort_yyyy=rs.resort_yyyy AND resort_case=rs.resort_case AND resort_case_no=rs.resort_case_no AND resort_prog_state_cd IN ('3','4','5','6','7')) as opinEndCnt
				FROM tb_rdopenresortreason rs
				WHERE record_center_id = #recordCenterId:VARCHAR#
				AND   resort_yyyy = #resortYyyy:VARCHAR#
				<isNotEmpty property="resortCase" prepend="AND">
					resort_case = #resortCase:VARCHAR#
				</isNotEmpty>
			) A
			WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
		) B
		WHERE B.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
	</select>
	<!-- 
		COUNT - 공개재분류 대상선정 선정사유 조회
	 -->
	<select id="countOpenResortReasonPagedList" parameterClass="rms.eval.openresortopin.domain.OpenResortReason" resultClass="java.lang.Long">
		SELECT COUNT(1)
		FROM (
			SELECT record_center_id as recordCenterId
				, resort_yyyy as resortYyyy
				, resort_case as resortCase
				, resort_case_no as resortCaseNo
				, resort_reason as resortReason
				, (SELECT COUNT(*) FROM tb_rdopenresortopin WHERE record_center_id=rs.record_center_id AND resort_yyyy=rs.resort_yyyy AND resort_case=rs.resort_case AND resort_case_no=rs.resort_case_no) as opinTotalCnt
				, (SELECT COUNT(*) FROM tb_rdopenresortopin WHERE record_center_id=rs.record_center_id AND resort_yyyy=rs.resort_yyyy AND resort_case=rs.resort_case AND resort_case_no=rs.resort_case_no AND resort_prog_state_cd IN ('3','4','5','6','7')) as opinEndCnt
			FROM tb_rdopenresortreason rs
			WHERE record_center_id = #recordCenterId:VARCHAR#
			AND   resort_yyyy = #resortYyyy:VARCHAR#
			<isNotEmpty property="resortCase" prepend="AND">
				resort_case = #resortCase:VARCHAR#
			</isNotEmpty>
		)
	</select>
	<!-- 
		SELECT - 공개재분류 대상선정 선정사유 조회
	 -->
	<select id="findOpenResortReasonList" parameterClass="rms.eval.openresortopin.domain.OpenResortReason" resultClass="rms.eval.openresortopin.domain.OpenResortReason">
		SELECT record_center_id as recordCenterId
			, resort_yyyy as resortYyyy
			, resort_case as resortCase
			, resort_case_no as resortCaseNo
			, resort_reason as resortReason
			, (SELECT COUNT(*) FROM tb_rdopenresortopin WHERE record_center_id=rs.record_center_id AND resort_yyyy=rs.resort_yyyy AND resort_case=rs.resort_case AND resort_case_no=rs.resort_case_no) as opinTotalCnt
			, (SELECT COUNT(*) FROM tb_rdopenresortopin WHERE record_center_id=rs.record_center_id AND resort_yyyy=rs.resort_yyyy AND resort_case=rs.resort_case AND resort_case_no=rs.resort_case_no AND resort_prog_state_cd IN ('3','4','5','6','7')) as opinEndCnt
		FROM tb_rdopenresortreason rs
		WHERE record_center_id = #recordCenterId:VARCHAR#
		AND   resort_yyyy = #resortYyyy:VARCHAR#
		<isNotEmpty property="resortCase" prepend="AND">
			resort_case = #resortCase:VARCHAR#
		</isNotEmpty>
	</select>
	<!-- 공개재분류 대상선정 선정사유 등록 resortCaseNo Max 값 조회 -->
	<select id="getMaxResortCaseNo" parameterClass="rms.eval.openresortopin.domain.OpenResortOpin" resultClass="string">
		SELECT	nvl(max(resort_case_no),0) as resort_case_no
		FROM	tb_rdopenresortreason
		WHERE	record_center_id = #recordCenterId:VARCHAR#
		AND		resort_yyyy = #resortYyyy:VARCHAR#
		AND		resort_case = #resortCase:VARCHAR#
	</select>
	<!-- 
		INSERT - 공개재분류 대상선정 대상선정사유등록
	 -->
	 <insert id="createOpenResortReason" parameterClass="rms.eval.openresortopin.domain.OpenResortReason">
	 	INSERT INTO tb_rdopenresortreason (record_center_id
	 		, resort_yyyy
	 		, resort_case
	 		, resort_case_no
	 		, resort_reason
	 	) VALUES (#recordCenterId:VARCHAR#
	 		, #resortYyyy:VARCHAR#
	 		, #resortCase:VARCHAR#
	 		, (SELECT nvl(max(resort_case_no),0) FROM tb_rdopenresortreason WHERE record_center_id = #recordCenterId:VARCHAR# AND resort_yyyy = #resortYyyy:VARCHAR# AND resort_case = #resortCase:VARCHAR#) + 1
	 		, #resortReason:VARCHAR#
	 	)
	 </insert>
	 <!-- 
	 	INSERT - 공개재분류 대상선정 정보공개청구, 오분류 대상생성
	  -->
	 <insert id="createOpenResortOpin" parameterClass="rms.eval.openresortopin.domain.OpenResortOpin">
		INSERT INTO tb_rdopenresortopin (record_center_id
			, folder_id
			, record_id
			, resort_yyyy
			, resort_seq
			, resort_case
			, resort_prog_state_cd
			, org_cd
			, current_open_div_cd
			, clss_id
			, resort_case_no
			, discu_trgt_flag
		) VALUES (#recordCenterId:VARCHAR#
			, #folderId:VARCHAR#
			, #recordId:VARCHAR#
			, #resortYyyy:VARCHAR#
			, (SELECT NVL(MAX(RESORT_SEQ), 0) + 1 FROM tb_rdopenresortopin WHERE record_center_id = #recordCenterId:VARCHAR# AND record_id = #recordId#)
			, #resortCase:VARCHAR#
			, #resortProgStateCd:VARCHAR#
			, #orgCd:VARCHAR#
			, #currentOpenDivCd:VARCHAR#
			, #clssId:VARCHAR#
			, #resortCaseNo#
			, '0'
		)
	</insert>
	<!-- 
		UPDATE - 1. 공개재분류 대상선정 정보공개청구, 오분류 대상선정(건테이블 update) 
				 2. 공개재분류 의견등록 처리부서의견 등록 및 수정(건테이블 update)
	 -->
	<update id="updateRecordState" parameterClass="rms.eval.openresortopin.domain.OpenResortOpin">
		UPDATE tb_rdrecord
		SET	   open_resort_prog_state = #openResortProgState:VARCHAR#
		WHERE  record_center_id = #recordCenterId:VARCHAR#
		AND	   record_id = #recordId:VARCHAR#
	</update>
	<!-- 
		DELETE - 공개재분류  대상선정(정보공개청구, 오분류) 선정취소
	 -->
	<delete id="deleteOpenResortOpin" parameterClass="rms.eval.openresortopin.domain.OpenResortOpin">
		DELETE	FROM	tb_rdopenresortopin
		WHERE	record_center_id = #recordCenterId:VARCHAR#
		AND	folder_id = #folderId:VARCHAR#
		AND	record_id = #recordId:VARCHAR#
		AND	resort_yyyy = #resortYyyy:VARCHAR#
		AND	resort_case = #resortCase:VARCHAR#
		AND	resort_seq = #resortSeq#
		AND	resort_prog_state_cd = '2'
	</delete>
	
	<!-- 
		UPDATE - 공개재분류 대상선정 처리부서지정 기록관처리
	 -->
	<update id="updateOpenResortCenterSel" parameterClass="rms.eval.openresortopin.domain.OpenResortOpin">
		UPDATE tb_rdopenresortopin
		SET resort_prog_state_cd = #resortProgStateCd:VARCHAR#
			<!--cubrid , center_sel_flag = #centerSelFlag:VARCHAR#-->
			, handl_org_open_div_cd = #openDivCd:VARCHAR#
			, handl_org_cd = #handlOrgCd:VARCHAR#
		WHERE record_center_id = #recordCenterId:VARCHAR#
		AND record_id = #recordId:VARCHAR#
		AND resort_seq = #resortSeq#	
	</update>
	
	<!-- UPDATE - 공개재분류 대상선정 처리부서지정 처리부서변경 -->
	<update id="updateCurKeepOrgCdChng" parameterClass="rms.eval.openresortopin.domain.OpenResortOpin">
		UPDATE TB_RDFOLDER
		SET BEF_KEEP_ORG_CD = (SELECT CUR_KEEP_ORG_CD FROM TB_RDFOLDER WHERE RECORD_CENTER_ID = #recordCenterId:VARCHAR# AND FOLDER_ID = #folderId:VARCHAR#)
			, CUR_KEEP_ORG_CD = #curKeepOrgCd:VARCHAR#
		WHERE RECORD_CENTER_ID = (SELECT O.RECORD_CENTER_ID FROM  TB_RDOPENRESORTOPIN O WHERE O.RECORD_CENTER_ID = #recordCenterId:VARCHAR# AND O.RESORT_PROG_STATE_CD = #resortProgStateCd:VARCHAR# GROUP BY O.RECORD_CENTER_ID) 
		AND FOLDER_ID = #folderId:VARCHAR#
	</update>
	
	<!-- 
		UPDATE - 공개재분류 대상선정 처리부서지정 지정
	 -->
	<update id="updateOpenResortDept" parameterClass="rms.eval.openresortopin.domain.OpenResortOpin">
		UPDATE tb_rdopenresortopin
		SET handl_org_cd = #handlOrgCd:VARCHAR#
			, handl_org_chrgr_id = #handlOrgChrgrId:VARCHAR#
			, resort_prog_state_cd = #resortProgStateCd:VARCHAR#
			<!--cubrid , center_sel_flag = #centerSelFlag:VARCHAR#-->
		WHERE record_center_id = #recordCenterId:VARCHAR#
		AND record_id = #recordId:VARCHAR#
		AND resort_seq = #resortSeq#
	</update>
	<!-- 
	 	UPDATE - 공개재분류 대상선정 및 취소 5년주기, 이관대상 대상생성
	 -->
	<update id="updateOpenResortOpin" parameterClass="rms.eval.openresortopin.domain.OpenResortOpin">
		UPDATE tb_rdopenresortopin
		SET resort_prog_state_cd = #resortProgStateCd:VARCHAR#
			, resort_case_no = #resortCaseNo#
			<isEqual property="rjctFlag" compareValue="1" open=",">
				rjct_flag = #rjctFlag:VARCHAR#
			</isEqual>
		WHERE	record_center_id = #recordCenterId:VARCHAR#
		AND		folder_id = #folderId:VARCHAR#
		AND		record_id = #recordId:VARCHAR#
		AND		resort_seq = #resortSeq#
		<!-- 이미 처리진행중인 건들은 변경이되면 안되므로 아래의 조건 추가. 2012.09.28 -->
		<isEqual property="resortProgStateCd" compareValue="1" prepend="AND">
			resort_prog_state_cd = '2' 
		</isEqual>
		<isEqual property="resortProgStateCd" compareValue="2" prepend="AND">
			resort_prog_state_cd = '1'
		</isEqual>
	</update>
</sqlMap>
