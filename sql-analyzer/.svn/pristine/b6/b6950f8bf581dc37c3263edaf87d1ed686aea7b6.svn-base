<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="srch.read">
	
	<!-- 
		열람통계_기록관별
		: 열람신청, 접수 횟수를 조회한다.
	 -->
	<resultMap id="findReadStatReqCnt-result" class="rms.srch.read.domain.ReadStat">
		<result property="readAprovCd" 	column="READ_APROV_CD"/>
		<result property="readAprovNm" 	column="READ_APROV_NM"/>
		<result property="sumTotal" 	column="SUM_TOTAL"/>
		<result property="sumJan" 		column="SUM_JAN"/>
		<result property="sumFeb" 		column="SUM_FEB"/>
		<result property="sumMar" 		column="SUM_MAR"/>
		<result property="sumApr" 		column="SUM_APR"/>
		<result property="sumMay" 		column="SUM_MAY"/>
		<result property="sumJun" 		column="SUM_JUN"/>
		<result property="sumJul" 		column="SUM_JUL"/>
		<result property="sumAug" 		column="SUM_AUG"/>
		<result property="sumSep" 		column="SUM_SEP"/>
		<result property="sumOct" 		column="SUM_OCT"/>
		<result property="sumNov" 		column="SUM_NOV"/>
		<result property="sumDec" 		column="SUM_DEC"/>
	</resultMap>
	<select id="findReadStatReqCnt" parameterClass="rms.srch.read.domain.ReadStat" resultMap="findReadStatReqCnt-result">
		SELECT READ_APROV_CD
		      ,'신청횟수' AS READ_APROV_NM
		      ,TRIM (NVL (SUM_JAN+SUM_FEB+SUM_MAR+SUM_APR+SUM_MAY+SUM_JUN+SUM_JUL+SUM_AUG+SUM_SEP+SUM_OCT+SUM_NOV+SUM_DEC,0)) SUM_TOTAL
		      ,TRIM (NVL (R.SUM_JAN,0)) SUM_JAN
		      ,TRIM (NVL (R.SUM_FEB,0)) SUM_FEB
		      ,TRIM (NVL (R.SUM_MAR,0)) SUM_MAR
		      ,TRIM (NVL (R.SUM_APR,0)) SUM_APR
		      ,TRIM (NVL (R.SUM_MAY,0)) SUM_MAY
		      ,TRIM (NVL (R.SUM_JUN,0)) SUM_JUN
		      ,TRIM (NVL (R.SUM_JUL,0)) SUM_JUL
		      ,TRIM (NVL (R.SUM_AUG,0)) SUM_AUG
		      ,TRIM (NVL (R.SUM_SEP,0)) SUM_SEP
		      ,TRIM (NVL (R.SUM_OCT,0)) SUM_OCT
		      ,TRIM (NVL (R.SUM_NOV,0)) SUM_NOV
		      ,TRIM (NVL (R.SUM_DEC,0)) SUM_DEC
		FROM (
		    SELECT '1' AS READ_APROV_CD
		    	  ,SUM (DECODE (SUBSTR(B.read_req_ymd, 5, 2), TO_NUMBER ('1'), 1, 0)) SUM_JAN
		          ,SUM (DECODE (SUBSTR(B.read_req_ymd, 5, 2), TO_NUMBER ('2'), 1, 0)) SUM_FEB
		          ,SUM (DECODE (SUBSTR(B.read_req_ymd, 5, 2), TO_NUMBER ('3'), 1, 0)) SUM_MAR
		          ,SUM (DECODE (SUBSTR(B.read_req_ymd, 5, 2), TO_NUMBER ('4'), 1, 0)) SUM_APR
		          ,SUM (DECODE (SUBSTR(B.read_req_ymd, 5, 2), TO_NUMBER ('5'), 1, 0)) SUM_MAY
		          ,SUM (DECODE (SUBSTR(B.read_req_ymd, 5, 2), TO_NUMBER ('6'), 1, 0)) SUM_JUN
		          ,SUM (DECODE (SUBSTR(B.read_req_ymd, 5, 2), TO_NUMBER ('7'), 1, 0)) SUM_JUL
		          ,SUM (DECODE (SUBSTR(B.read_req_ymd, 5, 2), TO_NUMBER ('8'), 1, 0)) SUM_AUG
		          ,SUM (DECODE (SUBSTR(B.read_req_ymd, 5, 2), TO_NUMBER ('9'), 1, 0)) SUM_SEP
		          ,SUM (DECODE (SUBSTR(B.read_req_ymd, 5, 2), TO_NUMBER ('10'), 1, 0)) SUM_OCT
		          ,SUM (DECODE (SUBSTR(B.read_req_ymd, 5, 2), TO_NUMBER ('11'), 1, 0)) SUM_NOV
		          ,SUM (DECODE (SUBSTR(B.read_req_ymd, 5, 2), TO_NUMBER ('12'), 1, 0)) SUM_DEC
		    FROM (
		        SELECT A.record_center_id
		              ,A.read_reqno
		              ,(SELECT read_req_ymd FROM TB_rdreadreq Z WHERE Z.record_center_id = A.record_center_id AND Z.read_reqno = A.read_reqno) read_req_ymd 
		        FROM  TB_RDFOLDERREADDETL A
		        <dynamic prepend="WHERE">
		            <isEqual property="readCase" compareValue="1">
		            A.record_center_id = #recordCenterId:VARCHAR#
		            </isEqual>
		            <isEqual property="readCase" compareValue="2">
		            A.keep_record_center_id = #recordCenterId:VARCHAR#
		            </isEqual>
		        </dynamic>
		        GROUP BY A.record_center_id, A.read_reqno
		    ) B
		    WHERE SUBSTR(B.READ_REQ_YMD, 0,4) = #readReqYmd:VARCHAR#
		    UNION ALL
		    SELECT '2' AS READ_APROV_CD
		    	  ,SUM (DECODE (SUBSTR(B.read_req_ymd, 5, 2), TO_NUMBER ('1'), 1, 0)) SUM_JAN
		          ,SUM (DECODE (SUBSTR(B.read_req_ymd, 5, 2), TO_NUMBER ('2'), 1, 0)) SUM_FEB
		          ,SUM (DECODE (SUBSTR(B.read_req_ymd, 5, 2), TO_NUMBER ('3'), 1, 0)) SUM_MAR
		          ,SUM (DECODE (SUBSTR(B.read_req_ymd, 5, 2), TO_NUMBER ('4'), 1, 0)) SUM_APR
		          ,SUM (DECODE (SUBSTR(B.read_req_ymd, 5, 2), TO_NUMBER ('5'), 1, 0)) SUM_MAY
		          ,SUM (DECODE (SUBSTR(B.read_req_ymd, 5, 2), TO_NUMBER ('6'), 1, 0)) SUM_JUN
		          ,SUM (DECODE (SUBSTR(B.read_req_ymd, 5, 2), TO_NUMBER ('7'), 1, 0)) SUM_JUL
		          ,SUM (DECODE (SUBSTR(B.read_req_ymd, 5, 2), TO_NUMBER ('8'), 1, 0)) SUM_AUG
		          ,SUM (DECODE (SUBSTR(B.read_req_ymd, 5, 2), TO_NUMBER ('9'), 1, 0)) SUM_SEP
		          ,SUM (DECODE (SUBSTR(B.read_req_ymd, 5, 2), TO_NUMBER ('10'), 1, 0)) SUM_OCT
		          ,SUM (DECODE (SUBSTR(B.read_req_ymd, 5, 2), TO_NUMBER ('11'), 1, 0)) SUM_NOV
		          ,SUM (DECODE (SUBSTR(B.read_req_ymd, 5, 2), TO_NUMBER ('12'), 1, 0)) SUM_DEC
		    FROM (
		        SELECT A.record_center_id
		              ,A.read_reqno
		              ,(SELECT read_req_ymd FROM TB_rdreadreq Z WHERE Z.record_center_id = A.record_center_id AND Z.read_reqno = A.read_reqno) read_req_ymd 
		        FROM  TB_RDRECORDREADDETL A
		        <dynamic prepend="WHERE">
		            <isEqual property="readCase" compareValue="1">
		            A.record_center_id = #recordCenterId:VARCHAR#
		            </isEqual>
		            <isEqual property="readCase" compareValue="2">
		            A.keep_record_center_id = #recordCenterId:VARCHAR#
		            </isEqual>
		        </dynamic>
		        GROUP BY A.record_center_id, A.read_reqno
		    ) B
		    WHERE SUBSTR(B.READ_REQ_YMD, 0,4) = #readReqYmd:VARCHAR#
		) R
	</select>

	<!-- 
		열람통계_기록관별
		: 열람신청, 접수 현황을 조회한다.
	 -->
	<resultMap id="findReadStatList-result" class="rms.srch.read.domain.ReadStat" >
		<result property="readAprovCd" 	column="READ_APROV_CD"/>
		<result property="readAprovNm" 	column="READ_APROV_NM"/>
		<result property="sumTotal" 	column="SUM_TOTAL"/>
		<result property="sumJan" 		column="SUM_JAN"/>
		<result property="sumFeb" 		column="SUM_FEB"/>
		<result property="sumMar" 		column="SUM_MAR"/>
		<result property="sumApr" 		column="SUM_APR"/>
		<result property="sumMay" 		column="SUM_MAY"/>
		<result property="sumJun" 		column="SUM_JUN"/>
		<result property="sumJul" 		column="SUM_JUL"/>
		<result property="sumAug" 		column="SUM_AUG"/>
		<result property="sumSep" 		column="SUM_SEP"/>
		<result property="sumOct" 		column="SUM_OCT"/>
		<result property="sumNov" 		column="SUM_NOV"/>
		<result property="sumDec" 		column="SUM_DEC"/>
	</resultMap>
	<select id="findReadStatList" parameterClass="rms.srch.read.domain.ReadStat" resultMap="findReadStatList-result">
		SELECT R.com_cd AS read_aprov_cd,       R.com_cd_nm AS read_aprov_nm,   R.SUM_TOTAL
		      ,R.SUM_JAN,       R.SUM_FEB,      R.SUM_MAR,      R.SUM_APR,      R.SUM_MAY,       R.SUM_JUN
		      ,R.SUM_JUL,       R.SUM_AUG,      R.SUM_SEP,      R.SUM_OCT,      R.SUM_NOV,       R.SUM_DEC
		FROM ( 
				SELECT 1 order_sno
				     ,'0' com_cd
				     ,'신청' com_cd_nm
				     ,TRIM (NVL (SUM (SUM_JAN+SUM_FEB+SUM_MAR+SUM_APR+SUM_MAY+SUM_JUN+SUM_JUL+SUM_AUG+SUM_SEP+SUM_OCT+SUM_NOV+SUM_DEC),0)) SUM_TOTAL
				     ,TRIM (NVL (SUM (SUM_JAN), 0)) SUM_JAN
				     ,TRIM (NVL (SUM (SUM_FEB), 0)) SUM_FEB
				     ,TRIM (NVL (SUM (SUM_MAR), 0)) SUM_MAR
				     ,TRIM (NVL (SUM (SUM_APR), 0)) SUM_APR
				     ,TRIM (NVL (SUM (SUM_MAY), 0)) SUM_MAY
				     ,TRIM (NVL (SUM (SUM_JUN), 0)) SUM_JUN
				     ,TRIM (NVL (SUM (SUM_JUL), 0)) SUM_JUL
				     ,TRIM (NVL (SUM (SUM_AUG), 0)) SUM_AUG
				     ,TRIM (NVL (SUM (SUM_SEP), 0)) SUM_SEP
				     ,TRIM (NVL (SUM (SUM_OCT), 0)) SUM_OCT
				     ,TRIM (NVL (SUM (SUM_NOV), 0)) SUM_NOV
				     ,TRIM (NVL (SUM (SUM_DEC), 0)) SUM_DEC
				FROM ( SELECT SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('1'), 1, 0)) SUM_JAN
				            ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('2'), 1, 0)) SUM_FEB
				            ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('3'), 1, 0)) SUM_MAR
				            ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('4'), 1, 0)) SUM_APR
				            ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('5'), 1, 0)) SUM_MAY
				            ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('6'), 1, 0)) SUM_JUN
				            ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('7'), 1, 0)) SUM_JUL
				            ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('8'), 1, 0)) SUM_AUG
				            ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('9'), 1, 0)) SUM_SEP
				            ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('10'), 1, 0)) SUM_OCT
				            ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('11'), 1, 0)) SUM_NOV
				            ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('12'), 1, 0)) SUM_DEC
				        FROM TB_RDREADREQ A, TB_RDFOLDERREADDETL B
				        <dynamic prepend="WHERE">
				        	<isEqual property="readCase" compareValue="1">
					        A.record_center_id = #recordCenterId:VARCHAR#
					        </isEqual>
					        <isEqual property="readCase" compareValue="2">
					        B.keep_record_center_id = #recordCenterId:VARCHAR#
					        </isEqual>
				        </dynamic>
                        AND   SUBSTR(A.READ_REQ_YMD, 0,4) = #readReqYmd:VARCHAR#
				        AND   A.record_center_id = B.record_center_id
				        <dynamic>
                        	<isEqual prepend="AND" property="statDiv" compareValue="etc">
								B.record_center_id != B.keep_record_center_id
							</isEqual>
							<isEqual prepend="AND" property="statDiv" compareValue="self">
                            	B.record_center_id = B.keep_record_center_id
							</isEqual>
						</dynamic> 
				        AND   A.read_reqno = B.read_reqno)
				UNION ALL 
				SELECT 1 order_sno
		             ,AA.com_cd
		             ,AA.com_cd_nm
		             ,TRIM (NVL (SUM (SUM_JAN+SUM_FEB+SUM_MAR+SUM_APR+SUM_MAY+SUM_JUN+SUM_JUL+SUM_AUG+SUM_SEP+SUM_OCT+SUM_NOV+SUM_DEC),0)) SUM_TOTAL
		             ,TRIM (NVL (SUM (SUM_JAN), 0)) SUM_JAN
		             ,TRIM (NVL (SUM (SUM_FEB), 0)) SUM_FEB
		             ,TRIM (NVL (SUM (SUM_MAR), 0)) SUM_MAR
		             ,TRIM (NVL (SUM (SUM_APR), 0)) SUM_APR
		             ,TRIM (NVL (SUM (SUM_MAY), 0)) SUM_MAY
		             ,TRIM (NVL (SUM (SUM_JUN), 0)) SUM_JUN
		             ,TRIM (NVL (SUM (SUM_JUL), 0)) SUM_JUL
		             ,TRIM (NVL (SUM (SUM_AUG), 0)) SUM_AUG
		             ,TRIM (NVL (SUM (SUM_SEP), 0)) SUM_SEP
		             ,TRIM (NVL (SUM (SUM_OCT), 0)) SUM_OCT
		             ,TRIM (NVL (SUM (SUM_NOV), 0)) SUM_NOV
		             ,TRIM (NVL (SUM (SUM_DEC), 0)) SUM_DEC
		       FROM 
		       (SELECT B.COM_CD_NM, B.COM_CD
		       FROM TB_ZZCOMCD B
		       WHERE B.COM_TYPE_CD = 'RD25') AA, (SELECT B.read_aprov_cd
		                                                ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('1'), 1, 0)) SUM_JAN
		                                                ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('2'), 1, 0)) SUM_FEB
		                                                ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('3'), 1, 0)) SUM_MAR
		                                                ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('4'), 1, 0)) SUM_APR
		                                                ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('5'), 1, 0)) SUM_MAY
		                                                ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('6'), 1, 0)) SUM_JUN
		                                                ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('7'), 1, 0)) SUM_JUL
		                                                ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('8'), 1, 0)) SUM_AUG
		                                                ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('9'), 1, 0)) SUM_SEP
		                                                ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('10'), 1, 0)) SUM_OCT
		                                                ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('11'), 1, 0)) SUM_NOV
		                                                ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('12'), 1, 0)) SUM_DEC
		                                          FROM TB_RDREADREQ A, TB_RDFOLDERREADDETL B
		                                          <dynamic prepend="WHERE">
										        	<isEqual property="readCase" compareValue="1">
											        A.record_center_id = #recordCenterId:VARCHAR#
											        </isEqual>
											        <isEqual property="readCase" compareValue="2">
											        B.keep_record_center_id = #recordCenterId:VARCHAR#
											        </isEqual>
										        </dynamic>
		                                          AND   SUBSTR(A.READ_REQ_YMD, 0,4) = #readReqYmd:VARCHAR#
		                                          AND   A.record_center_id = B.record_center_id
		                                          <dynamic>
		                                          		<isEqual prepend="AND" property="statDiv" compareValue="etc">
			                                          		B.record_center_id != B.keep_record_center_id
														</isEqual>
														<isEqual prepend="AND" property="statDiv" compareValue="self">
			                                          		B.record_center_id = B.keep_record_center_id
														</isEqual>
		                                          </dynamic>
		                                          AND   A.read_reqno = B.read_reqno 
		                                          GROUP BY B.read_aprov_cd) BB
		       WHERE AA.com_cd = BB.read_aprov_cd (+)
		       <!--cubrid GROUP BY ROWNUM, AA.COM_CD, COM_CD_NM-->
		       GROUP BY COM_CD_NM,AA.COM_CD
		       UNION ALL
		       SELECT 2 
				     ,'0' com_cd
				     ,'신청' com_cd_nm
				     ,TRIM (NVL (SUM (SUM_JAN+SUM_FEB+SUM_MAR+SUM_APR+SUM_MAY+SUM_JUN+SUM_JUL+SUM_AUG+SUM_SEP+SUM_OCT+SUM_NOV+SUM_DEC),0)) SUM_TOTAL
				     ,TRIM (NVL (SUM (SUM_JAN), 0)) SUM_JAN
				     ,TRIM (NVL (SUM (SUM_FEB), 0)) SUM_FEB
				     ,TRIM (NVL (SUM (SUM_MAR), 0)) SUM_MAR
				     ,TRIM (NVL (SUM (SUM_APR), 0)) SUM_APR
				     ,TRIM (NVL (SUM (SUM_MAY), 0)) SUM_MAY
				     ,TRIM (NVL (SUM (SUM_JUN), 0)) SUM_JUN
				     ,TRIM (NVL (SUM (SUM_JUL), 0)) SUM_JUL
				     ,TRIM (NVL (SUM (SUM_AUG), 0)) SUM_AUG
				     ,TRIM (NVL (SUM (SUM_SEP), 0)) SUM_SEP
				     ,TRIM (NVL (SUM (SUM_OCT), 0)) SUM_OCT
				     ,TRIM (NVL (SUM (SUM_NOV), 0)) SUM_NOV
				     ,TRIM (NVL (SUM (SUM_DEC), 0)) SUM_DEC
				FROM ( SELECT SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('1'), 1, 0)) SUM_JAN
				            ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('2'), 1, 0)) SUM_FEB
				            ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('3'), 1, 0)) SUM_MAR
				            ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('4'), 1, 0)) SUM_APR
				            ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('5'), 1, 0)) SUM_MAY
				            ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('6'), 1, 0)) SUM_JUN
				            ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('7'), 1, 0)) SUM_JUL
				            ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('8'), 1, 0)) SUM_AUG
				            ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('9'), 1, 0)) SUM_SEP
				            ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('10'), 1, 0)) SUM_OCT
				            ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('11'), 1, 0)) SUM_NOV
				            ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('12'), 1, 0)) SUM_DEC
				        FROM TB_RDREADREQ A, TB_RDRECORDREADDETL B
				        <dynamic prepend="WHERE">
				        	<isEqual property="readCase" compareValue="1">
					        A.record_center_id = #recordCenterId:VARCHAR#
					        </isEqual>
					        <isEqual property="readCase" compareValue="2">
					        B.keep_record_center_id = #recordCenterId:VARCHAR#
					        </isEqual>
				        </dynamic>
                        AND   SUBSTR(A.READ_REQ_YMD, 0,4) = #readReqYmd:VARCHAR#
				        AND   A.record_center_id = B.record_center_id
				        <dynamic>
                        	<isEqual prepend="AND" property="statDiv" compareValue="etc">
								B.record_center_id != B.keep_record_center_id
							</isEqual>
							<isEqual prepend="AND" property="statDiv" compareValue="self">
                            	B.record_center_id = B.keep_record_center_id
							</isEqual>
						</dynamic> 
				        AND   A.read_reqno = B.read_reqno)
			   UNION ALL
		       SELECT 2 
		             ,AA.com_cd
		             ,AA.com_cd_nm
		             ,TRIM (NVL (SUM (SUM_JAN+SUM_FEB+SUM_MAR+SUM_APR+SUM_MAY+SUM_JUN+SUM_JUL+SUM_AUG+SUM_SEP+SUM_OCT+SUM_NOV+SUM_DEC),0)) SUM_TOTAL
		             ,TRIM (NVL (SUM (SUM_JAN), 0)) SUM_JAN
		             ,TRIM (NVL (SUM (SUM_FEB), 0)) SUM_FEB
		             ,TRIM (NVL (SUM (SUM_MAR), 0)) SUM_MAR
		             ,TRIM (NVL (SUM (SUM_APR), 0)) SUM_APR
		             ,TRIM (NVL (SUM (SUM_MAY), 0)) SUM_MAY
		             ,TRIM (NVL (SUM (SUM_JUN), 0)) SUM_JUN
		             ,TRIM (NVL (SUM (SUM_JUL), 0)) SUM_JUL
		             ,TRIM (NVL (SUM (SUM_AUG), 0)) SUM_AUG
		             ,TRIM (NVL (SUM (SUM_SEP), 0)) SUM_SEP
		             ,TRIM (NVL (SUM (SUM_OCT), 0)) SUM_OCT
		             ,TRIM (NVL (SUM (SUM_NOV), 0)) SUM_NOV
		             ,TRIM (NVL (SUM (SUM_DEC), 0)) SUM_DEC
		       FROM 
		       (SELECT B.COM_CD_NM, B.COM_CD
		       FROM TB_ZZCOMCD B
		       WHERE B.COM_TYPE_CD = 'RD25') AA, (SELECT B.read_aprov_cd
		                                                ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('1'), 1, 0)) SUM_JAN
		                                                ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('2'), 1, 0)) SUM_FEB
		                                                ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('3'), 1, 0)) SUM_MAR
		                                                ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('4'), 1, 0)) SUM_APR
		                                                ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('5'), 1, 0)) SUM_MAY
		                                                ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('6'), 1, 0)) SUM_JUN
		                                                ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('7'), 1, 0)) SUM_JUL
		                                                ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('8'), 1, 0)) SUM_AUG
		                                                ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('9'), 1, 0)) SUM_SEP
		                                                ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('10'), 1, 0)) SUM_OCT
		                                                ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('11'), 1, 0)) SUM_NOV
		                                                ,SUM (DECODE (SUBSTR(A.read_req_ymd, 5, 2), TO_NUMBER ('12'), 1, 0)) SUM_DEC
		                                          FROM TB_RDREADREQ A, TB_RDRECORDREADDETL B
		                                          <dynamic prepend="WHERE">
										        	<isEqual property="readCase" compareValue="1">
											        A.record_center_id = #recordCenterId:VARCHAR#
											        </isEqual>
											        <isEqual property="readCase" compareValue="2">
											        B.keep_record_center_id = #recordCenterId:VARCHAR#
											        </isEqual>
										        </dynamic>
		                                          AND   SUBSTR(A.READ_REQ_YMD, 0,4) = #readReqYmd:VARCHAR#
		                                          AND   A.record_center_id = B.record_center_id
		                                          <dynamic>
		                                          		<isEqual prepend="AND" property="statDiv" compareValue="etc">
			                                          		B.record_center_id != B.keep_record_center_id
														</isEqual>
														<isEqual prepend="AND" property="statDiv" compareValue="self">
			                                          		B.record_center_id = B.keep_record_center_id
														</isEqual>
		                                          </dynamic>
		                                          AND   A.read_reqno = B.read_reqno 
		                                          GROUP BY B.read_aprov_cd) BB
		       WHERE AA.com_cd = BB.read_aprov_cd (+)
		       <!--cubrid GROUP BY ROWNUM, AA.COM_CD, COM_CD_NM) R-->
		       GROUP BY COM_CD_NM,AA.COM_CD) R
		ORDER BY R.order_sno, R.com_cd
	</select>
	
	<!-- 
		열람통계_처리부서별
		: 신청부서별 목록을 조회한다.
	 -->
	<resultMap id="findReadStatReqOrgList-result" class="rms.srch.read.domain.ReadStat">
		<result property="orgCd" 	column="ORG_CD"/>
		<result property="orgNm" 	column="ORG_NM"/>
		<result property="orgAbbrNm" column="ORG_ABBR_NM"/>
		<result property="gubun" 	column="GUBUN"/>
		<result property="totCnt" 	column="TOT_CNT"/>
		<result property="totReq" 	column="TOT_REQ"/>
		<result property="cntJan" 	column="CNT_JAN"/>
		<result property="reqJan" 	column="REQ_JAN"/>
		<result property="cntFeb" 	column="CNT_FEB"/>
		<result property="reqFeb" 	column="REQ_FEB"/>
		<result property="cntMar" 	column="CNT_MAR"/>
		<result property="reqMar" 	column="REQ_MAR"/>
		<result property="cntApr" 	column="CNT_APR"/>
		<result property="reqApr" 	column="REQ_APR"/>
		<result property="cntMay" 	column="CNT_MAY"/>
		<result property="reqMay" 	column="REQ_MAY"/>
		<result property="cntJun" 	column="CNT_JUN"/>
		<result property="reqJun" 	column="REQ_JUN"/>
		<result property="cntJul" 	column="CNT_JUL"/>
		<result property="reqJul" 	column="REQ_JUL"/>
		<result property="cntAug" 	column="CNT_AUG"/>
		<result property="reqAug" 	column="REQ_AUG"/>
		<result property="cntSep" 	column="CNT_SEP"/>
		<result property="reqSep" 	column="REQ_SEP"/>
		<result property="cntOct" 	column="CNT_OCT"/>
		<result property="reqOct" 	column="REQ_OCT"/>
		<result property="cntNov" 	column="CNT_NOV"/>
		<result property="reqNov" 	column="REQ_NOV"/>
		<result property="cntDec" 	column="CNT_DEC"/>
		<result property="reqDec" 	column="REQ_DEC"/>
	</resultMap>
	<select id="findReadStatReqOrgList" parameterClass="rms.srch.read.domain.ReadStat" resultMap="findReadStatReqOrgList-result">
	    SELECT ORG_CD 
		      ,ORG_NM
		      ,ORG_ABBR_NM
		      ,GUBUN
		      ,TRIM (NVL(TOT_CNT, '0')) AS TOT_CNT
		      ,TRIM (NVL(TOT_REQ, '0')) AS TOT_REQ
		      ,TRIM (NVL(CNT_JAN, '0')) AS CNT_JAN
		      ,TRIM (NVL(REQ_JAN, '0')) AS REQ_JAN
		      ,TRIM (NVL(CNT_FEB, '0')) AS CNT_FEB
		      ,TRIM (NVL(REQ_FEB, '0')) AS REQ_FEB
		      ,TRIM (NVL(CNT_MAR, '0')) AS CNT_MAR
		      ,TRIM (NVL(REQ_MAR, '0')) AS REQ_MAR
		      ,TRIM (NVL(CNT_APR, '0')) AS CNT_APR
		      ,TRIM (NVL(REQ_APR, '0')) AS REQ_APR
		      ,TRIM (NVL(CNT_MAY, '0')) AS CNT_MAY
		      ,TRIM (NVL(REQ_MAY, '0')) AS REQ_MAY
		      ,TRIM (NVL(CNT_JUN, '0')) AS CNT_JUN
		      ,TRIM (NVL(REQ_JUN, '0')) AS REQ_JUN
		      ,TRIM (NVL(CNT_JUL, '0')) AS CNT_JUL
		      ,TRIM (NVL(REQ_JUL, '0')) AS REQ_JUL
		      ,TRIM (NVL(CNT_AUG, '0')) AS CNT_AUG
		      ,TRIM (NVL(REQ_AUG, '0')) AS REQ_AUG
		      ,TRIM (NVL(CNT_SEP, '0')) AS CNT_SEP
		      ,TRIM (NVL(REQ_SEP, '0')) AS REQ_SEP
		      ,TRIM (NVL(CNT_OCT, '0')) AS CNT_OCT
		      ,TRIM (NVL(REQ_OCT, '0')) AS REQ_OCT
		      ,TRIM (NVL(CNT_NOV, '0')) AS CNT_NOV
		      ,TRIM (NVL(REQ_NOV, '0')) AS REQ_NOV
		      ,TRIM (NVL(CNT_DEC, '0')) AS CNT_DEC
		      ,TRIM (NVL(REQ_DEC, '0')) AS REQ_DEC
		FROM (SELECT (SELECT Z.ORG_NM FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID = #recordCenterId:VARCHAR# AND Z.ORG_CD = A.READ_USER_DEPT_ID) AS ORG_NM
					,(SELECT Z.ORG_ABBR_NM FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID = #recordCenterId:VARCHAR# AND Z.ORG_CD = A.READ_USER_DEPT_ID) AS ORG_ABBR_NM
					,A.READ_USER_DEPT_ID AS ORG_CD, NVL(B.GUBUN, '기록물철') GUBUN, TOT_CNT, TOT_REQ, CNT_JAN
		            ,REQ_JAN, CNT_FEB, REQ_FEB, CNT_MAR, REQ_MAR
		            ,CNT_APR, REQ_APR, CNT_MAY, REQ_MAY, CNT_JUN
		            ,REQ_JUN, CNT_JUL, REQ_JUL, CNT_AUG, REQ_AUG
		            ,CNT_SEP, REQ_SEP, CNT_OCT, REQ_OCT, CNT_NOV
		            ,REQ_NOV,CNT_DEC,REQ_DEC, B.RECORD_CENTER_ID
		    FROM (SELECT RECORD_CENTER_ID, READ_USER_DEPT_ID FROM TB_RDREADREQ  WHERE RECORD_CENTER_ID = #recordCenterId:VARCHAR# GROUP BY RECORD_CENTER_ID, READ_USER_DEPT_ID) A,
		         (SELECT K.READ_USER_DEPT_ID,
		                '기록물철' AS GUBUN,
		                K.RECORD_CENTER_ID,
		                SUM(NVL(CNT, 0)) TOT_CNT,
		                SUM(NVL(CASE WHEN K.READ_REQNO IS NOT NULL THEN 1 ELSE 0 END, '0')) TOT_REQ,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '01' THEN K.CNT END, 0)) CNT_JAN,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '01' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_JAN,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '02' THEN K.CNT END, 0)) CNT_FEB,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '02' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_FEB,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '03' THEN K.CNT END, 0)) CNT_MAR,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '03' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_MAR,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '04' THEN K.CNT END, 0)) CNT_APR,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '04' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_APR,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '05' THEN K.CNT END, 0)) CNT_MAY,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '05' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_MAY,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '06' THEN K.CNT END, 0)) CNT_JUN,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '06' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_JUN,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '07' THEN K.CNT END, 0)) CNT_JUL,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '07' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_JUL,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '08' THEN K.CNT END, 0)) CNT_AUG,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '08' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_AUG,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '09' THEN K.CNT END, 0)) CNT_SEP,                                                 
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '09' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_SEP,                                                                                               
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '10' THEN K.CNT END, 0)) CNT_OCT,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '10' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_OCT,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '11' THEN K.CNT END, 0)) CNT_NOV,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '11' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_NOV,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '12' THEN K.CNT END, 0)) CNT_DEC,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '12' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_DEC
		        FROM (
		            SELECT R.RECORD_CENTER_ID, R.CNT, R.READ_REQ_YMD, R.READ_REQNO, R.READ_USER_DEPT_ID
		            FROM (
		                SELECT COUNT(1) CNT, SUBSTR(A.READ_REQ_YMD, 5, 2) AS READ_REQ_YMD, B.RECORD_CENTER_ID, A.READ_REQNO, A.READ_USER_DEPT_ID
		                FROM TB_RDREADREQ A, TB_RDFOLDERREADDETL B
		                WHERE B.RECORD_CENTER_ID = #recordCenterId:VARCHAR#
		                AND SUBSTR(A.READ_REQ_YMD, 0,4) = #readReqYmd:VARCHAR#
		                AND A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
		                AND A.READ_REQNO = B.READ_REQNO
		                GROUP BY  SUBSTR(A.READ_REQ_YMD, 5,2), B.RECORD_CENTER_ID, A.READ_REQNO, A.READ_USER_DEPT_ID
		            ) R
		            GROUP BY R.CNT, R.READ_USER_DEPT_ID, R.READ_REQ_YMD, R.RECORD_CENTER_ID, R.READ_REQNO
		        ) K
		        GROUP BY K.RECORD_CENTER_ID, K.READ_USER_DEPT_ID) B
		    WHERE A.record_center_id = B.record_center_id (+)
		    AND   A.read_user_dept_id = B.read_user_dept_id (+)
		    UNION ALL
		    SELECT (SELECT Z.ORG_NM FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID = #recordCenterId:VARCHAR# AND Z.ORG_CD = A.READ_USER_DEPT_ID) AS ORG_NM
		    	  ,(SELECT Z.ORG_ABBR_NM FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID = #recordCenterId:VARCHAR# AND Z.ORG_CD = A.READ_USER_DEPT_ID) AS ORG_ABBR_NM
		    	  ,A.READ_USER_DEPT_ID,NVL(B.GUBUN, '기록물건') GUBUN, TOT_CNT, TOT_REQ, CNT_JAN
		          ,REQ_JAN, CNT_FEB, REQ_FEB, CNT_MAR, REQ_MAR
		          ,CNT_APR, REQ_APR, CNT_MAY, REQ_MAY, CNT_JUN
		          ,REQ_JUN, CNT_JUL, REQ_JUL, CNT_AUG, REQ_AUG
		          ,CNT_SEP, REQ_SEP, CNT_OCT, REQ_OCT, CNT_NOV
		          ,REQ_NOV,CNT_DEC,REQ_DEC, B.RECORD_CENTER_ID
		    FROM (SELECT RECORD_CENTER_ID, READ_USER_DEPT_ID FROM TB_RDREADREQ  WHERE RECORD_CENTER_ID = #recordCenterId:VARCHAR# GROUP BY RECORD_CENTER_ID, READ_USER_DEPT_ID) A,
		         (SELECT K.READ_USER_DEPT_ID,
		                '기록물건' AS GUBUN,
		                K.RECORD_CENTER_ID,
		                SUM(NVL(CNT, 0)) TOT_CNT,
		                SUM(NVL(CASE WHEN K.READ_REQNO IS NOT NULL THEN 1 ELSE 0 END, '0')) TOT_REQ,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '01' THEN K.CNT END, 0)) CNT_JAN,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '01' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_JAN,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '02' THEN K.CNT END, 0)) CNT_FEB,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '02' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_FEB,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '03' THEN K.CNT END, 0)) CNT_MAR,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '03' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_MAR,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '04' THEN K.CNT END, 0)) CNT_APR,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '04' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_APR,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '05' THEN K.CNT END, 0)) CNT_MAY,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '05' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_MAY,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '06' THEN K.CNT END, 0)) CNT_JUN,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '06' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_JUN,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '07' THEN K.CNT END, 0)) CNT_JUL,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '07' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_JUL,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '08' THEN K.CNT END, 0)) CNT_AUG,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '08' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_AUG,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '09' THEN K.CNT END, 0)) CNT_SEP,                                                 
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '09' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_SEP,                                                                                               
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '10' THEN K.CNT END, 0)) CNT_OCT,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '10' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_OCT,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '11' THEN K.CNT END, 0)) CNT_NOV,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '11' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_NOV,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '12' THEN K.CNT END, 0)) CNT_DEC,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '12' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_DEC
		        FROM (
		            SELECT R.RECORD_CENTER_ID, R.CNT, R.READ_REQ_YMD, R.READ_REQNO, R.READ_USER_DEPT_ID
		            FROM (
		                SELECT COUNT(1) CNT, SUBSTR(A.READ_REQ_YMD, 5, 2) AS READ_REQ_YMD, B.RECORD_CENTER_ID, A.READ_REQNO, A.READ_USER_DEPT_ID
		                FROM TB_RDREADREQ A, TB_RDRECORDREADDETL B
		                WHERE B.RECORD_CENTER_ID = #recordCenterId:VARCHAR#
		                AND SUBSTR(A.READ_REQ_YMD, 0,4) = #readReqYmd:VARCHAR#
		                AND A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
		                AND A.READ_REQNO = B.READ_REQNO
		                GROUP BY  SUBSTR(A.READ_REQ_YMD, 5,2), B.RECORD_CENTER_ID, A.READ_REQNO, A.READ_USER_DEPT_ID
		            ) R
		            GROUP BY R.CNT, R.READ_USER_DEPT_ID, R.READ_REQ_YMD, R.RECORD_CENTER_ID, R.READ_REQNO
		        ) K
		        GROUP BY K.RECORD_CENTER_ID, K.READ_USER_DEPT_ID) B
		    WHERE A.record_center_id = B.record_center_id (+)
		    AND   A.read_user_dept_id = B.read_user_dept_id (+)
		) S
		ORDER BY S.ORG_CD, S.GUBUN DESC
	</select>
	
	<!-- 
		열람통계_처리부서별
		: 접수부서별 목록을 조회한다.
	 -->
	<resultMap id="findReadStatAcceptOrgList-result" class="rms.srch.read.domain.ReadStat">
		<result property="orgCd" 	column="ORG_CD"/>
		<result property="orgNm" 	column="ORG_NM"/>
		<result property="orgAbbrNm" column="ORG_ABBR_NM"/>
		<result property="gubun" 	column="GUBUN"/>
		<result property="totCnt" 	column="TOT_CNT"/>
		<result property="totReq" 	column="TOT_REQ"/>
		<result property="cntJan" 	column="CNT_JAN"/>
		<result property="reqJan" 	column="REQ_JAN"/>
		<result property="cntFeb" 	column="CNT_FEB"/>
		<result property="reqFeb" 	column="REQ_FEB"/>
		<result property="cntMar" 	column="CNT_MAR"/>
		<result property="reqMar" 	column="REQ_MAR"/>
		<result property="cntApr" 	column="CNT_APR"/>
		<result property="reqApr" 	column="REQ_APR"/>
		<result property="cntMay" 	column="CNT_MAY"/>
		<result property="reqMay" 	column="REQ_MAY"/>
		<result property="cntJun" 	column="CNT_JUN"/>
		<result property="reqJun" 	column="REQ_JUN"/>
		<result property="cntJul" 	column="CNT_JUL"/>
		<result property="reqJul" 	column="REQ_JUL"/>
		<result property="cntAug" 	column="CNT_AUG"/>
		<result property="reqAug" 	column="REQ_AUG"/>
		<result property="cntSep" 	column="CNT_SEP"/>
		<result property="reqSep" 	column="REQ_SEP"/>
		<result property="cntOct" 	column="CNT_OCT"/>
		<result property="reqOct" 	column="REQ_OCT"/>
		<result property="cntNov" 	column="CNT_NOV"/>
		<result property="reqNov" 	column="REQ_NOV"/>
		<result property="cntDec" 	column="CNT_DEC"/>
		<result property="reqDec" 	column="REQ_DEC"/>
	</resultMap>
	<select id="findReadStatAcceptOrgList" parameterClass="rms.srch.read.domain.ReadStat" resultMap="findReadStatAcceptOrgList-result">
		    SELECT ORG_CD 
		      ,ORG_NM
		      ,ORG_ABBR_NM
		      ,GUBUN
		      ,TRIM (NVL(TOT_CNT, '0')) AS TOT_CNT
		      ,TRIM (NVL(TOT_REQ, '0')) AS TOT_REQ
		      ,TRIM (NVL(CNT_JAN, '0')) AS CNT_JAN
		      ,TRIM (NVL(REQ_JAN, '0')) AS REQ_JAN
		      ,TRIM (NVL(CNT_FEB, '0')) AS CNT_FEB
		      ,TRIM (NVL(REQ_FEB, '0')) AS REQ_FEB
		      ,TRIM (NVL(CNT_MAR, '0')) AS CNT_MAR
		      ,TRIM (NVL(REQ_MAR, '0')) AS REQ_MAR
		      ,TRIM (NVL(CNT_APR, '0')) AS CNT_APR
		      ,TRIM (NVL(REQ_APR, '0')) AS REQ_APR
		      ,TRIM (NVL(CNT_MAY, '0')) AS CNT_MAY
		      ,TRIM (NVL(REQ_MAY, '0')) AS REQ_MAY
		      ,TRIM (NVL(CNT_JUN, '0')) AS CNT_JUN
		      ,TRIM (NVL(REQ_JUN, '0')) AS REQ_JUN
		      ,TRIM (NVL(CNT_JUL, '0')) AS CNT_JUL
		      ,TRIM (NVL(REQ_JUL, '0')) AS REQ_JUL
		      ,TRIM (NVL(CNT_AUG, '0')) AS CNT_AUG
		      ,TRIM (NVL(REQ_AUG, '0')) AS REQ_AUG
		      ,TRIM (NVL(CNT_SEP, '0')) AS CNT_SEP
		      ,TRIM (NVL(REQ_SEP, '0')) AS REQ_SEP
		      ,TRIM (NVL(CNT_OCT, '0')) AS CNT_OCT
		      ,TRIM (NVL(REQ_OCT, '0')) AS REQ_OCT
		      ,TRIM (NVL(CNT_NOV, '0')) AS CNT_NOV
		      ,TRIM (NVL(REQ_NOV, '0')) AS REQ_NOV
		      ,TRIM (NVL(CNT_DEC, '0')) AS CNT_DEC
		      ,TRIM (NVL(REQ_DEC, '0')) AS REQ_DEC
		FROM (
		    SELECT (SELECT Z.ORG_NM FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID = #recordCenterId:VARCHAR# AND Z.ORG_CD = A.ORG_CD) AS ORG_NM
		    	  ,(SELECT Z.ORG_ABBR_NM FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID = #recordCenterId:VARCHAR# AND Z.ORG_CD = A.ORG_CD) AS ORG_ABBR_NM
		    	  ,A.ORG_CD,NVL(B.GUBUN, '기록물철') GUBUN, TOT_CNT, TOT_REQ, CNT_JAN
		          ,REQ_JAN, CNT_FEB, REQ_FEB, CNT_MAR, REQ_MAR
		          ,CNT_APR, REQ_APR, CNT_MAY, REQ_MAY, CNT_JUN
		          ,REQ_JUN, CNT_JUL, REQ_JUL, CNT_AUG, REQ_AUG
		          ,CNT_SEP, REQ_SEP, CNT_OCT, REQ_OCT, CNT_NOV
		          ,REQ_NOV,CNT_DEC,REQ_DEC, KEEP_RECORD_CENTER_ID
		    FROM (
		         SELECT record_Center_id, org_cd
		         FROM TB_RDFOLDER Z
		         <!--cubrid WHERE (RECORD_CENTER_ID, FOLDER_ID) 
		         IN (SELECT KEEP_RECORD_CENTER_ID, FOLDER_ID -->
		         WHERE 
		         EXISTS (SELECT 1
			 FROM TB_RDFOLDERREADDETL WHERE KEEP_RECORD_CENTER_ID = #recordCenterId:VARCHAR#)
			 <!--cubrid-->
			 AND RECORD_CENTER_ID = Z.RECORD_CENTER_ID
			 AND FOLDER_ID = Z.FOLDER_ID
		         GROUP BY record_center_id, org_cd
		         UNION
		         SELECT record_Center_id, org_cd
		         FROM TB_RDRECORD Z
		         <!--cubrid WHERE (RECORD_CENTER_ID, RECORD_ID) 
		         IN (SELECT KEEP_RECORD_CENTER_ID, RECORD_ID -->
		         WHERE
		         EXISTS (SELECT 1
			 FROM TB_RDRECORDREADDETL WHERE KEEP_RECORD_CENTER_ID = #recordCenterId:VARCHAR#)
			 <!--cubrid-->
			 AND RECORD_CENTER_ID = Z.RECORD_CENTER_ID
			 AND FOLDER_ID = Z.FOLDER_ID
		         GROUP BY record_center_id, org_cd
		        ) A, ( SELECT K.ORG_CD,
		                '기록물철' AS GUBUN,
		                K.KEEP_RECORD_CENTER_ID,
		                SUM(NVL(CNT, 0)) TOT_CNT,
		                SUM(NVL(CASE WHEN K.READ_REQNO IS NOT NULL THEN 1 ELSE 0 END, '0')) TOT_REQ,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '01' THEN K.CNT END, 0)) CNT_JAN,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '01' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_JAN,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '02' THEN K.CNT END, 0)) CNT_FEB,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '02' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_FEB,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '03' THEN K.CNT END, 0)) CNT_MAR,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '03' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_MAR,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '04' THEN K.CNT END, 0)) CNT_APR,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '04' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_APR,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '05' THEN K.CNT END, 0)) CNT_MAY,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '05' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_MAY,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '06' THEN K.CNT END, 0)) CNT_JUN,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '06' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_JUN,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '07' THEN K.CNT END, 0)) CNT_JUL,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '07' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_JUL,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '08' THEN K.CNT END, 0)) CNT_AUG,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '08' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_AUG,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '09' THEN K.CNT END, 0)) CNT_SEP,                                                 
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '09' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_SEP,                                                                                               
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '10' THEN K.CNT END, 0)) CNT_OCT,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '10' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_OCT,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '11' THEN K.CNT END, 0)) CNT_NOV,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '11' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_NOV,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '12' THEN K.CNT END, 0)) CNT_DEC,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '12' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_DEC
		            FROM (
		                SELECT R.KEEP_RECORD_CENTER_ID, R.CNT, R.READ_REQ_YMD, R.READ_REQNO, R.ORG_CD
		                FROM (
		                    SELECT COUNT(1) CNT, SUBSTR(A.READ_REQ_YMD, 5, 2) AS READ_REQ_YMD, B.KEEP_RECORD_CENTER_ID, A.READ_REQNO, C.ORG_CD
		                    FROM TB_RDREADREQ A, TB_RDFOLDERREADDETL B, TB_RDFOLDER C
		                    WHERE B.KEEP_RECORD_CENTER_ID = #recordCenterId:VARCHAR#
		                    AND SUBSTR(A.READ_REQ_YMD, 0,4) = #readReqYmd:VARCHAR#
		                    AND A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
		                    AND A.READ_REQNO = B.READ_REQNO
		                    AND B.KEEP_RECORD_CENTER_ID = C.RECORD_CENTER_ID
		                    AND B.FOLDER_ID = C.FOLDER_ID
		                    GROUP BY  SUBSTR(A.READ_REQ_YMD, 5,2), B.KEEP_RECORD_CENTER_ID, A.READ_REQNO, C.ORG_CD
		                ) R
		                GROUP BY R.CNT, R.ORG_CD, R.READ_REQ_YMD, R.KEEP_RECORD_CENTER_ID, R.READ_REQNO
		            ) K
		            GROUP BY K.KEEP_RECORD_CENTER_ID, K.ORG_CD) B
		    WHERE A.RECORD_CENTER_ID = B.KEEP_RECORD_CENTER_ID (+)
		    AND A.ORG_CD = B.ORG_CD (+)
		    UNION ALL    
		    SELECT (SELECT Z.ORG_NM FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID = #recordCenterId:VARCHAR# AND Z.ORG_CD = A.ORG_CD) AS ORG_NM
		    	  ,(SELECT Z.ORG_ABBR_NM FROM TB_STORG Z WHERE Z.RECORD_CENTER_ID = #recordCenterId:VARCHAR# AND Z.ORG_CD = A.ORG_CD) AS ORG_ABBR_NM
		    	  , A.ORG_CD, NVL(B.GUBUN, '기록물건') GUBUN, TOT_CNT, TOT_REQ, CNT_JAN
		          ,REQ_JAN, CNT_FEB, REQ_FEB, CNT_MAR, REQ_MAR
		          ,CNT_APR, REQ_APR, CNT_MAY, REQ_MAY, CNT_JUN
		          ,REQ_JUN, CNT_JUL, REQ_JUL, CNT_AUG, REQ_AUG
		          ,CNT_SEP, REQ_SEP, CNT_OCT, REQ_OCT, CNT_NOV
		          ,REQ_NOV,CNT_DEC,REQ_DEC, KEEP_RECORD_CENTER_ID
		    FROM (
		         SELECT record_Center_id, org_cd
		         FROM TB_RDFOLDER Z
		         <!--cubrid WHERE (RECORD_CENTER_ID, FOLDER_ID) 
		         IN (SELECT KEEP_RECORD_CENTER_ID, FOLDER_ID -->
		         WHERE
		         EXISTS (SELECT 1
			 FROM TB_RDFOLDERREADDETL WHERE KEEP_RECORD_CENTER_ID = #recordCenterId:VARCHAR#)
			 <!--cubrid-->
			 AND RECORD_CENTER_ID = Z.RECORD_CENTER_ID
			 AND FOLDER_ID = Z.FOLDER_ID
		         GROUP BY record_center_id, org_cd
		         UNION
		         SELECT record_Center_id, org_cd
		         FROM TB_RDRECORD Z
		         <!--cubrid WHERE (RECORD_CENTER_ID, RECORD_ID) 
		         IN (SELECT KEEP_RECORD_CENTER_ID, RECORD_ID-->
		         WHERE
		         EXISTS (SELECT 1
			 FROM TB_RDRECORDREADDETL WHERE KEEP_RECORD_CENTER_ID = #recordCenterId:VARCHAR#)
			 <!--cubrid-->
			 AND RECORD_CENTER_ID = Z.RECORD_CENTER_ID
                         AND FOLDER_ID = Z.FOLDER_ID
		         GROUP BY record_center_id, org_cd
		        ) A, ( SELECT K.ORG_CD,
		                '기록물건' AS GUBUN,
		                K.KEEP_RECORD_CENTER_ID,
		                SUM(NVL(CNT, 0)) TOT_CNT,
		                SUM(NVL(CASE WHEN K.READ_REQNO IS NOT NULL THEN 1 ELSE 0 END, '0')) TOT_REQ,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '01' THEN K.CNT END, 0)) CNT_JAN,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '01' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_JAN,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '02' THEN K.CNT END, 0)) CNT_FEB,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '02' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_FEB,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '03' THEN K.CNT END, 0)) CNT_MAR,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '03' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_MAR,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '04' THEN K.CNT END, 0)) CNT_APR,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '04' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_APR,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '05' THEN K.CNT END, 0)) CNT_MAY,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '05' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_MAY,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '06' THEN K.CNT END, 0)) CNT_JUN,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '06' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_JUN,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '07' THEN K.CNT END, 0)) CNT_JUL,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '07' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_JUL,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '08' THEN K.CNT END, 0)) CNT_AUG,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '08' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_AUG,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '09' THEN K.CNT END, 0)) CNT_SEP,                                                 
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '09' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_SEP,                                                                                               
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '10' THEN K.CNT END, 0)) CNT_OCT,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '10' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_OCT,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '11' THEN K.CNT END, 0)) CNT_NOV,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '11' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_NOV,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '12' THEN K.CNT END, 0)) CNT_DEC,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '12' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_DEC
		            FROM (
		                SELECT R.KEEP_RECORD_CENTER_ID, R.CNT, R.READ_REQ_YMD, R.READ_REQNO, R.ORG_CD
		                FROM (
		                    SELECT COUNT(1) CNT, SUBSTR(A.READ_REQ_YMD, 5, 2) AS READ_REQ_YMD, B.KEEP_RECORD_CENTER_ID, A.READ_REQNO, C.ORG_CD
		                    FROM TB_RDREADREQ A, TB_RDRECORDREADDETL B, TB_RDRECORD C
		                    WHERE B.KEEP_RECORD_CENTER_ID = #recordCenterId:VARCHAR#
		                    AND SUBSTR(A.READ_REQ_YMD, 0,4) = #readReqYmd:VARCHAR#
		                    AND A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
		                    AND A.READ_REQNO = B.READ_REQNO
		                    AND B.KEEP_RECORD_CENTER_ID = C.RECORD_CENTER_ID
		                    AND B.RECORD_ID = C.RECORD_ID
		                    GROUP BY  SUBSTR(A.READ_REQ_YMD, 5,2), B.KEEP_RECORD_CENTER_ID, A.READ_REQNO, C.ORG_CD
		                ) R
		                GROUP BY R.CNT, R.ORG_CD, R.READ_REQ_YMD, R.KEEP_RECORD_CENTER_ID, R.READ_REQNO
		            ) K
		            GROUP BY K.KEEP_RECORD_CENTER_ID, K.ORG_CD) B
		    WHERE A.RECORD_CENTER_ID = B.KEEP_RECORD_CENTER_ID (+)
		    AND A.ORG_CD = B.ORG_CD (+)
		) S
		ORDER BY S.ORG_NM, S.GUBUN DESC
	</select>
	
	<!-- 
		열람통계_분류체계별
		: 분류체계별 목록을 조회한다.
	 -->
	<resultMap id="findReadStatClssList-result" class="rms.srch.read.domain.ReadStat">
		<result property="orgCd" 	column="ORG_CD"/>
		<result property="orgNm" 	column="ORG_NM"/>
		<result property="gubun" 	column="GUBUN"/>
		<result property="totCnt" 	column="TOT_CNT"/>
		<result property="totReq" 	column="TOT_REQ"/>
		<result property="cntJan" 	column="CNT_JAN"/>
		<result property="reqJan" 	column="REQ_JAN"/>
		<result property="cntFeb" 	column="CNT_FEB"/>
		<result property="reqFeb" 	column="REQ_FEB"/>
		<result property="cntMar" 	column="CNT_MAR"/>
		<result property="reqMar" 	column="REQ_MAR"/>
		<result property="cntApr" 	column="CNT_APR"/>
		<result property="reqApr" 	column="REQ_APR"/>
		<result property="cntMay" 	column="CNT_MAY"/>
		<result property="reqMay" 	column="REQ_MAY"/>
		<result property="cntJun" 	column="CNT_JUN"/>
		<result property="reqJun" 	column="REQ_JUN"/>
		<result property="cntJul" 	column="CNT_JUL"/>
		<result property="reqJul" 	column="REQ_JUL"/>
		<result property="cntAug" 	column="CNT_AUG"/>
		<result property="reqAug" 	column="REQ_AUG"/>
		<result property="cntSep" 	column="CNT_SEP"/>
		<result property="reqSep" 	column="REQ_SEP"/>
		<result property="cntOct" 	column="CNT_OCT"/>
		<result property="reqOct" 	column="REQ_OCT"/>
		<result property="cntNov" 	column="CNT_NOV"/>
		<result property="reqNov" 	column="REQ_NOV"/>
		<result property="cntDec" 	column="CNT_DEC"/>
		<result property="reqDec" 	column="REQ_DEC"/>
	</resultMap>
	<select id="findReadStatClssList" parameterClass="rms.srch.read.domain.ReadStat" resultMap="findReadStatClssList-result">
		SELECT CLSS_ID AS ORG_CD
		      ,CLSS_NM AS ORG_NM
		      ,GUBUN
		      ,TRIM (NVL(TOT_CNT, '0')) AS TOT_CNT
		      ,TRIM (NVL(TOT_REQ, '0')) AS TOT_REQ
		      ,TRIM (NVL(CNT_JAN, '0')) AS CNT_JAN
		      ,TRIM (NVL(REQ_JAN, '0')) AS REQ_JAN
		      ,TRIM (NVL(CNT_FEB, '0')) AS CNT_FEB
		      ,TRIM (NVL(REQ_FEB, '0')) AS REQ_FEB
		      ,TRIM (NVL(CNT_MAR, '0')) AS CNT_MAR
		      ,TRIM (NVL(REQ_MAR, '0')) AS REQ_MAR
		      ,TRIM (NVL(CNT_APR, '0')) AS CNT_APR
		      ,TRIM (NVL(REQ_APR, '0')) AS REQ_APR
		      ,TRIM (NVL(CNT_MAY, '0')) AS CNT_MAY
		      ,TRIM (NVL(REQ_MAY, '0')) AS REQ_MAY
		      ,TRIM (NVL(CNT_JUN, '0')) AS CNT_JUN
		      ,TRIM (NVL(REQ_JUN, '0')) AS REQ_JUN
		      ,TRIM (NVL(CNT_JUL, '0')) AS CNT_JUL
		      ,TRIM (NVL(REQ_JUL, '0')) AS REQ_JUL
		      ,TRIM (NVL(CNT_AUG, '0')) AS CNT_AUG
		      ,TRIM (NVL(REQ_AUG, '0')) AS REQ_AUG
		      ,TRIM (NVL(CNT_SEP, '0')) AS CNT_SEP
		      ,TRIM (NVL(REQ_SEP, '0')) AS REQ_SEP
		      ,TRIM (NVL(CNT_OCT, '0')) AS CNT_OCT
		      ,TRIM (NVL(REQ_OCT, '0')) AS REQ_OCT
		      ,TRIM (NVL(CNT_NOV, '0')) AS CNT_NOV
		      ,TRIM (NVL(REQ_NOV, '0')) AS REQ_NOV
		      ,TRIM (NVL(CNT_DEC, '0')) AS CNT_DEC
		      ,TRIM (NVL(REQ_DEC, '0')) AS REQ_DEC
		FROM (
		    SELECT A.CLSS_ID
		          ,A.CLSS_NM
		          ,NVL(B.GUBUN, '기록물철') GUBUN, TOT_CNT, TOT_REQ, CNT_JAN,REQ_JAN,CNT_FEB,REQ_FEB,CNT_MAR,REQ_MAR,CNT_APR,REQ_APR,CNT_MAY,REQ_MAY,CNT_JUN,REQ_JUN,CNT_JUL,REQ_JUL,CNT_AUG,REQ_AUG,CNT_SEP,REQ_SEP,CNT_OCT,REQ_OCT,CNT_NOV,REQ_NOV,CNT_DEC,REQ_DEC
		    FROM (
		          SELECT record_Center_id, clss_div_cd, clss_id, CLSS_NM
		          FROM TB_RDFOLDER 
		          WHERE RECORD_CENTER_ID = #recordCenterId:VARCHAR#
		          AND FOLDER_ID IN (SELECT FOLDER_ID FROM TB_RDFOLDERREADDETL WHERE KEEP_RECORD_CENTER_ID = #recordCenterId:VARCHAR#)
		          UNION 
		          SELECT record_Center_id, clss_div_cd, clss_id, CLSS_NM
		          FROM TB_RDRECORD
		          WHERE RECORD_CENTER_ID = #recordCenterId:VARCHAR#
		          AND RECORD_ID IN (SELECT RECORD_ID FROM TB_RDRECORDREADDETL WHERE KEEP_RECORD_CENTER_ID = #recordCenterId:VARCHAR#)
		           ) A, ( SELECT K.CLSS_ID,
		                '기록물철' AS GUBUN,
		                K.KEEP_RECORD_CENTER_ID,
		                SUM(NVL(CNT, 0)) TOT_CNT,
		                SUM(NVL(CASE WHEN K.READ_REQNO IS NOT NULL THEN 1 ELSE 0 END, '0')) TOT_REQ,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '01' THEN K.CNT END, 0)) CNT_JAN,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '01' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_JAN,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '02' THEN K.CNT END, 0)) CNT_FEB,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '02' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_FEB,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '03' THEN K.CNT END, 0)) CNT_MAR,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '03' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_MAR,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '04' THEN K.CNT END, 0)) CNT_APR,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '04' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_APR,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '05' THEN K.CNT END, 0)) CNT_MAY,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '05' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_MAY,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '06' THEN K.CNT END, 0)) CNT_JUN,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '06' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_JUN,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '07' THEN K.CNT END, 0)) CNT_JUL,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '07' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_JUL,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '08' THEN K.CNT END, 0)) CNT_AUG,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '08' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_AUG,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '09' THEN K.CNT END, 0)) CNT_SEP,                                                 
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '09' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_SEP,                                                                                               
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '10' THEN K.CNT END, 0)) CNT_OCT,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '10' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_OCT,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '11' THEN K.CNT END, 0)) CNT_NOV,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '11' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_NOV,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '12' THEN K.CNT END, 0)) CNT_DEC,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '12' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_DEC
		            FROM (
		                SELECT R.KEEP_RECORD_CENTER_ID, R.CNT, R.READ_REQ_YMD, R.READ_REQNO, R.CLSS_ID
		                FROM (
		                    SELECT COUNT(1) CNT, SUBSTR(A.READ_REQ_YMD, 5, 2) AS READ_REQ_YMD, B.KEEP_RECORD_CENTER_ID, A.READ_REQNO, C.CLSS_ID
		                    FROM TB_RDREADREQ A, TB_RDFOLDERREADDETL B, TB_RDFOLDER C
		                    WHERE B.KEEP_RECORD_CENTER_ID = #recordCenterId:VARCHAR#
		                    AND SUBSTR(A.READ_REQ_YMD, 0,4) = #readReqYmd:VARCHAR#
		                    AND A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
		                    AND A.READ_REQNO = B.READ_REQNO
		                    AND B.KEEP_RECORD_CENTER_ID = C.RECORD_CENTER_ID
		                    AND B.FOLDER_ID = C.FOLDER_ID
		                    GROUP BY  SUBSTR(A.READ_REQ_YMD, 5,2), B.KEEP_RECORD_CENTER_ID, A.READ_REQNO, C.CLSS_ID
		                ) R
		                GROUP BY R.CNT, R.CLSS_ID, R.READ_REQ_YMD, R.KEEP_RECORD_CENTER_ID, R.READ_REQNO
		            ) K
		            GROUP BY K.KEEP_RECORD_CENTER_ID, K.CLSS_ID) B
		    WHERE A.RECORD_CENTER_ID = B.KEEP_RECORD_CENTER_ID (+)
		    AND A.CLSS_ID = B.CLSS_ID (+)
		    UNION ALL    
		    SELECT A.CLSS_ID, A.CLSS_NM, NVL(B.GUBUN, '기록물건') GUBUN, TOT_CNT, TOT_REQ, CNT_JAN,REQ_JAN,CNT_FEB,REQ_FEB,CNT_MAR,REQ_MAR,CNT_APR,REQ_APR,CNT_MAY,REQ_MAY,CNT_JUN,REQ_JUN,CNT_JUL,REQ_JUL,CNT_AUG,REQ_AUG,CNT_SEP,REQ_SEP,CNT_OCT,REQ_OCT,CNT_NOV,REQ_NOV,CNT_DEC,REQ_DEC
		    FROM (
		        SELECT record_Center_id, clss_div_cd, clss_id, CLSS_NM
		        FROM TB_RDFOLDER 
		        WHERE RECORD_CENTER_ID = #recordCenterId:VARCHAR#
		        AND FOLDER_ID IN (SELECT FOLDER_ID FROM TB_RDFOLDERREADDETL WHERE KEEP_RECORD_CENTER_ID = #recordCenterId:VARCHAR#)
		        UNION 
		        SELECT record_Center_id, clss_div_cd, clss_id, CLSS_NM
		        FROM TB_RDRECORD
		        WHERE RECORD_CENTER_ID = #recordCenterId:VARCHAR#
		        AND RECORD_ID IN (SELECT RECORD_ID FROM TB_RDRECORDREADDETL WHERE KEEP_RECORD_CENTER_ID = #recordCenterId:VARCHAR#)
		        ) A, ( SELECT K.CLSS_ID,
		                '기록물건' AS GUBUN,
		                K.KEEP_RECORD_CENTER_ID,
		                SUM(NVL(CNT, 0)) TOT_CNT,
		                SUM(NVL(CASE WHEN K.READ_REQNO IS NOT NULL THEN 1 ELSE 0 END, '0')) TOT_REQ,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '01' THEN K.CNT END, 0)) CNT_JAN,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '01' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_JAN,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '02' THEN K.CNT END, 0)) CNT_FEB,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '02' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_FEB,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '03' THEN K.CNT END, 0)) CNT_MAR,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '03' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_MAR,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '04' THEN K.CNT END, 0)) CNT_APR,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '04' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_APR,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '05' THEN K.CNT END, 0)) CNT_MAY,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '05' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_MAY,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '06' THEN K.CNT END, 0)) CNT_JUN,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '06' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_JUN,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '07' THEN K.CNT END, 0)) CNT_JUL,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '07' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_JUL,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '08' THEN K.CNT END, 0)) CNT_AUG,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '08' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_AUG,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '09' THEN K.CNT END, 0)) CNT_SEP,                                                 
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '09' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_SEP,                                                                                               
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '10' THEN K.CNT END, 0)) CNT_OCT,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '10' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_OCT,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '11' THEN K.CNT END, 0)) CNT_NOV,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '11' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_NOV,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '12' THEN K.CNT END, 0)) CNT_DEC,
		                SUM(NVL(CASE WHEN K.READ_REQ_YMD = '12' THEN (CASE WHEN K.READ_REQNO is NOT NULL THEN 1 ELSE 0 END) END, 0)) REQ_DEC
		            FROM (
		                SELECT R.KEEP_RECORD_CENTER_ID, R.CNT, R.READ_REQ_YMD, R.READ_REQNO, R.CLSS_ID
		                FROM (
		                    SELECT COUNT(1) CNT, SUBSTR(A.READ_REQ_YMD, 5, 2) AS READ_REQ_YMD, B.KEEP_RECORD_CENTER_ID, A.READ_REQNO, C.CLSS_ID
		                    FROM TB_RDREADREQ A, TB_RDRECORDREADDETL B, TB_RDRECORD C
		                    WHERE B.KEEP_RECORD_CENTER_ID = #recordCenterId:VARCHAR#
		                    AND SUBSTR(A.READ_REQ_YMD, 0,4) = #readReqYmd:VARCHAR#
		                    AND A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
		                    AND A.READ_REQNO = B.READ_REQNO
		                    AND B.KEEP_RECORD_CENTER_ID = C.RECORD_CENTER_ID
		                    AND B.RECORD_ID = C.RECORD_ID
		                    GROUP BY  SUBSTR(A.READ_REQ_YMD, 5,2), B.KEEP_RECORD_CENTER_ID, A.READ_REQNO, C.CLSS_ID
		                ) R
		                GROUP BY R.CNT, R.CLSS_ID, R.READ_REQ_YMD, R.KEEP_RECORD_CENTER_ID, R.READ_REQNO
		            ) K
		            GROUP BY K.KEEP_RECORD_CENTER_ID, K.CLSS_ID) B
		    WHERE A.RECORD_CENTER_ID = B.KEEP_RECORD_CENTER_ID (+)
		    AND A.CLSS_ID = B.CLSS_ID (+)
		) S
		ORDER BY S.CLSS_NM, S.GUBUN DESC
	</select>
	
		
</sqlMap>
