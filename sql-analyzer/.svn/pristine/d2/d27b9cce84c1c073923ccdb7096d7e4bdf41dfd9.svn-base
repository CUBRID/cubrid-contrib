<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="oldElectTake">

<resultMap id="recvHist-result" 				class="rms.take.batchReg.domain.BatchRegFile">
		<result property="errFolderCnt"	 		column="ERR_FOLDER_CNT"/>
		<result property="errRecordCnt"	 		column="ERR_RECORD_CNT"/>
		<result property="errSpecialCnt"	 	column="ERR_SPECIAL_CNT"/>
		<result property="errAttachCnt"	 		column="ERR_ATTACH_CNT"/>
		<result property="totFolderCnt"	        column="TOT_FOLDER_CNT"/>
		<result property="totRecordCnt"			column="TOT_RECORD_CNT"/>
		<result property="totSpecialCnt"	 	column="TOT_SPECIAL_CNT"/>
		<result property="totAttachCnt"	 		column="TOT_ATTACH_CNT"/>
		<result property="regProgStateNm"	 	column="REG_PROG_STATE_NM"/>
		<result property="regProgStateCd"	 	column="REG_PROG_STATE_CD"/>
		<result property="recvDtime"	 		column="RECV_DTIME"/>
	</resultMap>

	<resultMap id="oldElectTkFolder-result" 		class="rms.take.oldElectReg.domain.OldElectTkFolder">
		<result property="recordCenterId"	 	column="record_center_id"/>
		<result property="folderTakeSeq"	 	column="folder_take_seq"/>
		<result property="creatSysCd"	 		column="creat_sys_cd"/>
		<result property="takeOrgCd"	 		column="take_org_cd"/>
		<result property="clssDivCd"	 		column="clss_div_cd"/>
		<result property="clssId"	 			column="clss_id"/>
		<result property="creatYyyy"	 		column="creat_yyyy"/>
		<result property="folderRegSeq"	 		column="folder_reg_seq"/>
		<result property="hoNo"	 				column="ho_no"/>
		<result property="takeYyyy"	 			column="take_yyyy"/>
		<result property="takeSno"	 			column="take_sno"/>
		<result property="clssNm"	 			column="clss_nm"/>
		<result property="title"	 			column="title"/>
		<result property="subTitle"	 			column="sub_title"/>
		<result property="folderTypeDivCd"	 	column="folder_type_div_cd"/>
		<result property="etcFolderType"	 	column="etc_folder_type"/>
		<result property="folderDetlTypeCd"	 	column="folder_detl_type_cd"/>
		<result property="creatPurps"	 		column="creat_purps"/>
		<result property="mediaFormat"	 		column="media_format"/>
		<result property="medium"	 			column="medium"/>
		<result property="folderSize"	 		column="folder_size"/>
		<result property="recordTotPageCnt"	 	column="record_tot_page_cnt"/>
		<result property="recordRegCnt"	 		column="record_reg_cnt"/>
		<result property="efileCnt"	 			column="efile_cnt"/>
		<result property="newDivCd"	 			column="new_div_cd"/>
		<result property="chngFlag"	 			column="chng_flag"/>
		<result property="oldFolderCreatOrgNm"	column="old_foLder_creat_org_nm"/>
		<result property="oldFolderClssNo"	 	column="old_folder_clss_no"/>
		<result property="folderBispjtDivCd"	column="folder_bispjt_div_cd"/>
		<result property="bisClssPathNm"	 	column="bis_clss_path_nm"/>
		<result property="pjtClssPathNm"	 	column="pjt_clss_path_nm"/>
		<result property="folderStartDtime"	 	column="folder_start_dtime"/>
		<result property="folderCloseDtime"	 	column="folder_close_dtime"/>
		<result property="funshEndDtime"	 	column="funsh_end_dtime"/>
		<result property="funshRsn"	 			column="funsh_rsn"/>
		<result property="presvTermCd"	 		column="presv_term_cd"/>
		<result property="presvTermFixRsn"	 	column="presv_term_fix_rsn"/>
		<result property="presvMethodCd"	 	column="presv_method_cd"/>
		<result property="presvAreaCd"	 		column="presv_area_cd"/>
		<result property="presvLoc"	 			column="presv_loc"/>
		<result property="presvDutyChrgrNm"	 	column="presv_duty_chrgr_nm"/>
		<result property="secuClssCd"	 		column="secu_clss_cd"/>
		<result property="secuClssRsn"	 		column="secu_clss_rsn"/>
		<result property="readRange"	 		column="read_range"/>
		<result property="takeTakovrDivCd"	 		column="take_takovr_div_cd"/>
		<result property="takeTakovrOrgCd"	 		column="take_takovr_org_cd"/>
		<result property="takeTakovrClssId"	 		column="take_takovr_clss_id"/>
		<result property="takeTakovrCreatYyyy"	 	column="take_takovr_creat_yyyy"/>
		<result property="takeTakovrFolderRegSeq"	column="take_takovr_folder_reg_seq"/>
		<result property="takeTakovrHoNo"	 		column="take_takovr_ho_no"/>
		<result property="takeTakovrYmd"	 		column="take_takovr_ymd"/>
		<result property="creatUserId"	 			column="creat_user_id"/>
		<result property="creatUserNm"	 			column="creat_user_nm"/>
		<result property="creatUserOrgCd"	 		column="creat_user_org_cd"/>
		<result property="creatUserOrgNm"	 		column="creat_user_org_nm"/>
		<result property="creatUserPosRankNm"	 	column="creat_user_pos_rank_nm"/>
		<result property="creatDtime"	 			column="creat_dtime"/>
		<result property="erecordFlag"	 			column="erecord_flag"/>
		<result property="creatSysFolderId"	 		column="creat_sys_folder_id"/>
		<result property="errorFlag"	 			column="error_flag"/>
		<result property="virusFlag"	 			column="virus_flag"/>
		<result property="virusDtime"	 			column="virus_dtime"/>
		<result property="examRsltCd"	 			column="exam_rslt_cd"/>
		<result property="examCont"	 				column="exam_cont"/>
		<result property="rjctFlag"	 				column="rjct_flag"/>
		<result property="rjctCont"	 				column="rjct_cont"/>
		<result property="takeFinFlag"	 			column="take_fin_flag"/>
		<result property="regDtime"	 				column="reg_dtime"/>
		<result property="takeTypeCd"	 			column="take_type_cd"/>
		<result property="transfAprovUserId"		column="transf_aprov_user_id"/>
		<result property="transfAprovUserNm"		column="transf_aprov_user_nm"/>
		<result property="transfAprovDtime"	 		column="transf_aprov_dtime"/>
		<result property="orgCd"	 				column="org_cd"/>
		<result property="readCnt"	 				column="read_cnt"/>
		<result property="operReadRangeCd"	 		column="oper_read_range_cd"/>
		<result property="sumry"	 				column="sumry"	jdbcType="CLOB"	javaType="java.lang.String"/>
		<result property="groupPresvTermCd"	 		column="group_presv_term_cd"/>
		<result property="smlCd"	 				column="sml_cd"/>
		<result property="lineNo"	 				column="line_no"/>
	</resultMap>

	<resultMap id="oldElectTkRecord-result" 		class="rms.take.oldElectReg.domain.OldElectTkRecord">
		<result property="recordCenterId"	 	column="record_center_id"/>
		<result property="recordTakeSeq"	 	column="record_take_seq"/>
		<result property="folderTakeSeq"	 	column="folder_take_seq"/>
		<result property="creatSysCd"	 		column="creat_sys_cd"/>
		<result property="orgCd"	 			column="org_cd"/>
		<result property="creatYyyy"	 		column="creat_yyyy"/>
		<result property="creatRegDtime"	 	column="creat_reg_dtime"/>
		<result property="creatRegNo"	 		column="creat_reg_no"/>
		<result property="dtchRegNo"	 		column="dtch_reg_no"/>
		<result property="title"	 			column="title"/>
		<result property="subTitle"	 			column="sub_title"/>
		<result property="recordRegDivCd"	 	column="record_reg_div_cd"/>
		<result property="recordDetlTypeCd"	 	column="record_detl_type_cd"/>
		<result property="recordSumry"	 		column="record_sumry"	jdbcType="CLOB"	javaType="java.lang.String"/>
		<result property="audvisRecordType"	 	column="audvis_record_type"/>
		<result property="audvisRecordSumry"	column="audvis_record_sumry"/>
		<result property="mediaFormat"	 		column="media_format"/>
		<result property="medium"	 			column="medium"/>
		<result property="recordSize"	 		column="record_size"/>
		<result property="attachCnt"	 		column="attach_cnt"/>
		<result property="recordPageCnt"	 	column="record_page_cnt"/>
		<result property="aprovPosRankNm"	 	column="aprov_pos_rank_nm"/>
		<result property="dutyChrgrNm"	 		column="duty_chrgr_nm"/>
		<result property="enforcYmd"	 		column="enforc_ymd"/>
		<result property="creatOrgRegNo"	 	column="creat_org_reg_no"/>
		<result property="erecordFlag"	 		column="erecord_flag"/>
		<result property="oldRecordCreatOrgNm"	column="old_record_creat_org_nm"/>
		<result property="oldRecordDocno"	 	column="old_record_docno"/>
		<result property="oldRecordPresvTerm"	column="old_record_presv_term"/>
		<result property="presvLoc"	 			column="presv_loc"/>
		<result property="secuClssCd"	 		column="secu_clss_cd"/>
		<result property="secuClssRsn"	 		column="secu_clss_rsn"/>
		<result property="readRange"	 		column="read_range"/>
		<result property="openDivCd"	 		column="open_div_cd"/>
		<result property="openGrade"	 		column="open_grade"/>
		<result property="partOpenRsn"	 		column="part_open_rsn"/>
		<result property="openLimitPart"	 	column="open_limit_part"/>
		<result property="openExptDtime"	 	column="open_expt_dtime"/>
		<result property="recver"	 			column="recver"/>
		<result property="sender"	 			column="sender"/>
		<result property="chngVerNo"	 		column="chng_ver_no"/>
		<result property="docDistrNo"	 		column="doc_distr_no"/>
		<result property="folderClssNo"	 		column="folder_clss_no"/>
		<result property="spclRecordType"	 	column="spcl_record_type"/>
		<result property="orignCopyFlag"	 	column="orign_copy_flag"/>
		<result property="newDivCd"	 			column="new_div_cd"/>
		<result property="chngFlag"	 			column="chng_flag"/>
		<result property="rjctFlag"	 			column="rjct_flag"/>
		<result property="docNo"	 			column="doc_no"/>
		<result property="creatUserId"	 		column="creat_user_id"/>
		<result property="creatUserOrgCd"	 	column="creat_user_org_cd"/>
		<result property="creatUserOrgNm"	 	column="creat_user_org_nm"/>
		<result property="creatUserPosRankNm"	column="creat_user_pos_rank_nm"/>
		<result property="creatDtime"	 		column="creat_dtime"/>
		<result property="creatSysRecordId"	 	column="creat_sys_record_id"/>
		<result property="errorFlag"	 		column="error_flag"/>
		<result property="examRsltCd"	 		column="exam_rslt_cd"/>
		<result property="examCont"	 			column="exam_cont"/>
		<result property="takeFinFlag"	 		column="take_fin_flag"/>
		<result property="regDtime"	 			column="reg_dtime"/>
		<result property="enforcDocNo"	 		column="enforc_docno"/>
		<result property="lang"	 				column="lang"/>
		<result property="attachTypeCd"	 		column="attach_type_cd"/>
		<result property="mediaFormatEtc"	 	column="media_format_etc"/>
		<result property="mediumEtc"	 		column="medium_etc"/>
		<result property="recordSno"	 		column="record_sno"/>
		<result property="attachEtc"	 		column="attach_etc"/>
		<result property="secretClss"	 		column="secret_clss"/>
		<result property="secretTerm"	 		column="secret_term"/>
		<result property="lineNo"	 			column="line_no"/>
	</resultMap>

	<resultMap id="oldElectExamFolderCheck-result" 	class="rms.take.oldElectReg.domain.OldElectTkFolder">
		<result property="folderTakeSeq"	 	column="folder_take_seq"/>
		<result property="clssId"	 			column="clss_id"/>
		<result property="clssNm"	 			column="clss_nm"/>
		<result property="title"	 			column="title"/>
		<result property="creatYyyy"	 		column="creat_yyyy"/>
		<result property="presvTermCd"	 		column="presv_term_cd"/>
		<result property="presvTermNm"	 		column="presv_term_nm"/>
		<result property="erecordFlag"	 		column="erecord_flag"/>
		<result property="erecordFlagNm"	 	column="erecord_flag_nm"/>
		<result property="virusFlag"	 		column="virus_flag"/>
		<result property="errorFlag"	 		column="error_flag"/>
		<result property="autoCheck"	 		column="auto_check"/>
		<result property="examRsltCd"	 		column="exam_rslt_cd"/>
		<result property="examRsltNm"	 		column="exam_rslt_nm"/>
		<result property="rjctFlag"	 			column="rjct_flag"/>		
		<result property="rjctCont"	 			column="rjct_cont"/>
		<result property="takeFinFlag"	 		column="take_fin_flag"/>
		<result property="status"	 			column="status"/>		
		<result property="statusNm"	 			column="status_nm"/>		
	</resultMap>
		
		
	<resultMap id="oldElectRegBatchTakeFolderList-result" 	class="rms.take.oldElectReg.domain.OldElectTkFolder">
		<result property="recordCenterId"	 	column="record_center_id"/>
		<result property="folderTakeSeq"	 	column="folder_take_seq"/>
		<result property="regDtime"	 			column="reg_dtime"/>
	</resultMap>

	<resultMap id="OldElectTakeRecordList-result" 	class="rms.take.oldElectReg.domain.OldElectTkRecord">
		<result property="recordCenterId"	 	column="record_center_id"/>
		<result property="recordId"	 			column="record_id"/>
		<result property="erecordFlag"	 		column="erecord_flag"/>
		<result property="recordTakeSeq"	 	column="record_take_seq"/>
	</resultMap>

	<!-- 기록물인수>등록인수>등록인수>일괄등록(인수처리-15.원문엔진 등록할 파일목록 조회) (SELECT)	 -->
	<resultMap id="OldElectTakeAttachList-result" 	class="rms.take.oldElectReg.domain.OldElectTkAttach">
		<result property="docTypeCd"	 		column="doc_type_cd"/>
		<result property="attachFilePath"	 	column="attach_file_path"/>
		<result property="fileNm"	 			column="file_nm"/>
		<result property="agentNm"	 			column="agent_nm"/>
		<result property="ver"	 				column="ver"/>
		<result property="attachFilePageCnt"	column="attach_file_page_cnt"/>
		<result property="fileSize"	 			column="file_size"/>
	</resultMap>

	<!-- 해당 접수일시 및 진행상태에 해당하는 일괄등록 데이타 존재 여부 체크 : 사용안함 2007.10.22-->
	<select id="countOldElectTkFolderList" parameterClass="rms.take.batchReg.domain.BatchRegFile" resultClass="int">
			SELECT count(1)
			FROM tb_tkrecvhist  
			WHERE record_center_id = #recordCenterId:VARCHAR#
			AND recv_dtime = #recvDtime:VARCHAR#
			AND reg_prog_state_cd = #recvDtime:VARCHAR#
	</select>
	
	<!-- 인수_기록물철 조회 -->
	<select id="findOldElectTkFolderList" parameterClass="rms.take.oldElectReg.domain.OldElectRegFile" resultMap="oldElectTkFolder-result">
		SELECT 
		   record_center_id, folder_take_seq, creat_sys_cd, 
		   take_org_cd, clss_div_cd, clss_id, 
		   creat_yyyy, folder_reg_seq, ho_no, 
		   take_yyyy, take_sno, clss_nm, 
		   title, sub_title, folder_type_div_cd, 
		   etc_folder_type, folder_detl_type_cd, creat_purps, 
		   media_format, medium, folder_size, 
		   record_tot_page_cnt, record_reg_cnt, efile_cnt, 
		   new_div_cd, chng_flag, old_folder_creat_org_nm, 
		   old_folder_clss_no, folder_bispjt_div_cd, bis_clss_path_nm, 
		   pjt_clss_path_nm, folder_start_dtime, folder_close_dtime, 
		   funsh_end_dtime, funsh_rsn, presv_term_cd, 
		   presv_term_fix_rsn, presv_method_cd, presv_area_cd, 
		   presv_loc, presv_duty_chrgr_nm, secu_clss_cd, 
		   secu_clss_rsn, read_range, take_takovr_div_cd, 
		   take_takovr_org_cd, take_takovr_clss_id, take_takovr_creat_yyyy, 
		   take_takovr_folder_reg_seq, take_takovr_ho_no, take_takovr_ymd, 
		   creat_user_id, creat_user_nm, creat_user_org_cd, 
		   creat_user_org_nm, creat_user_pos_rank_nm, creat_dtime, 
		   erecord_flag, creat_sys_folder_id, error_flag, 
		   virus_flag, virus_dtime, exam_rslt_cd, 
		   exam_cont, rjct_flag, rjct_cont, 
		   take_fin_flag, reg_dtime, take_type_cd, 
		   transf_aprov_user_id, transf_aprov_user_nm, transf_aprov_dtime, 
		   org_cd, read_cnt, oper_read_range_cd, 
		   sumry, group_presv_term_cd, sml_cd, line_no
		FROM TB_TKFOLDER
		WHERE record_center_id = #recordCenterId:VARCHAR#
		AND creat_sys_cd = #creatSysCd:VARCHAR#
		AND reg_dtime = #recvDtime:VARCHAR#
	</select>

	<!-- 인수_기록물건 조회 -->
	<select id="findOldElectTkRecordList" parameterClass="rms.take.oldElectReg.domain.OldElectRegFile" resultMap="oldElectTkRecord-result">
		SELECT 
			record_center_id, record_take_seq, folder_take_seq, 
			creat_sys_cd, org_cd, creat_yyyy, 
			creat_reg_dtime, creat_reg_no, dtch_reg_no, 
			title, sub_title, record_reg_div_cd, 
			record_detl_type_cd, record_sumry, audvis_record_type, 
			audvis_record_sumry, media_format, medium, 
			record_size, attach_cnt, record_page_cnt, 
			aprov_pos_rank_nm, duty_chrgr_nm, SUBSTR(enforc_ymd, 1, 8) AS enforc_ymd, 
			creat_org_reg_no, erecord_flag, old_record_creat_org_nm, 
			old_record_docno, old_record_presv_term, presv_loc, 
			secu_clss_cd, secu_clss_rsn, read_range, 
			open_div_cd, open_grade, part_open_rsn, 
			open_limit_part, open_expt_dtime, recver, 
			sender, chng_ver_no, doc_distr_no, 
			folder_clss_no, spcl_record_type, orign_copy_flag, 
			new_div_cd, chng_flag, rjct_flag, 
			doc_no, creat_user_id, creat_user_org_cd, 
			creat_user_org_nm, creat_user_pos_rank_nm, creat_dtime, 
			creat_sys_record_id, error_flag, exam_rslt_cd, 
			exam_cont, take_fin_flag, reg_dtime, 
			enforc_docno, lang, attach_type_cd, 
			media_format_etc, medium_etc, record_sno, 
			attach_etc, secret_clss, secret_term, line_no
		FROM TB_TKRECORD
		WHERE record_center_id = #recordCenterId:VARCHAR#
		AND creat_sys_cd = #creatSysCd:VARCHAR#
		AND reg_dtime = #recvDtime:VARCHAR#
	</select>
			
	<!--인수_기록물철 일괄등록 자동체크시 기록물형태 유효성체크-->
	<select id="findBatchFolderTypeDivCdCheck" parameterClass="rms.take.batchReg.domain.BatchTkFolder" resultClass="int">
		SELECT  count(com_type_cd)
		FROM 	  TB_ZZCOMCD
		WHERE   com_type_cd = 'RD01'
		AND        com_cd = #folderTypeDivCd:VARCHAR#
	</select>

	<!--인수_기록물철 일괄등록 자동체크시 기록물형태 유효성체크-->
	<select id="findComCdCheck" resultClass="int">
		SELECT  count(com_type_cd)
		FROM 	TB_ZZCOMCD
		WHERE   com_type_cd = #comTypeCd:VARCHAR#
		AND     com_cd = #comCd:VARCHAR#
	</select>
	
	
	<!--인수_기록물철 일괄등록 자동체크시 비치기록물 여부체크-->
	<select id="findFunshRecordFlag" resultClass="string">
		SELECT  nvl(funsh_record_flag,'2')
		FROM 	TB_ZZUNIT
		WHERE   record_center_id = #recordCenterId:VARCHAR#
		AND     unit_cd = #clssId:VARCHAR#
	</select>
	
	<!-- 기록물철 기록물철분류번호 중복 조회 TK -->
	<select id="findOldElectTkFolderRegSeq" parameterClass="rms.take.oldElectReg.domain.OldElectTkFolder" resultClass="int">
			SELECT count(1)
			FROM TB_TKFOLDER
			WHERE RECORD_CENTER_ID = #recordCenterId:VARCHAR#
			  AND CREAT_SYS_CD     = #creatSysCd:VARCHAR#
			  AND ORG_CD           = #orgCd:VARCHAR#
			  AND CLSS_ID          = #clssId:VARCHAR#
			  AND CREAT_YYYY       = #creatYyyy:VARCHAR#
			  AND FOLDER_REG_SEQ   = #folderRegSeq:VARCHAR#
			  AND HO_NO            = #hoNo:VARCHAR#
	</select>
	
	<!-- 기록물철 기록물철분류번호 중복 조회 RD-->
	<select id="findOldElectRdFolderRegSeq" parameterClass="rms.take.oldElectReg.domain.OldElectTkFolder" resultClass="string">
			SELECT 'O'
			FROM TB_RDFOLDER
			WHERE RECORD_CENTER_ID = #recordCenterId:VARCHAR#
			  AND CREAT_SYS_CD     = #creatSysCd:VARCHAR#
			  AND ORG_CD           = #orgCd:VARCHAR#
			  AND CLSS_ID          = #clssId:VARCHAR#
			  AND CREAT_YYYY       = #creatYyyy:VARCHAR#
			  AND FOLDER_REG_SEQ   = #folderRegSeq:VARCHAR#
			  AND HO_NO            = #hoNo:VARCHAR#
	</select>
	<!-- 기록물철 기록물건 갯수  -->
	<select id="countOldElectFolderRecord" parameterClass="rms.take.oldElectReg.domain.OldElectTkFolder" resultClass="int">
			SELECT count(1)
			FROM TB_TKRECORD
			WHERE RECORD_CENTER_ID = #recordCenterId:VARCHAR#
			  AND FOLDER_TAKE_SEQ  = #folderTakeSeq:VARCHAR#
	</select>
	
	<!-- 기록물철 기록물건 갯수  -->
	<select id="countOldElectFolderPage" parameterClass="rms.take.oldElectReg.domain.OldElectTkFolder" resultClass="int">
			SELECT SUM(RECORD_PAGE_CNT)
			FROM TB_TKRECORD
			WHERE RECORD_CENTER_ID = #recordCenterId:VARCHAR#
			  AND FOLDER_TAKE_SEQ  = #folderTakeSeq:VARCHAR#
	</select>
    <!-- 기록물철 스캔완료 기록물건 갯수  -->
	<select id="countOldElectScanFinRecord" parameterClass="rms.take.oldElectReg.domain.OldElectTkFolder" resultClass="int">
			SELECT COUNT(1)
			FROM TB_TKRECORD
			WHERE RECORD_CENTER_ID = #recordCenterId:VARCHAR#
			  AND FOLDER_TAKE_SEQ  = #folderTakeSeq:VARCHAR#
			  AND SCAN_FIN_FLAG    = '1'
	</select>
	
	<!-- 기록물철 기록물철분류번호 중복 조회 TK-->
	<select id="findOldElectTkRecordRegSeq" parameterClass="rms.take.oldElectReg.domain.OldElectTkRecord" resultClass="int">
			SELECT count(1)
			FROM TB_TKRECORD
			WHERE RECORD_CENTER_ID = #recordCenterId:VARCHAR#
			  AND CREAT_SYS_CD     = #creatSysCd:VARCHAR#
			  AND ORG_CD           = #orgCd:VARCHAR#
  			  AND CREAT_REG_DTIME  = #creatRegDtime:VARCHAR#
			  AND CREAT_YYYY       = #creatYyyy:VARCHAR#
			  AND CREAT_REG_NO     = #creatRegNo:VARCHAR#
			  AND DTCH_REG_NO      = #dtchRegNo:VARCHAR#
	</select>
	
	
	<!-- 기록물철 기록물철분류번호 중복 조회 RD-->
	<select id="findOldElectRdRecordRegSeq" parameterClass="rms.take.oldElectReg.domain.OldElectTkRecord" resultClass="string">
			SELECT 'O'
			FROM TB_RDRECORD
			WHERE RECORD_CENTER_ID = #recordCenterId:VARCHAR#
			  AND CREAT_SYS_CD     = #creatSysCd:VARCHAR#
			  AND ORG_CD           = #orgCd:VARCHAR#
			  AND CREAT_REG_DTIME  = #creatRegDtime:VARCHAR#
			  AND CREAT_YYYY       = #creatYyyy:VARCHAR#
			  AND CREAT_REG_NO     = #creatRegNo:VARCHAR#
			  AND DTCH_REG_NO      = #dtchRegNo:VARCHAR#
	</select>

	<!-- 인수 기록물건등록번호가 존재하는지 체크-->
	<select id="findTakeRecordCheck" parameterClass="rms.take.undTake.domain.GrUndTakeCheck" resultClass="int">
		SELECT  COUNT(*) 
		FROM    TB_TKRECORD
		WHERE   creat_yyyy = #creatYyyy:VARCHAR#
		AND     creat_reg_no = #creatRegNo:VARCHAR#
		AND     dtch_reg_no = #dtchRegNo:VARCHAR#
	</select>
	
	<!-- 인수_기록물철 일괄등록 자동체크시 에러 등록 -->
	<insert id="createOldElectAutoCheckError" parameterClass="rms.take.oldElectReg.domain.OldElectReg">
		INSERT INTO TB_TKRECVERROR (record_center_id,recv_dtime
		                           ,creat_sys_cd,file_div_cd
		                           ,line_no,recv_error_rsn
		                           ,reg_prog_state_cd)
					        VALUES (#recordCenterId:VARCHAR#,#recvDtime:VARCHAR#
					               ,#creatSysCd:VARCHAR#,#fileDivCd:VARCHAR#
					               ,#lineNo:VARCHAR#,#recvErrorRsn:VARCHAR#
					               ,#regProgStateCd:VARCHAR#)
	</insert>
	
	<!-- 인수_기록물철 일괄등록 자동체크시 에러건수 수정 /*			 , exam_error_cnt=(exam_error_cnt+NVL(#examErrorCnt#,0))*/-->
	<update id="updateTkRecvHist" parameterClass="rms.take.batchReg.domain.BatchRegFile">
		UPDATE TB_TKRECVHIST
		   SET auto_check_error_cnt=(auto_check_error_cnt+NVL(#autoCheckErrorCnt#,0))
			 , reg_prog_state_cd=DECODE(reg_prog_state_cd,'3','3',#regProgStateCd:VARCHAR#)
		WHERE record_center_id=#recordCenterId:VARCHAR# 
		  and recv_dtime=#recvDtime:VARCHAR# 
		  and creat_sys_cd=#creatSysCd:VARCHAR# 
		  and file_div_cd=#fileDivCd:VARCHAR# 
	</update>
	
	<update id="updateOldElectAutoCheckState" parameterClass="rms.take.oldElectReg.domain.OldElectReg">
	    UPDATE TB_TKRECVHIST
	       SET reg_prog_state_cd     = #regProgStateCd:VARCHAR#
	          ,state_flag            = NVL(#stateFlag:VARCHAR#,0)
	          <dynamic>
	              <isGreaterEqual prepend="," property="recvImpossErrorCnt" compareValue="0">
	                  recv_imposs_error_cnt = NVL(#recvImpossErrorCnt:VARCHAR#,0)
	              </isGreaterEqual>
	              <isGreaterEqual prepend="," property="autoCheckErrorCnt" compareValue="0">
	                  auto_check_error_cnt  = NVL(#autoCheckErrorCnt#,0)
	              </isGreaterEqual>
	              <isGreaterEqual prepend="," property="examErrorCnt" compareValue="0">
	                  exam_error_cnt        = NVL(#examErrorCnt#,0)
	              </isGreaterEqual>
	              <isGreaterEqual prepend="," property="totalCnt" compareValue="0">
	                  total_cnt             = NVL(#totalCnt:VARCHAR#,0)
	              </isGreaterEqual>
	          </dynamic>
	    WHERE record_center_id=#recordCenterId:VARCHAR#
	      AND recv_dtime=#recvDtime:VARCHAR# 
	      AND creat_sys_cd=#creatSysCd:VARCHAR#
	      <dynamic>
	         <isNotEmpty prepend="AND" property="fileDivCd">
	              file_div_cd  = #fileDivCd:VARCHAR# 
	         </isNotEmpty>
	      </dynamic>
	</update>
	
	<!-- 인수_기록물철 자동체크 오류여부 수정 -->
	<update id="updateOldElectTkFolderAutoCheck" parameterClass="rms.take.oldElectReg.domain.OldElectTkFolder">
		UPDATE TB_TKFOLDER
		   SET error_flag         = #errorFlag:VARCHAR# 
   		     , virus_flag         = '0'
     	     <!--cubrid , virus_dtime        = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')-->
     	     , virus_dtime        = TO_CHAR(sys_datetime,'YYYYMMDDHH24MISS')
     	     , scan_prog_state_cd = #scanProgStateCd:VARCHAR#
	 	 WHERE record_center_id   = #recordCenterId:VARCHAR# 
		   and folder_take_seq    = #folderTakeSeq:VARCHAR# 
	</update>

	<!-- 인수_기록물건 자동체크 오류여부 수정 -->
	<update id="updateOldElectTkRecordAutoCheck" parameterClass="rms.take.oldElectReg.domain.OldElectTkRecord">
		UPDATE TB_TKRECORD
		SET error_flag = #errorFlag:VARCHAR# 
		WHERE record_center_id = #recordCenterId:VARCHAR# 
		  and record_take_seq = #recordTakeSeq:VARCHAR# 
	</update>


	<!-- 검수대tkd 인수_기록물철 목록(COUNT)-->
	<select id="countOldElectExamFolderCheckPagedList" parameterClass="rms.take.oldElectReg.domain.OldElectRegFile" resultClass="int">
		SELECT COUNT(1)
  		  FROM TB_TKFOLDER
	 	 WHERE record_center_id = #recordCenterId:VARCHAR#
		   AND creat_sys_cd = #creatSysCd:VARCHAR#
		   AND reg_dtime = #recvDtime:VARCHAR#
	</select>
	
	<!-- 일괄등록 - 검수처리(철목록) (SELECT) -->
	<select id="findOldElectExamFolderCheckPagedList" parameterClass="rms.take.oldElectReg.domain.OldElectRegFile" resultMap="oldElectExamFolderCheck-result">
		SELECT folder_take_seq
		     , clss_id
		     , clss_nm
		     , title
		     , creat_yyyy
		     , presv_term_cd
		     , presv_term_nm
		     , erecord_flag
		     , erecord_flag_nm
		     , virus_flag
		     , error_flag
		     , auto_check
		     , exam_rslt_cd
		     , exam_rslt_nm
		     , rjct_flag
		     , rjct_cont
		     , take_fin_flag
		     , status
		     , DECODE(status,'4','인수','3','반려',exam_rslt_nm) status_nm
		FROM  (
			SELECT A.folder_take_seq
			     , A.clss_id
			     , A.clss_nm
			     , A.title
			     , A.creat_yyyy
			     , A.presv_term_cd
				 , (SELECT C.com_cd_nm
				    FROM TB_ZZCOMCD C
				    WHERE C.com_type_cd = 'RD07'
				    AND   C.com_cd = A.presv_term_cd) presv_term_nm
			     , A.erecord_flag
				 , (SELECT C.com_cd_nm
				    FROM TB_ZZCOMCD C
				    WHERE C.com_type_cd = 'RD23'
				    AND   C.com_cd = A.erecord_flag) erecord_flag_nm
			     , A.virus_flag
			     , A.error_flag
			     /*, DECODE(A.error_flag,'Y','X',DECODE(NVL(A.virus_dtime,''),'','X',DECODE(A.virus_flag,'1','X','O'))) auto_check*/
				, DECODE(A.error_flag,'Y','X','O') auto_check			     
			     , NVL(A.exam_rslt_cd,'0') exam_rslt_cd
			     , (SELECT C.com_cd_nm
		            FROM  TB_ZZCOMCD C
			        WHERE C.com_type_cd = 'TK03'
			        AND   C.com_cd = NVL(A.exam_rslt_cd,'0')) exam_rslt_nm
			     , A.rjct_flag
			     , A.rjct_cont
			     , A.take_fin_flag
			     , DECODE(A.take_fin_flag,'1','4',DECODE(A.rjct_flag,'1','3',NVL(A.exam_rslt_cd,'0'))) status
			FROM  TB_TKFOLDER A
			WHERE A.record_center_id = #recordCenterId:VARCHAR#
			AND creat_sys_cd = #creatSysCd:VARCHAR#
			AND reg_dtime = #recvDtime:VARCHAR#
			)
			ORDER BY folder_take_seq
	</select>
	
	<!-- 일괄등록 - 검수처리(철목록-일괄검수) (UPDATE) -->
	<update id="updateOldElectRegBatchExam" parameterClass="rms.take.oldElectReg.domain.OldElectRegFile">
		UPDATE TB_TKFOLDER
		SET   exam_rslt_cd = DECODE(error_flag,'Y','2',DECODE(virus_flag,'1','2','1'))
		WHERE record_center_id = #recordCenterId:VARCHAR#
		  AND creat_sys_cd = #creatSysCd:VARCHAR#
		  AND reg_dtime = #recvDtime:VARCHAR#
	 	  AND (exam_rslt_cd = '0' or exam_rslt_cd is null)
	</update>
	
	<!-- 일괄등록 - 검수처리(일괄검수 후 일괄등록 접수테이블에 상태 및 오류개수 변경) -->
	<select id="countOldElectRegCheckRecvHist" parameterClass="rms.take.oldElectReg.domain.OldElectRegFile" resultClass="int">
		SELECT COUNT(1)
		FROM  TB_TKFOLDER
		WHERE record_center_id = #recordCenterId:VARCHAR#
		  AND reg_dtime = #recvDtime:VARCHAR#
 		  AND ( exam_rslt_cd = '0' OR exam_rslt_cd IS NULL )
	</select>
	
	<!-- 일괄등록 - 검수처리 (일괄검수 후 일괄등록 접수테이블에 포함된 검수오류 수량조회) -->
	<select id="countOldElectRegFolderExamError" parameterClass="rms.take.oldElectReg.domain.OldElectRegFile" resultClass="int">
		SELECT COUNT(1)
		  FROM TB_TKFOLDER
		 WHERE record_center_id = #recordCenterId:VARCHAR#
		   AND reg_dtime = #recvDtime:VARCHAR#
		   AND exam_rslt_cd = '2'
	</select>
	
	<!-- 일괄등록 - 검수처리(일괄검수 후 일괄등록 접수테이블에 상태 및 오류개수 변경) -->
	<update id="updateOldElectRegRecvHist" parameterClass="rms.take.oldElectReg.domain.OldElectRegFile">
		UPDATE TB_TKRECVHIST
		   SET reg_prog_state_cd = #regProgStateCd:VARCHAR#
		   <dynamic>
				<isNotEmpty prepend="," property="examErrorCnt">
					  exam_error_cnt = #examErrorCnt#
				</isNotEmpty>		   
			</dynamic>			
		 WHERE record_center_id = #recordCenterId:VARCHAR#
		   AND creat_sys_cd = #creatSysCd:VARCHAR#
		   AND recv_dtime = #recvDtime:VARCHAR#
		   AND file_div_cd = '1'
	</update>
		
<!-- ************************************************************************************************
	   UndTake 참조 START 
     ************************************************************************************************ -->
     <resultMap id="resultFolderId-result" 	class="rms.take.oldElectReg.domain.OldElectTkFolder">
		<result property="recordCenterId"	 	column="record_center_id"/>
		<result property="folderId"	 	        column="folder_id"/>
	 </resultMap>
	
	<!-- 기록물인수>등록인수>등록인수>일괄등록(일괄인수-인수처리할 철목록) (SELECT) -->
	<select id="findOldElectRegBatchTakeFolderList" parameterClass="rms.take.oldElectReg.domain.OldElectRegFile" resultMap="oldElectRegBatchTakeFolderList-result">
		SELECT   record_center_id
		       , folder_take_seq
		       , reg_dtime
		  FROM TB_TKFOLDER
		 WHERE record_center_id = #recordCenterId:VARCHAR#
		   AND creat_sys_Cd = #creatSysCd:VARCHAR#
		   AND reg_dtime = #recvDtime:VARCHAR#
		   AND exam_rslt_cd in ('1','2')
		   AND take_fin_flag is null
		 ORDER BY record_center_id, folder_take_seq
	</select>
	
	
	<select id="findOldElectTakeFolderId" parameterClass="rms.take.oldElectReg.domain.OldElectTkFolder" resultMap="resultFolderId-result">
		SELECT RECORD_CENTER_ID,FOLDER_ID
		  FROM TB_RDFOLDER
		 WHERE record_center_id = #recordCenterId:VARCHAR#
		   AND folder_take_seq  = #folderTakeSeq:VARCHAR#
	</select>

	<!-- 
		기록물인수>등록인수>등록인수>일괄등록(인수처리-1.기록물철) (INSERT)
	 -->
	<insert id="createOldElectTakeFolder" parameterClass="rms.take.oldElectReg.domain.OldElectTkFolder">
		INSERT INTO TB_RDFOLDER	(RECORD_CENTER_ID,FOLDER_ID
		                        ,TAKE_YYYY,TAKE_YYYY_SNO
		                        ,CREAT_SYS_CD,ORG_CD
		                        ,CLSS_DIV_CD,CLSS_ID
		                        ,CREAT_YYYY,FOLDER_REG_SEQ
		                        ,HO_NO,CLSS_NM
		                        ,ORG_TITLE, TITLE,SUB_TITLE
		                        ,FOLDER_TYPE_DIV_CD,ETC_FOLDER_TYPE
		                        ,FOLDER_DETL_TYPE_CD,CREAT_PURPS
		                        ,SUMRY,MEDIA_FORMAT
		                        ,MEDIUM,FOLDER_SIZE		                        
		                        ,RECORD_TOT_PAGE_CNT,RECORD_REG_CNT
		                        ,EFILE_CNT,NEW_DIV_CD
		                        ,CHNG_FLAG,OLD_FOLDER_CREAT_ORG_NM
		                        ,OLD_FOLDER_CLSS_NO,FOLDER_BISPJT_DIV_CD
		                        ,BIS_CLSS_PATH_NM,PJT_CLSS_PATH_NM
		                        ,FOLDER_START_DTIME,FOLDER_CLOSE_DTIME
		                        ,FUNSH_END_DTIME,FUNSH_RSN
		                        ,PRESV_TERM_CD,PRESV_TERM_FIX_RSN
		                        ,PRESV_METHOD_CD,PRESV_AREA_CD
		                        ,PRESV_LOC,PRESV_DUTY_CHRGR_NM
		                        ,SECU_CLSS_CD,SECU_CLSS_RSN
		                        ,READ_RANGE,OPEN_DIV_CD
		                        ,TAKE_TAKOVR_DIV_CD,TAKE_TAKOVR_ORG_CD
		                        ,TAKE_TAKOVR_CLSS_ID,TAKE_TAKOVR_CREAT_YYYY
		                        ,TAKE_TAKOVR_FOLDER_REG_SEQ,TAKE_TAKOVR_HO_NO
		                        ,TAKE_TAKOVR_YMD,CREAT_USER_ID
		                        ,CREAT_USER_NM,CREAT_USER_ORG_CD
		                        ,CREAT_USER_ORG_NM,CREAT_USER_POS_RANK_NM
		                        ,CREAT_DTIME,CREAT_SYS_FOLDER_ID
		                        ,READ_CNT,OPER_READ_RANGE_CD
		                        ,CUR_KEEP_ORG_CD                
			                    ,FOLDER_KEEP_STATE_CD,EXPT_DISUSE_YYYY
			                    ,EXPT_TRANSF_YYYY,EFILE_DEL_FLAG
			                    ,ERECORD_FLAG,SCAN_PROG_STATE_CD
			                    ,VIRUS_FLAG
			                    ,VIRUS_DTIME,MIG_FLAG
			                    ,FOLDER_TAKE_SEQ,TAKE_ORG_CD
			                    ,REG_DTIME)
		                (SELECT  RECORD_CENTER_ID,TO_CHAR(SYSDATE,'YYYY')||LPAD((TB_RDFOLDER_SQ01.nextval), 10, '0') FOLDER_ID
			                    ,TAKE_YYYY,TAKE_SNO
			                    ,CREAT_SYS_CD,ORG_CD
			                    ,CLSS_DIV_CD,CLSS_ID
			                    ,CREAT_YYYY,FOLDER_REG_SEQ
			                    ,HO_NO,CLSS_NM
			                    ,TITLE,TITLE,SUB_TITLE
			                    ,FOLDER_TYPE_DIV_CD,ETC_FOLDER_TYPE
			                    ,FOLDER_DETL_TYPE_CD,CREAT_PURPS
			                    ,SUMRY,MEDIA_FORMAT
			                    ,MEDIUM,FOLDER_SIZE
			                    ,RECORD_TOT_PAGE_CNT,RECORD_REG_CNT
			                    ,EFILE_CNT,NEW_DIV_CD
			                    ,CHNG_FLAG,OLD_FOLDER_CREAT_ORG_NM
			                    ,OLD_FOLDER_CLSS_NO,FOLDER_BISPJT_DIV_CD
			                    ,BIS_CLSS_PATH_NM,PJT_CLSS_PATH_NM
			                    ,FOLDER_START_DTIME,FOLDER_CLOSE_DTIME
			                    ,FUNSH_END_DTIME,FUNSH_RSN
			                    ,DECODE(PRESV_TERM_CD,'20','25',PRESV_TERM_CD) PRESV_TERM_CD,PRESV_TERM_FIX_RSN
			                    ,PRESV_METHOD_CD,PRESV_AREA_CD
			                    ,PRESV_LOC,PRESV_DUTY_CHRGR_NM
			                    ,SECU_CLSS_CD,SECU_CLSS_RSN
			                    ,READ_RANGE,'3' OPEN_DIV_CD
			                    ,TAKE_TAKOVR_DIV_CD,TAKE_TAKOVR_ORG_CD
			                    ,TAKE_TAKOVR_CLSS_ID,TAKE_TAKOVR_CREAT_YYYY
			                    ,TAKE_TAKOVR_FOLDER_REG_SEQ,TAKE_TAKOVR_HO_NO
			                    ,TAKE_TAKOVR_YMD,CREAT_USER_ID
			                    ,CREAT_USER_NM,CREAT_USER_ORG_CD
			                    ,CREAT_USER_ORG_NM,CREAT_USER_POS_RANK_NM
			                    ,CREAT_DTIME,CREAT_SYS_FOLDER_ID
			                    ,READ_CNT, '01' OPER_READ_RANGE_CD
			                    ,CUR_KEEP_ORG_CD
			                    ,'01' FOLDER_KEEP_STATE_CD
								,DECODE( GREATEST(TO_NUMBER(presv_term_cd),19), 19, (TO_NUMBER(DECODE(creat_sys_cd,'01',creat_yyyy,'04',creat_yyyy,NVL(SUBSTR(FOLDER_CLOSE_DTIME,0,4),CREAT_YYYY)))+1+TO_NUMBER(presv_term_cd)) ) expt_disuse_yyyy
								,DECODE( LEAST(TO_NUMBER(presv_term_cd),20), 20, (TO_NUMBER(DECODE(creat_sys_cd,'01',creat_yyyy,'04',creat_yyyy,NVL(SUBSTR(FOLDER_CLOSE_DTIME,0,4),CREAT_YYYY)))+10) ) expt_transf_yyyy
			                    ,'0' EFILE_DEL_FLAG
			                    ,ERECORD_FLAG,SCAN_PROG_STATE_CD
			                    ,VIRUS_FLAG,VIRUS_DTIME
			                    ,'0' MIG_FLAG
			                    ,FOLDER_TAKE_SEQ,TAKE_ORG_CD
			                    <!--cubrid ,TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')-->
			                    ,TO_CHAR(sys_datetime,'YYYYMMDDHH24MISS')
			               FROM TB_TKFOLDER
			              WHERE RECORD_CENTER_ID = #recordCenterId:VARCHAR#
			                AND FOLDER_TAKE_SEQ  = #folderTakeSeq:VARCHAR#
			           )
	</insert>
	
	<!-- 
		기록물인수>등록인수>등록인수>일괄등록(인수처리-2.기록물철 관계정보) (INSERT)
	 -->
	<insert id="createBatchTakeFolderRel" parameterClass="rms.take.oldElectReg.domain.OldElectTkFolder">
		INSERT INTO TB_RDFOLDERREL
		(
		    record_center_id, folder_id, rel_type_cd, rel_seq, rel_trgt_id
		    , rel_descr, reg_dtime
		)
		(
			SELECT B.record_center_id
			     , B.folder_id
			     , A.rel_type_cd
			     , A.rel_seq
			     , A.rel_trgt_id
			     , A.rel_descr
			     <!--cubrid , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')-->
			     , TO_CHAR(sys_datetime,'YYYYMMDDHH24MISS')
			FROM TB_TKFOLDERREL A
			   , TB_RDFOLDER B
			WHERE A.record_center_id = B.record_center_id
			AND   A.folder_take_seq = B.folder_take_seq
			AND   B.record_center_id = #recordCenterId:VARCHAR#
			AND   B.folder_take_seq = #folderTakeSeq:VARCHAR#
			AND   B.mig_flag = '0'
		)
	</insert>
	
	<!-- 
		기록물인수>등록인수>등록인수>일괄등록(인수처리-3.기록물철 생산내역) (INSERT)
	 -->
	<insert id="createOldElectTakeFolderCreat" parameterClass="rms.take.oldElectReg.domain.OldElectTkFolder">
		INSERT INTO TB_RDFOLDERCREAT (RECORD_CENTER_ID,FOLDER_ID
		                             ,AGENT_SNO,AGENT_TYPE_CD
		                             ,AGENT_ID,AGENT_NM
		                             ,AGENT_ORG_CD,AGENT_ORG_NM
		                             ,AGENT_POS_RANK_NM,DUTY_TYPE_CD
		                             ,DUTY_ACT_DTIME,REG_DTIME
		                             ,OPIN)
		                     (SELECT RECORD_CENTER_ID,(SELECT FOLDER_ID 
		                                                 FROM TB_RDFOLDER 
		                                                WHERE RECORD_CENTER_ID = #recordCenterId:VARCHAR#
		                                                  AND FOLDER_TAKE_SEQ  = #folderTakeSeq:VARCHAR#
		                                                  AND MIG_FLAG         = '0')
		                            ,AGENT_SNO,AGENT_TYPE_CD
		                            ,AGENT_ID,AGENT_NM
		                            ,AGENT_ORG_CD,AGENT_ORG_NM
		                            ,AGENT_POS_RANK_NM,DUTY_TYPE_CD
		                            <!--cubrid ,DUTY_ACT_DTIME,TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')-->
		                            ,DUTY_ACT_DTIME,TO_CHAR(sys_datetime,'YYYYMMDDHH24MISS')
		                            ,OPIN 
		                       FROM TB_TKFOLDERCREAT
		                      WHERE RECORD_CENTER_ID = #recordCenterId:VARCHAR#
		                        AND FOLDER_TAKE_SEQ  = #folderTakeSeq:VARCHAR#)
	</insert>
	
	<!-- 
		기록물인수>등록인수>등록인수>일괄등록(인수처리-4.기록물철 목적분류) (INSERT)
	 -->
	<insert id="createBatchTakeFolderPjtClss" parameterClass="rms.take.batchReg.domain.BatchTkFolder">
		INSERT INTO TB_RDFOLDERPJTCLSS
		(
		    record_center_id, folder_id, sno, pjt_clss_id
		)
		(
			SELECT B.record_center_id, B.folder_id, A.sno, A.pjt_clss_id
			FROM TB_TKFOLDERPJTCLSS A
			   , TB_RDFOLDER B
			WHERE A.record_center_id = B.record_center_id
			AND   A.folder_take_seq = B.folder_take_seq
			AND   B.record_center_id = #recordCenterId:VARCHAR#
			AND   B.folder_take_seq = #folderTakeSeq:VARCHAR#
			AND   B.mig_flag = '0'
		)
	</insert>
	
	<!-- 
		기록물인수>등록인수>등록인수>일괄등록(인수처리-5.기록물철 인수인계정보) (INSERT)
	 -->
	<insert id="createOldElectTakeFolderTaketakovr" parameterClass="rms.take.oldElectReg.domain.OldElectTkFolder">
		INSERT INTO TB_RDFOLDERTAKETAKOVR (RECORD_CENTER_ID,FOLDER_ID
		                                  ,SNO,TAKE_TAKOVR_DIV_CD
		                                  ,TAKE_TAKOVR_CREAT_DTIME,TAKE_TAKOVR_ORG_CD
		                                  ,TAKE_TAKOVR_ORG_NM,TAKE_TAKOVR_CLSS_ID
		                                  ,TAKE_TAKOVR_CREAT_YYYY,TAKE_TAKOVR_FOLDER_REG_SEQ
		                                  ,TAKE_TAKOVR_HO_NO,REG_DTIME
		                                  ,TAKE_MNG_NO)
		                           (SELECT RECORD_CENTER_ID,(SELECT FOLDER_ID 
		                                                       FROM TB_RDFOLDER 
		                                                      WHERE RECORD_CENTER_ID = #recordCenterId:VARCHAR#
		                                                        AND FOLDER_TAKE_SEQ  = #folderTakeSeq:VARCHAR#
		                                                        AND MIG_FLAG         = '0')
		                                  ,SNO,TAKE_TAKOVR_DIV_CD
		                                  ,TAKE_TAKOVR_CREAT_DTIME,TAKE_TAKOVR_ORG_CD
		                                  ,TAKE_TAKOVR_ORG_NM,TAKE_TAKOVR_CLSS_ID
		                                  ,TAKE_TAKOVR_CREAT_YYYY,TAKE_TAKOVR_FOLDER_REG_SEQ
		                                  <!--cubrid ,TAKE_TAKOVR_HO_NO,TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')-->
		                                  ,TAKE_TAKOVR_HO_NO,TO_CHAR(sys_datetime,'YYYYMMDDHH24MISS')
		                                  ,TAKE_MNG_NO
		                              FROM TB_TKFOLDERTAKETAKOVR
		                             WHERE RECORD_CENTER_ID = #recordCenterId:VARCHAR#
		                               AND FOLDER_TAKE_SEQ  = #folderTakeSeq:VARCHAR#)
	</insert>
	
	<!-- 
		기록물인수>등록인수>등록인수>일괄등록(인수처리-6.기록물철 변경이력정보) (INSERT)
	 -->
	<insert id="createBatchTakeFolderChngHist" parameterClass="rms.take.batchReg.domain.BatchTkFolder">
		INSERT INTO TB_RDFOLDERCHNGHIST
		(
		    record_center_id, folder_id, chng_hist_no, org_cd, clss_id
			, creat_yyyy, folder_reg_seq, ho_no, title_bef, title_aft
			, folder_type_div_cd_bef, folder_type_div_cd_aft, chng_ymd, chng_rsn, chng_user_nm
			, reg_dtime
		)
		(
			SELECT B.record_center_id, B.folder_id, A.chng_hist_no, A.org_cd, A.clss_id
				 , A.creat_yyyy, A.folder_reg_seq, A.ho_no, A.title_bef, A.title_aft
				 , A.folder_type_div_cd_bef, A.folder_type_div_cd_aft, A.chng_ymd, A.chng_rsn, A.chng_user_nm
				 <!--cubrid , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')-->
				 , TO_CHAR(sys_datetime,'YYYYMMDDHH24MISS')
			FROM TB_TKFOLDERCHNGHIST A
			   , TB_RDFOLDER B
			WHERE A.record_center_id = B.record_center_id
			AND   A.folder_take_seq = B.folder_take_seq
			AND   B.record_center_id = #recordCenterId:VARCHAR#
			AND   B.folder_take_seq = #folderTakeSeq:VARCHAR#
			AND   B.mig_flag = '0'
		)
	</insert>
	
	<!-- 
		기록물인수>등록인수>등록인수>일괄등록(인수처리-7.기록물철 특수목록) (INSERT)
	 -->
	<insert id="createBatchTakeFolderSpclList" parameterClass="rms.take.batchReg.domain.BatchTkFolder">
		INSERT INTO TB_RDFOLDERKEYWD
		(RECORD_CENTER_ID, FOLDER_ID, KEYWD_LEVL, KEYWD, REG_DTIME)
		(
			SELECT RECORD_CENTER_ID
				,(SELECT FOLDER_ID
		                                                       FROM TB_RDFOLDER 
		                                                      WHERE RECORD_CENTER_ID = #recordCenterId:VARCHAR#
		                                                        AND FOLDER_TAKE_SEQ  = #folderTakeSeq:VARCHAR#
					AND MIG_FLAG         = '0') AS FOLDER_ID
				, 1
				, REPLACE(KEYWD,'/',',')
				<!--cubrid, TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')-->
				, TO_CHAR(sys_datetime,'YYYYMMDDHH24MISS')
			FROM (
				SELECT RECORD_CENTER_ID,MAX (KEYWD) KEYWD
				FROM (
					SELECT RECORD_CENTER_ID,SUBSTR (SYS_CONNECT_BY_PATH (KEYWD, ','), 2) KEYWD
					FROM (
						SELECT RECORD_CENTER_ID,SUBSTR(DECODE(NVL(SPCL_LIST1,''),'','',SPCL_LIST1||'/')
                                                                             ||DECODE(NVL(SPCL_LIST2,''),'','',SPCL_LIST2||'/')
                                                                             ||DECODE(NVL(SPCL_LIST3,''),'','',SPCL_LIST3||'/') 
							, 0
							, LENGTH(DECODE(NVL(SPCL_LIST1,''),'','',SPCL_LIST1||'/')
                                                                                     ||DECODE(NVL(SPCL_LIST2,''),'','',SPCL_LIST2||'/')
                                                                                     ||DECODE(NVL(SPCL_LIST3,''),'','',SPCL_LIST3||'/'))-1) KEYWD
							, FOLDER_TAKE_SEQ
							, TO_NUMBER(SEQ) AS RNUM
                                                  FROM TB_TKSPCLLIST 
                                                 WHERE RECORD_CENTER_ID = #recordCenterId:VARCHAR#
                                                   AND FOLDER_TAKE_SEQ  = #folderTakeSeq:VARCHAR#
                                                 ORDER BY SEQ
                                                )
                                        START WITH RNUM = 1
                                  CONNECT BY PRIOR RNUM = RNUM - 1 
                                               AND PRIOR FOLDER_TAKE_SEQ = FOLDER_TAKE_SEQ
				)
                                     GROUP BY RECORD_CENTER_ID
                                     )
  	                            )
	</insert>
	
	<!-- 기록물철 구분자 업데이트 -->
	<update id="updateBatchTakeFolderSpclList" parameterClass="rms.take.batchReg.domain.BatchTkFolder">
		 UPDATE tb_rdfolderkeywd 
   		SET keywd = REPLACE (keywd, '/', ',')
 		WHERE folder_id =
          (SELECT folder_id
             FROM tb_rdfolder 
            WHERE folder_take_seq = #folderTakeSeq:VARCHAR#
              AND record_center_id = #recordCenterId:VARCHAR#
           )
			  and record_center_id=#recordCenterId:VARCHAR#
	</update>
	
	<!-- 
		기록물인수>등록인수>등록인수>일괄등록(인수처리-8.기록물건) (INSERT)
	 -->
	<insert id="createOldElectTakeRecord" parameterClass="rms.take.oldElectReg.domain.OldElectTkFolder">
		INSERT INTO TB_RDRECORD
		(
			RECORD_CENTER_ID, RECORD_ID, FOLDER_ID, TAKE_YYYY, TAKE_YYYY_SNO
			, CREAT_SYS_CD, ORG_CD, CREAT_YYYY, CREAT_REG_DTIME, CREAT_REG_NO
			, DTCH_REG_NO, CLSS_DIV_CD, CLSS_ID, CLSS_NM, ORG_TITLE, TITLE
			, SUB_TITLE, RECORD_REG_DIV_CD, RECORD_DETL_TYPE_CD, RECORD_SUMRY, AUDVIS_RECORD_TYPE
			, AUDVIS_RECORD_SUMRY, MEDIA_FORMAT, MEDIUM, RECORD_SIZE, ATTACH_CNT
			, RECORD_PAGE_CNT, APROV_POS_RANK_NM, DUTY_CHRGR_NM, ENFORC_YMD, CREAT_ORG_REG_NO
			, ERECORD_FLAG, OLD_RECORD_CREAT_ORG_NM, OLD_RECORD_DOCNO, OLD_RECORD_PRESV_TERM, PRESV_LOC
			, SECU_CLSS_CD, SECU_CLSS_RSN, READ_RANGE, OPEN_DIV_CD, OPEN_GRADE
			, PART_OPEN_RSN, OPEN_LIMIT_DATE, OPEN_LIMIT_PART, OPEN_EXPT_DTIME, RECVER, SENDER
			, DOC_DISTR_NO, FOLDER_CLSS_NO, SPCL_RECORD_TYPE, NEW_DIV_CD, CHNG_FLAG
			, RJCT_FLAG, DOC_NO, DOC_NO_ORG_NM, CREAT_USER_ID, CREAT_USER_NM, CREAT_USER_ORG_CD, CREAT_USER_ORG_NM
			, CREAT_USER_POS_RANK_NM, CREAT_DTIME, CREAT_SYS_RECORD_ID, OPER_READ_RANGE_CD, SCAN_FIN_FLAG
			, RECORD_TAKE_SEQ, MIG_FLAG, ENFORC_DOCNO, LANG, REG_DTIME
			, RECORD_SNO, RECORD_CLSS_CD, transf_neo_trans_state
		)
		(
			SELECT RECORD_CENTER_ID, TO_CHAR(SYSDATE,'YYYY')||LPAD((TB_RDRECORD_SQ01.NEXTVAL ), 10, '0') RECORD_ID
				, FOLDER_ID, TAKE_YYYY, TAKE_YYYY_SNO
				, CREAT_SYS_CD, ORG_CD, CREAT_YYYY, CREAT_REG_DTIME, CREAT_REG_NO
				, DTCH_REG_NO, CLSS_DIV_CD, CLSS_ID, CLSS_NM, TITLE, TITLE
				, SUB_TITLE, RECORD_REG_DIV_CD, RECORD_DETL_TYPE_CD, RECORD_SUMRY, AUDVIS_RECORD_TYPE
				, AUDVIS_RECORD_SUMRY, MEDIA_FORMAT, MEDIUM, RECORD_SIZE, ATTACH_CNT
				, RECORD_PAGE_CNT, APROV_POS_RANK_NM, DUTY_CHRGR_NM, ENFORC_YMD, CREAT_ORG_REG_NO
				, ERECORD_FLAG, OLD_RECORD_CREAT_ORG_NM, OLD_RECORD_DOCNO, OLD_RECORD_PRESV_TERM, PRESV_LOC
				, SECU_CLSS_CD, SECU_CLSS_RSN, READ_RANGE, OPEN_DIV_CD, OPEN_GRADE
				, PART_OPEN_RSN, OPEN_LIMIT_DATE, OPEN_LIMIT_PART, OPEN_EXPT_DTIME, RECVER, SENDER
				, DOC_DISTR_NO, FOLDER_CLSS_NO, SPCL_RECORD_TYPE, NEW_DIV_CD, CHNG_FLAG
				, RJCT_FLAG, DOC_NO, DOC_NO_ORG_NM, CREAT_USER_ID, CREAT_USER_NM, CREAT_USER_ORG_CD, CREAT_USER_ORG_NM
				, CREAT_USER_POS_RANK_NM, CREAT_DTIME, CREAT_SYS_RECORD_ID, OPER_READ_RANGE_CD, SCAN_FIN_FLAG
				, RECORD_TAKE_SEQ, MIG_FLAG, ENFORC_DOCNO, LANG, REG_DTIME
				, RECORD_SNO, RECORD_CLSS_CD, '0' transf_neo_trans_state
			FROM (
				(
					SELECT RECORD_CENTER_ID, FOLDER_ID, TAKE_YYYY, TAKE_YYYY_SNO
					, CREAT_SYS_CD, ORG_CD, CREAT_YYYY, CREAT_REG_DTIME, CREAT_REG_NO
					, DTCH_REG_NO, CLSS_DIV_CD, CLSS_ID, CLSS_NM, TITLE
					, SUB_TITLE, RECORD_REG_DIV_CD, RECORD_DETL_TYPE_CD, RECORD_SUMRY, AUDVIS_RECORD_TYPE
					, AUDVIS_RECORD_SUMRY, MEDIA_FORMAT, MEDIUM, RECORD_SIZE, ATTACH_CNT
					, RECORD_PAGE_CNT, APROV_POS_RANK_NM, DUTY_CHRGR_NM, ENFORC_YMD, CREAT_ORG_REG_NO
					, ERECORD_FLAG, OLD_RECORD_CREAT_ORG_NM, OLD_RECORD_DOCNO, OLD_RECORD_PRESV_TERM, PRESV_LOC
					, SECU_CLSS_CD, SECU_CLSS_RSN, READ_RANGE, OPEN_DIV_CD, OPEN_GRADE
					, PART_OPEN_RSN, OPEN_LIMIT_DATE, OPEN_LIMIT_PART, OPEN_EXPT_DTIME, RECVER, SENDER
					, DOC_DISTR_NO, FOLDER_CLSS_NO, SPCL_RECORD_TYPE, NEW_DIV_CD, CHNG_FLAG
					, RJCT_FLAG, DOC_NO, DOC_NO_ORG_NM, CREAT_USER_ID, CREAT_USER_NM, CREAT_USER_ORG_CD, CREAT_USER_ORG_NM
					, CREAT_USER_POS_RANK_NM, CREAT_DTIME, CREAT_SYS_RECORD_ID, OPER_READ_RANGE_CD, SCAN_FIN_FLAG
					, RECORD_TAKE_SEQ, MIG_FLAG, ENFORC_DOCNO, LANG, REG_DTIME
					, RECORD_SNO, RECORD_CLSS_CD
					FROM (
						SELECT A.RECORD_CENTER_ID
							, (SELECT C.FOLDER_ID FROM TB_RDFOLDER C WHERE C.RECORD_CENTER_ID=B.RECORD_CENTER_ID AND C.FOLDER_TAKE_SEQ=B.FOLDER_TAKE_SEQ) FOLDER_ID
							, B.TAKE_YYYY
							, (SELECT C.TAKE_YYYY_SNO FROM TB_RDFOLDER C WHERE C.RECORD_CENTER_ID=B.RECORD_CENTER_ID AND C.FOLDER_TAKE_SEQ=B.FOLDER_TAKE_SEQ) TAKE_YYYY_SNO
							, A.CREAT_SYS_CD, A.ORG_CD, A.CREAT_YYYY, A.CREAT_REG_DTIME, A.CREAT_REG_NO
							, A.DTCH_REG_NO, B.CLSS_DIV_CD, B.CLSS_ID, B.CLSS_NM, A.TITLE
							, A.SUB_TITLE, A.RECORD_REG_DIV_CD, A.RECORD_DETL_TYPE_CD, A.RECORD_SUMRY, A.AUDVIS_RECORD_TYPE
							, A.AUDVIS_RECORD_SUMRY, A.MEDIA_FORMAT, A.MEDIUM, A.RECORD_SIZE, A.ATTACH_CNT
							, A.RECORD_PAGE_CNT, A.APROV_POS_RANK_NM, A.DUTY_CHRGR_NM, A.ENFORC_YMD, A.CREAT_ORG_REG_NO
							, A.ERECORD_FLAG, A.OLD_RECORD_CREAT_ORG_NM, A.OLD_RECORD_DOCNO, A.OLD_RECORD_PRESV_TERM, A.PRESV_LOC
							, A.SECU_CLSS_CD, A.SECU_CLSS_RSN, A.READ_RANGE, A.OPEN_DIV_CD, A.OPEN_GRADE
							, A.PART_OPEN_RSN, A.OPEN_LIMIT_DATE, A.OPEN_LIMIT_PART, A.OPEN_EXPT_DTIME, A.RECVER, A.SENDER
							, A.DOC_DISTR_NO, A.FOLDER_CLSS_NO, A.SPCL_RECORD_TYPE, A.NEW_DIV_CD, A.CHNG_FLAG
							, A.RJCT_FLAG, A.DOC_NO, A.DOC_NO_ORG_NM, A.CREAT_USER_ID, A.CREAT_USER_NM, A.CREAT_USER_ORG_CD, A.CREAT_USER_ORG_NM
							, A.CREAT_USER_POS_RANK_NM, A.CREAT_DTIME, A.CREAT_SYS_RECORD_ID
							, '02' OPER_READ_RANGE_CD
							, A.SCAN_FIN_FLAG 
							<!--cubrid , A.RECORD_TAKE_SEQ, '0' MIG_FLAG, A.ENFORC_DOCNO, A.LANG, TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS') REG_DTIME-->
							, A.RECORD_TAKE_SEQ, '0' MIG_FLAG, A.ENFORC_DOCNO, A.LANG, TO_CHAR(sys_datetime,'YYYYMMDDHH24MISS') REG_DTIME
							, A.RECORD_SNO, A.RECORD_CLSS_CD
						FROM  TB_TKRECORD A, TB_TKFOLDER B
						WHERE A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
						AND   A.FOLDER_TAKE_SEQ = B.FOLDER_TAKE_SEQ
						AND   B.RECORD_CENTER_ID = #recordCenterId:VARCHAR#
						AND   B.FOLDER_TAKE_SEQ = #folderTakeSeq:VARCHAR#
						AND   B.CREAT_SYS_CD = '06'
						ORDER BY A.ORG_CD, A.CREAT_YYYY, A.CREAT_REG_NO, A.DTCH_REG_NO
					)
				)
			)
		)
	</insert>
	
	<!-- 
		기록물인수>등록인수>등록인수>일괄등록(인수처리-9.기록물건 관계정보) (INSERT)
	 -->
	<insert id="createBatchTakeRecordRel" parameterClass="rms.take.batchReg.domain.BatchTkFolder">
		INSERT INTO TB_RDRECORDREL
		(
			record_center_id, record_id, rel_type_cd, rel_seq, rel_trgt_id
			, rel_descr, reg_dtime
		)
		(
			SELECT B.record_center_id, B.record_id, A.rel_type_cd, A.rel_seq, A.rel_trgt_id
				 <!--cubrid , A.rel_descr, TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')-->
				 , A.rel_descr, TO_CHAR(sys_datetime,'YYYYMMDDHH24MISS')
			FROM TB_TKRECORDREL A
			   , TB_RDRECORD B
			   , TB_RDFOLDER C
			WHERE A.record_center_id = B.record_center_id
			AND   A.record_take_seq = B.record_take_seq
			AND   B.record_center_id = C.record_center_id
			AND   B.folder_id = C.folder_id
			AND   B.mig_flag = '0'
			AND   C.record_center_id = #recordCenterId:VARCHAR#
			AND   C.folder_take_seq = #folderTakeSeq:VARCHAR#
			AND   C.mig_flag = '0'
		)
	</insert>
	
	<!-- 
		기록물인수>등록인수>등록인수>일괄등록(인수처리-10.기록물건 생산내역) (INSERT)
	 -->
	<insert id="createOldElectTakeRecordCreat" parameterClass="rms.take.oldElectReg.domain.OldElectTkFolder">
		INSERT INTO TB_RDRECORDCREAT
		(
			record_center_id, record_id, agent_sno, agent_type_cd, agent_id
			, agent_nm, agent_org_cd, agent_org_nm, agent_pos_rank_nm, req_state_val
			, duty_type_cd, duty_act_dtime, opin, opin_dtime, handl_rslt, reg_dtime
		)
		(
			SELECT B.record_center_id, B.record_id, A.agent_sno, A.agent_type_cd, A.agent_id
				 , A.agent_nm, A.agent_org_cd, A.agent_org_nm, A.agent_pos_rank_nm, A.req_state_val
				 <!--cubrid , A.duty_type_cd, A.duty_act_dtime, A.opin, A.opin_dtime, A.handl_rslt, TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')-->
				 , A.duty_type_cd, A.duty_act_dtime, A.opin, A.opin_dtime, A.handl_rslt, TO_CHAR(sys_datetime,'YYYYMMDDHH24MISS')
			FROM TB_TKRECORDCREAT A
			   , TB_RDRECORD B
			   , TB_RDFOLDER C
			WHERE A.record_center_id = B.record_center_id
			AND   A.record_take_seq = B.record_take_seq
			AND   B.record_center_id = C.record_center_id
			AND   B.folder_id = C.folder_id
			AND   B.mig_flag = '0'
			AND   C.record_center_id = #recordCenterId:VARCHAR#
			AND   C.folder_take_seq = #folderTakeSeq:VARCHAR#
			AND   C.mig_flag = '0'
		)
	</insert>
	
	<!-- 
		기록물인수>등록인수>등록인수>일괄등록(인수처리-11.기록물건 정보출처) (INSERT)
	 -->
	<insert id="createOldElectTakeRecordInfoSrc" parameterClass="rms.take.oldElectReg.domain.OldElectTkFolder">
		INSERT INTO TB_RDRECORDINFOSRC
		(
			record_center_id, record_id, info_src_type_cd, info_src_sno, info_src_title
			, info_src_id, reg_dtime
		)
		(
			SELECT B.record_center_id, B.record_id, A.info_src_type_cd, A.info_src_sno, A.info_src_title
				 <!--cubrid , A.info_src_id, TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')-->
				 , A.info_src_id, TO_CHAR(sys_datetime,'YYYYMMDDHH24MISS')
			FROM TB_TKRECORDINFOSRC A
			   , TB_RDRECORD B
			   , TB_RDFOLDER C
			WHERE A.record_center_id = B.record_center_id
			AND   A.record_take_seq = B.record_take_seq
			AND   B.record_center_id = C.record_center_id
			AND   B.folder_id = C.folder_id
			AND   B.mig_flag = '0'
			AND   C.record_center_id = #recordCenterId:VARCHAR#
			AND   C.folder_take_seq = #folderTakeSeq:VARCHAR#
			AND   C.mig_flag = '0'
		)
	</insert>
	
	<!-- 
		기록물인수>등록인수>등록인수>일괄등록(인수처리-12.기록물건 변경이력정보) (INSERT)
	 -->
	<insert id="createBatchTakeRecordChngHist" parameterClass="rms.take.batchReg.domain.BatchTkFolder">
		INSERT INTO TB_RDRECORDCHNGHIST
		(
			record_center_id, record_id, chng_hist_no, org_cd, creat_yyyy
			, creat_reg_no, dtch_reg_no, creat_reg_ymd_bef, creat_reg_ymd_aft, title_bef
			, title_aft, page_cnt_bef, page_cnt_aft, aprov_pos_rank_bef, aprov_pos_rank_aft
			, duty_chrgr_bef, duty_chrgr_aft, enforc_ymd_bef, enforc_ymd_aft, recver_bef
			, recver_aft, chng_ymd, chng_rsn, chng_user_nm, reg_dtime
		)
		(
			SELECT B.record_center_id, B.record_id, A.chng_hist_no, A.org_cd, A.creat_yyyy
				 , A.creat_reg_no, A.dtch_reg_no, A.creat_reg_ymd_bef, A.creat_reg_ymd_aft, A.title_bef
				 , A.title_aft, A.page_cnt_bef, A.page_cnt_aft, A.aprov_pos_rank_bef, A.aprov_pos_rank_aft
				 , A.duty_chrgr_bef, A.duty_chrgr_aft, A.enforc_ymd_bef, A.enforc_ymd_aft, A.recver_bef
				 <!--cubrid , A.recver_aft, A.chng_ymd, A.chng_rsn, A.chng_user_nm, TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')-->
				 , A.recver_aft, A.chng_ymd, A.chng_rsn, A.chng_user_nm, TO_CHAR(sys_datetime,'YYYYMMDDHH24MISS')
			FROM TB_TKRECORDCHNGHIST A
			   , TB_RDRECORD B
			   , TB_RDFOLDER C
			WHERE A.record_center_id = B.record_center_id
			AND   A.record_take_seq = B.record_take_seq
			AND   B.record_center_id = C.record_center_id
			AND   B.folder_id = C.folder_id
			AND   B.mig_flag = '0'
			AND   C.record_center_id = #recordCenterId:VARCHAR#
			AND   C.folder_take_seq = #folderTakeSeq:VARCHAR#
			AND   C.mig_flag = '0'
		)
	</insert>
	
	<!-- 기록물건 구분자 업데이트 -->
	<update id="updateOldElectTakeRecordSpclList" parameterClass="rms.take.oldElectReg.domain.OldElectTkFolder">
         UPDATE tb_rdrecordkeywd 
   		 SET keywd = REPLACE (keywd, '/', ',')
         WHERE record_id in
          (SELECT a.record_id
             FROM tb_rdrecord a, tb_rdfolder b
            WHERE b.folder_take_seq = #folderTakeSeq:VARCHAR#
              AND a.record_center_id = #recordCenterId:VARCHAR#
              and a.folder_id=b.folder_id
             )
			AND record_center_id = #recordCenterId:VARCHAR#
	</update>
	
	<!-- 
		기록물인수>등록인수>등록인수>일괄등록(인수처리-14.원문엔진 등록할 기록물건목록 조회) (SELECT)
	 -->
	<select id="findOldElectTakeRecordList" parameterClass="rms.take.oldElectReg.domain.OldElectTkFolder" resultMap="OldElectTakeRecordList-result">
		SELECT B.record_center_id
			 , B.record_id
		     , B.erecord_flag
		     , B.record_take_seq
		FROM TB_RDFOLDER A
		   , TB_RDRECORD B
		WHERE A.record_center_id = #recordCenterId:VARCHAR#
		AND   A.folder_take_seq = #folderTakeSeq:VARCHAR#
		AND   A.record_center_id = B.record_center_id
		AND   A.folder_id = B.folder_id
	</select>
	
	<!-- 
		기록물인수>등록인수>등록인수>일괄등록(인수처리-15.원문엔진 등록할 파일목록 조회) (SELECT)
	 -->
	<select id="findOldElectTakeAttachList" parameterClass="rms.take.oldElectReg.domain.OldElectTkRecord" resultMap="OldElectTakeAttachList-result">
		SELECT B.doc_type_cd
			 , B.attach_file_path
			 , B.file_nm
			 , B.agent_nm
			 , B.ver
			 , NVL(B.attach_file_page_cnt,0) attach_file_page_cnt
			 , NVL(B.file_size,0) file_size
		FROM TB_RDRECORD A
		   , TB_TKATTACHFILE B
		WHERE A.record_center_id = #recordCenterId:VARCHAR#
		AND   A.record_id = #recordId:VARCHAR#
		AND   A.record_center_id = B.record_center_id
		AND   A.record_take_seq = B.record_take_seq
		ORDER BY B.DOC_TYPE_SNO
	</select>
	
	<!-- 
		기록물인수>등록인수>등록인수>일괄등록(인수처리-16.기록물건 원문ID 갱신) (UPDATE)
	 -->
	<update id="updateOldElectTakeRecordOrign" parameterClass="rms.take.oldElectReg.domain.OldElectTkRecord">
		UPDATE TB_RDRECORD
		SET   orign_id = #orignId:VARCHAR#
		WHERE record_center_id = #recordCenterId:VARCHAR#
		AND   record_id = #recordId:VARCHAR#
	</update>
	
	<!-- 
		기록물인수>등록인수>등록인수>일괄등록(인수처리-17.기록물건 인수완료) (UPDATE)
	 -->
	<update id="updateOldElectTakeRecordFin" parameterClass="rms.take.oldElectReg.domain.OldElectTkRecord">
		UPDATE TB_TKRECORD
		SET   take_fin_flag = '1'
		WHERE record_center_id = #recordCenterId:VARCHAR#
		AND   record_take_seq = #recordTakeSeq:VARCHAR#
	</update>
	
	<!-- 
		기록물인수>등록인수>등록인수>일괄등록(인수처리-18.기록물철 인수완료) (UPDATE)
	 -->
	<update id="updateOldElectTakeFolderFin" parameterClass="rms.take.oldElectReg.domain.OldElectTkFolder">
		UPDATE TB_TKFOLDER
		SET   take_fin_flag = '1'
		WHERE record_center_id = #recordCenterId:VARCHAR#
		AND   folder_take_seq = #folderTakeSeq:VARCHAR#
	</update> 
	
	<!-- 
		기록물인수>등록인수>등록인수>일괄등록(인수처리-19.생산현황등록-생산현황보고접수) (INSERT)
	 -->
	<insert id="createBatchTakeFolderCreatReport" parameterClass="rms.take.batchReg.domain.BatchTkFolder">
		INSERT INTO TB_CRREPORT
		(
		    record_center_id, cr_report_yyyy, cr_report_org_cd, creat_sys_cd, cr_report_sno
		    , state_div_cd, reg_dtime
		)
		(
		    SELECT record_center_id
		        , take_yyyy
		        , take_org_cd
		        , creat_sys_cd
		        , take_yyyy_sno
		        , '06'
		        <!--cubrid , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')-->
		        , TO_CHAR(sys_datetime,'YYYYMMDDHH24MISS')
		    FROM  TB_RDFOLDER AAA
		    WHERE record_center_id = #recordCenterId:VARCHAR#
		    AND   folder_take_seq = #folderTakeSeq:VARCHAR#
			AND   
			<!--
			(record_center_id, take_yyyy, take_org_cd, creat_sys_cd, take_yyyy_sno)
			       NOT IN 
			      (SELECT record_center_id, cr_report_yyyy, cr_report_org_cd, creat_sys_cd, cr_report_sno
			-->
			EXISTS (SELECT 1
				   FROM TB_CRREPORT
				   WHERE record_center_id = AAA.record_center_id
				   AND cr_report_yyyy = AAA.take_yyyy
				   AND cr_report_org_cd = AAA.take_org_cd
				   AND creat_sys_cd = AAA.creat_sys_cd
				   AND cr_report_sno = AAA.take_yyyy_sno
				   )
		)
	</insert>
	
	<!-- 
		기록물인수>등록인수>등록인수>일괄등록(인수처리-20.생산현황등록-생산현황보고 기록물철) (INSERT)
	 -->
	<insert id="createBatchTakeFolderCreatFolder" parameterClass="rms.take.batchReg.domain.BatchTkFolder">
		INSERT INTO TB_CRFOLDER
		(
		    record_center_id, folder_recv_seq, org_cd, cr_report_yyyy, cr_report_org_cd
		    , creat_sys_cd, cr_report_sno, clss_div_cd, clss_id, creat_yyyy
		    , folder_reg_seq, ho_no, clss_nm, title, sub_title
		    , folder_type_div_cd, etc_folder_type, folder_detl_type_cd, creat_purps, media_format
		    , medium, folder_size, record_tot_page_cnt, record_reg_cnt, efile_cnt
		    , new_div_cd, chng_flag, old_folder_creat_org_nm, old_folder_clss_no, folder_bispjt_div_cd
		    , bis_clss_path_nm, pjt_clss_path_nm, folder_start_dtime, folder_close_dtime, funsh_end_dtime
		    , funsh_rsn, presv_term_cd, presv_term_fix_rsn, presv_method_cd, presv_area_cd
		    , presv_loc, presv_duty_chrgr_nm, secu_clss_cd, secu_clss_rsn, read_range
		    , take_takovr_div_cd, take_takovr_org_cd, take_takovr_clss_id, take_takovr_creat_yyyy, take_takovr_folder_reg_seq
		    , take_takovr_ho_no, take_takovr_ymd, creat_user_id, creat_user_nm, creat_user_org_cd
		    , creat_user_org_nm, creat_user_pos_rank_nm, creat_dtime, erecord_flag, creat_sys_folder_id
		    , error_flag, exam_rslt_cd, exam_cont, rjct_flag, rjct_cont
		    , take_fin_flag, cr_report_infrm_flag, reg_dtime, group_presv_term_cd, folder_take_seq
		    , sumry
		)
		(
		    SELECT record_center_id
		        , TO_CHAR(SYSDATE,'YYYY')||LPAD((TB_CRFOLDER_SQ01.nextval), 15, '0')
		        , org_cd, take_yyyy, take_org_cd
		        , creat_sys_cd, take_yyyy_sno, clss_div_cd, clss_id, creat_yyyy
		        , folder_reg_seq, ho_no, clss_nm, title, sub_title
		        , folder_type_div_cd, etc_folder_type, folder_detl_type_cd, creat_purps, media_format
		        , medium, folder_size, record_tot_page_cnt, record_reg_cnt, efile_cnt
		        , new_div_cd, chng_flag, old_folder_creat_org_nm, old_folder_clss_no, folder_bispjt_div_cd
		        , bis_clss_path_nm, pjt_clss_path_nm, folder_start_dtime, folder_close_dtime, funsh_end_dtime
		        , funsh_rsn, presv_term_cd, presv_term_fix_rsn, presv_method_cd, presv_area_cd
		        , presv_loc, presv_duty_chrgr_nm, secu_clss_cd, secu_clss_rsn, read_range
		        , take_takovr_div_cd, take_takovr_org_cd, take_takovr_clss_id, take_takovr_creat_yyyy, take_takovr_folder_reg_seq
		        , take_takovr_ho_no, take_takovr_ymd, creat_user_id, creat_user_nm, creat_user_org_cd
		        , creat_user_org_nm, creat_user_pos_rank_nm, creat_dtime, erecord_flag, creat_sys_folder_id
		        , 'N', '0', '', '0', ''
		        <!--cubrid , '0', '0', TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS'), presv_term_cd, folder_take_seq-->
		        , '0', '0', TO_CHAR(sys_datetime,'YYYYMMDDHH24MISS'), presv_term_cd, folder_take_seq
		        , sumry
		    FROM  TB_RDFOLDER
		    WHERE record_center_id = #recordCenterId:VARCHAR#
		    AND   folder_take_seq = #folderTakeSeq:VARCHAR#
		)
	</insert>
	
	<!-- 
		기록물인수>등록인수>등록인수>일괄등록(인수처리-21.생산현황등록-기록물철인수인계정보) (INSERT)
	 -->
	<insert id="createBatchTakeFolderCreatFolderTakeTakovr" parameterClass="rms.take.batchReg.domain.BatchTkFolder">
		INSERT INTO TB_CRFOLDERTAKETAKOVR
		(
		    record_center_id, folder_recv_seq, sno, take_takovr_div_cd, take_takovr_creat_dtime
		    , take_takovr_org_cd, take_takovr_org_nm, reg_dtime, take_takovr_clss_id, take_takovr_creat_yyyy
		    , take_takovr_folder_reg_seq, take_takovr_ho_no
		)
		(
		    SELECT C.record_center_id
		        , C.folder_recv_seq
		        , A.sno
		        , A.take_takovr_div_cd
		        , A.take_takovr_creat_dtime
		        , A.take_takovr_org_cd
		        , A.take_takovr_org_nm
		        <!--cubrid , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')-->
		        , TO_CHAR(sys_datetime,'YYYYMMDDHH24MISS')
		        , A.take_takovr_clss_id
		        , A.take_takovr_creat_yyyy
		        , A.take_takovr_folder_reg_seq
		        , A.take_takovr_ho_no
		    FROM  TB_RDFOLDERTAKETAKOVR A
		        , TB_RDFOLDER B
		        , TB_CRFOLDER C
		    WHERE C.record_center_id = #recordCenterId:VARCHAR#
		    AND   C.folder_take_seq = #folderTakeSeq:VARCHAR#
		    AND   C.record_center_id = B.record_center_id
		    AND   C.org_cd = B.org_cd
		    AND   C.clss_id = B.clss_id
		    AND   C.creat_yyyy = B.creat_yyyy
		    AND   C.folder_reg_seq = B.folder_reg_seq
		    AND   C.ho_no = B.ho_no
		    AND   B.record_center_id = A.record_center_id
		    AND   B.folder_id = A.folder_id
		)
	</insert>
	
	<!-- 
		기록물인수>등록인수>등록인수>일괄등록(인수처리-22.생산현황등록-생산현황보고 기록물철변경이력) (INSERT)
	 -->
	<insert id="createBatchTakeFolderCreatFolderChngHist" parameterClass="rms.take.batchReg.domain.BatchTkFolder">
		INSERT INTO TB_CRFOLDERCHNGHIST
		(
		    record_center_id, folder_recv_seq, chng_hist_no, org_cd, clss_id
		    , creat_yyyy, folder_reg_seq, ho_no, title_bef, title_aft
		    , folder_type_div_cd_bef, folder_type_div_cd_aft, chng_ymd, chng_rsn, chng_user_nm
		    , reg_dtime
		)
		(
		    SELECT C.record_center_id
		        , C.folder_recv_seq
		        , A.chng_hist_no
		        , A.org_cd
		        , A.clss_id
		        , A.creat_yyyy
		        , A.folder_reg_seq
		        , A.ho_no
		        , A.title_bef
		        , A.title_aft
		        , A.folder_type_div_cd_bef
		        , A.folder_type_div_cd_aft
		        , A.chng_ymd
		        , A.chng_rsn
		        , A.chng_user_nm
		        <!--cubrid , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')-->
		        , TO_CHAR(sys_datetime,'YYYYMMDDHH24MISS')
		    FROM  TB_RDFOLDERCHNGHIST A
		        , TB_RDFOLDER B
		        , TB_CRFOLDER C
		    WHERE C.record_center_id = #recordCenterId:VARCHAR#
		    AND   C.folder_take_seq = #folderTakeSeq:VARCHAR#
		    AND   C.record_center_id = B.record_center_id
		    AND   C.org_cd = B.org_cd
		    AND   C.clss_id = B.clss_id
		    AND   C.creat_yyyy = B.creat_yyyy
		    AND   C.folder_reg_seq = B.folder_reg_seq
		    AND   C.ho_no = B.ho_no
		    AND   B.record_center_id = A.record_center_id
		    AND   B.folder_id = A.folder_id
		)
	</insert>
	
	<!-- 
		기록물인수>등록인수>등록인수>일괄등록(인수처리-23.생산현황등록-생산현황보고 (철)특수목록내용) (INSERT)
	 -->
	<insert id="createBatchTakeFolderCreatFolderSpclList" parameterClass="rms.take.batchReg.domain.BatchTkFolder">
		INSERT INTO TB_CRSPCLLIST
		(
		    record_center_id, spcl_list_reg_no, folder_recv_seq, record_recv_seq, spcl_list_loc
		    , folder_clss_no, record_reg_no, seq, spcl_list1, spcl_list2
		    , spcl_list3, reg_dtime
		)
		(
		    SELECT C.record_center_id
		        , LPAD((TB_CRSPCLLIST_SQ01.nextval), 15, '0') 
		        , C.folder_recv_seq
		        , '', '1'
		        , (C.org_cd||C.clss_id||C.creat_yyyy||C.folder_reg_seq||C.ho_no) folder_clss_no
		        , ''
		        , ( SELECT LPAD((NVL(MAX(Z.seq),0)+1), 3, '0')
		            FROM  TB_CRSPCLLIST Z
		        	WHERE Z.folder_recv_seq = C.folder_recv_seq ) seq
		        <!--cubrid , A.keywd, '', '', TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')-->
		        , A.keywd, '', '', TO_CHAR(sys_datetime,'YYYYMMDDHH24MISS')
		    FROM TB_RDFOLDERKEYWD A
		        , TB_RDFOLDER B
		        , TB_CRFOLDER C
		    WHERE C.record_center_id = #recordCenterId:VARCHAR#
		    AND   C.folder_take_seq = #folderTakeSeq:VARCHAR#
		    AND   C.record_center_id = B.record_center_id
		    AND   C.org_cd = B.org_cd
		    AND   C.clss_id = B.clss_id
		    AND   C.creat_yyyy = B.creat_yyyy
		    AND   C.folder_reg_seq = B.folder_reg_seq
		    AND   C.ho_no = B.ho_no
		    AND   B.record_center_id = A.record_center_id
		    AND   B.folder_id = A.folder_id
		)
	</insert>
	
	<!-- 
		기록물인수>등록인수>등록인수>일괄등록(인수처리-24.생산현황등록-생산현황보고 기록물건) (INSERT)
	 -->
	<insert id="createBatchTakeFolderCreatRecord" parameterClass="rms.take.batchReg.domain.BatchTkFolder">
		INSERT INTO TB_CRRECORD
		(
		    record_center_id, record_recv_seq, folder_recv_seq, creat_sys_cd, org_cd
		    , creat_yyyy, creat_reg_dtime, creat_reg_no, dtch_reg_no, title
		    , sub_title, record_reg_div_cd, record_detl_type_cd, audvis_record_type, audvis_record_sumry
		    , media_format, medium, record_size, attach_cnt, record_page_cnt
		    , aprov_pos_rank_nm, duty_chrgr_nm, enforc_ymd, creat_org_reg_no, erecord_flag
		    , old_record_creat_org_nm, old_record_docno, old_record_presv_term, presv_loc, secu_clss_cd
		    , secu_clss_rsn, read_range, open_div_cd, open_grade, part_open_rsn
		    , open_limit_part, open_expt_dtime, recver, sender, chng_ver_no
		    , doc_distr_no, folder_clss_no, spcl_record_type, orign_copy_flag, new_div_cd
		    , chng_flag, rjct_flag, doc_no, creat_sys_record_id, error_flag
		    , exam_rslt_cd, take_fin_flag, cr_report_flag, reg_dtime, take_error_cont
		    , exam_cont, doc_no_org_nm, open_limit_date
		) 
		(
		    SELECT C.record_center_id
		        , TO_CHAR(SYSDATE,'YYYY')||LPAD((TB_CRRECORD_SQ01.nextval), 15, '0')
		        , C.folder_recv_seq
		        , A.creat_sys_cd, A.org_cd
		        , A.creat_yyyy, A.creat_reg_dtime, A.creat_reg_no, A.dtch_reg_no, A.title
		        , A.sub_title, A.record_reg_div_cd, A.record_detl_type_cd, A.audvis_record_type, A.audvis_record_sumry
		        , A.media_format, A.medium, A.record_size, A.attach_cnt, A.record_page_cnt
		        , A.aprov_pos_rank_nm, A.duty_chrgr_nm, A.enforc_ymd, A.creat_org_reg_no, A.erecord_flag
		        , A.old_record_creat_org_nm, A.old_record_docno, A.old_record_presv_term, A.presv_loc, A.secu_clss_cd
		        , A.secu_clss_rsn, A.read_range, A.open_div_cd, A.open_grade, A.part_open_rsn
		        , A.open_limit_part, A.open_expt_dtime, A.recver, A.sender, A.chng_ver_no
		        , A.doc_distr_no, A.folder_clss_no, A.spcl_record_type, A.orign_copy_flag, A.new_div_cd
		        , A.chng_flag, '0', A.doc_no, A.creat_sys_record_id, 'N'
		        <!--cubrid , '0', '0', '', TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS'), ''-->
		        , '0', '0', '', TO_CHAR(sys_datetime,'YYYYMMDDHH24MISS'), ''
		        , '', a.doc_no_org_nm, a.open_limit_date
		    FROM  TB_RDRECORD A
		        , TB_RDFOLDER B
		        , TB_CRFOLDER C
		    WHERE C.record_center_id = #recordCenterId:VARCHAR#
		    AND   C.folder_take_seq = #folderTakeSeq:VARCHAR#
		    AND   C.record_center_id = B.record_center_id
		    AND   C.org_cd = B.org_cd
		    AND   C.clss_id = B.clss_id
		    AND   C.creat_yyyy = B.creat_yyyy
		    AND   C.folder_reg_seq = B.folder_reg_seq
		    AND   C.ho_no = B.ho_no
		    AND   B.record_center_id = A.record_center_id
		    AND   B.folder_id = A.folder_id
		)
	</insert>
	
	<!-- 
		기록물인수>등록인수>등록인수>일괄등록(인수처리-25.생산현황등록-생산현황보고 기록물건변경이력) (INSERT)
	 -->
	<insert id="createBatchTakeFolderCreatRecordChngHist" parameterClass="rms.take.batchReg.domain.BatchTkFolder">
		INSERT INTO TB_CRRECORDCHNGHIST
		(
		    record_center_id, record_recv_seq, chng_hist_no, org_cd, creat_yyyy
		    , creat_reg_no, dtch_reg_no, creat_reg_ymd_bef, creat_reg_ymd_aft, title_bef
		    , title_aft, page_cnt_bef, page_cnt_aft, aprov_pos_rank_bef, aprov_pos_rank_aft
		    , duty_chrgr_bef, duty_chrgr_aft, enforc_ymd_bef, enforc_ymd_aft, recver_bef
		    , recver_aft, chng_ymd, chng_rsn, chng_user_nm, reg_dtime
		)
		(
		    SELECT C.record_center_id, C.record_recv_seq, A.chng_hist_no, A.org_cd, A.creat_yyyy
		        , A.creat_reg_no, A.dtch_reg_no, A.creat_reg_ymd_bef, A.creat_reg_ymd_aft, A.title_bef
		        , A.title_aft, A.page_cnt_bef, A.page_cnt_aft, A.aprov_pos_rank_bef, A.aprov_pos_rank_aft
		        , A.duty_chrgr_bef, A.duty_chrgr_aft, A.enforc_ymd_bef, A.enforc_ymd_aft, A.recver_bef
		        , A.recver_aft, A.chng_ymd, A.chng_rsn, A.chng_user_nm
			<!--cubrid , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')-->
			, TO_CHAR(sys_datetime,'YYYYMMDDHH24MISS')
		    FROM  TB_RDRECORDCHNGHIST A
		        , TB_RDRECORD B
		        , TB_CRRECORD C
		        , TB_CRFOLDER D
		    WHERE D.record_center_id = #recordCenterId:VARCHAR#
		    AND   D.folder_take_seq = #folderTakeSeq:VARCHAR#
		    AND   D.record_center_id = C.record_center_id
		    AND   D.folder_recv_seq = C.folder_recv_seq
		    AND   C.record_center_id = B.record_center_id
		    AND   C.org_cd = B.org_cd
		    AND   C.creat_yyyy = B.creat_yyyy
		    AND   C.creat_reg_no = B.creat_reg_no
		    AND   C.dtch_reg_no = B.dtch_reg_no
		    AND   B.record_center_id = A.record_center_id
		    AND   B.record_id = A.record_id
		)
	</insert>
	
	<!-- 
		기록물인수>등록인수>등록인수>일괄등록(인수처리-26.생산현황등록-생산현황보고 (건)특수목록내용) (INSERT)
	 -->
	<insert id="createBatchTakeFolderCreatRecordSpclList" parameterClass="rms.take.batchReg.domain.BatchTkFolder">
		INSERT INTO TB_CRSPCLLIST
		(
		    record_center_id, spcl_list_reg_no, folder_recv_seq, record_recv_seq, spcl_list_loc
		    , folder_clss_no, record_reg_no, seq, spcl_list1, spcl_list2
		    , spcl_list3, reg_dtime
		)
		(
		    SELECT C.record_center_id
		        , LPAD((TB_CRSPCLLIST_SQ01.nextval), 15, '0') 
		        , ''
		        , C.record_recv_seq, '2', ''
		        , (C.creat_yyyy||C.creat_reg_no||C.dtch_reg_no) record_reg_no
		        , ( SELECT LPAD((NVL(MAX(Z.seq),0)+1), 3, '0')
		            FROM  TB_CRSPCLLIST Z
		        	WHERE Z.record_recv_seq = C.record_recv_seq ) seq
		        <!--cubrid , A.keywd, '', '', TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')-->
		        , A.keywd, '', '', TO_CHAR(sys_datetime,'YYYYMMDDHH24MISS')
		    FROM TB_RDRECORDKEYWD A
		        , TB_RDRECORD B
		        , TB_CRRECORD C
		        , TB_CRFOLDER D
		    WHERE D.record_center_id = #recordCenterId:VARCHAR#
		    AND   D.folder_take_seq = #folderTakeSeq:VARCHAR#
		    AND   D.record_center_id = C.record_center_id
		    AND   D.folder_recv_seq = C.folder_recv_seq
		    AND   C.record_center_id = B.record_center_id
		    AND   C.org_cd = B.org_cd
		    AND   C.creat_yyyy = B.creat_yyyy
		    AND   C.creat_reg_no = B.creat_reg_no
		    AND   C.dtch_reg_no = B.dtch_reg_no
		    AND   B.record_center_id = A.record_center_id
		    AND   B.record_id = A.record_id
		)
	</insert>
	
	<!-- 
		기록물인수>등록인수>등록인수>일괄등록(인수처리-27.생산현황등록-생산현황보고 첨부파일) (INSERT)
	 -->
	<insert id="reateBatchTakeFolderCreatAttachFile" parameterClass="rms.take.batchReg.domain.BatchTkFolder">
		INSERT INTO TB_CRATTACHFILE
		(
		    record_center_id, record_recv_seq, reg_seq, org_cd, creat_yyyy
		    , creat_reg_no, attach_file_seq, attach_file_page_cnt, reg_dtime, doc_type_cd
		    , file_size
		)
		(
		    SELECT C.record_center_id, C.record_recv_seq, 1, A.org_cd, A.creat_yyyy
		        , B.creat_reg_no, A.attach_file_seq, A.attach_file_page_cnt
		        <!--cubrid , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')-->
		        , TO_CHAR(sys_datetime,'YYYYMMDDHH24MISS')
		        , A.doc_type_cd, A.file_size
		    FROM  TB_TKATTACHFILE A
		        , TB_RDRECORD B
		        , TB_CRRECORD C
		        , TB_CRFOLDER D
		    WHERE D.record_center_id = #recordCenterId:VARCHAR#
		    AND   D.folder_take_seq = #folderTakeSeq:VARCHAR#
		    AND   D.record_center_id = C.record_center_id
		    AND   D.folder_recv_seq = C.folder_recv_seq
		    AND   C.record_center_id = B.record_center_id
		    AND   C.org_cd = B.org_cd
		    AND   C.creat_yyyy = B.creat_yyyy
		    AND   C.creat_reg_no = B.creat_reg_no
		    AND   C.dtch_reg_no = B.dtch_reg_no
		    AND   B.record_center_id = A.record_center_id
		    AND   B.record_take_seq = A.record_take_seq
		)
	</insert>

<!-- ************************************************************************************************
	   UndTake 참조 END
     ************************************************************************************************ -->
	<!-- 일괄등록 - 검수처리(인수완료 후 일괄등록 접수테이블에 상태 및 오류개수 변경) -->
	<update id="updateOldElectRegBatchTake" parameterClass="rms.take.oldElectReg.domain.OldElectRegFile">
		UPDATE TB_TKRECVHIST
		   SET reg_prog_state_cd = #regProgStateCd:VARCHAR#
		 WHERE record_center_id = #recordCenterId:VARCHAR#
		   AND creat_sys_cd = #creatSysCd:VARCHAR#
		   AND recv_dtime = #recvDtime:VARCHAR#
	</update>

	<!-- 2008.02.21 윤선욱 수정 -->
	<resultMap id="findRecordSpclTakeSeq-result" class="rms.take.batchReg.domain.BatchTkFolder">
		<result property="recordTakeSeq"	 	column="RECORD_TAKE_SEQ"/>
		<result property="recordCenterId"	 	column="RECORD_CENTER_ID"/>
	</resultMap>
	
	<resultMap id="BatchTakeRecordSpclList-result" class="rms.take.batchReg.domain.BatchTkFolder">
		<result property="keywd"	column="KEYWD"/>
		<result property="recordId"	column="RECORD_ID"/>
	</resultMap>
	
	<select id="findRecordSpclTakeSeq" parameterClass="rms.take.batchReg.domain.BatchTkFolder" resultMap="findRecordSpclTakeSeq-result">
		SELECT DISTINCT record_take_seq, record_center_id
           FROM tb_tkspcllist
          WHERE record_take_seq IN (
                   SELECT record_take_seq
                     FROM tb_tkrecord
                    WHERE folder_take_seq = #folderTakeSeq:VARCHAR#
                      AND record_center_id = #recordCenterId:VARCHAR#)
	</select>

	<select id="BatchTakeRecordSpclList" parameterClass="rms.take.batchReg.domain.BatchTkFolder" resultMap="BatchTakeRecordSpclList-result">
		SELECT    spcl_list1
       			|| DECODE (NVL (spcl_list2, ''), '', '', '/' || spcl_list2)
       			|| DECODE (NVL (spcl_list3, ''), '', '', '/' || spcl_list3) keywd,
       			ROW_NUMBER () OVER (PARTITION BY record_take_seq ORDER BY spcl_list1
         		|| DECODE (NVL (spcl_list2, ''), '', '', '/' || spcl_list2)
         		|| DECODE (NVL (spcl_list3, ''), '', '', '/' || spcl_list3))rnum,
         		(select record_id from tb_rdrecord where record_take_seq = #recordTakeSeq:VARCHAR#) record_id
  		FROM tb_tkspcllist
 		WHERE record_center_id = #recordCenterId:VARCHAR#
   		AND record_take_seq = #recordTakeSeq:VARCHAR#
	</select>
	<!-- 2008.02.21 윤선욱 수정끝 -->

	<resultMap id="OldElectTakeInfo-result" class="rms.take.oldElectReg.domain.OldElectRegFile">
		<result property="creatYyyy" 	column="TAKE_YYYY"/>
		<result property="orgCd" 		column="TAKE_ORG_CD"/>
		<result property="recvDtime" 	column="REG_DTIME"/>
		<result property="takeSno" 		column="TAKE_SNO"/>
	</resultMap>
	
	<select id="findOldElectTakeInfo" parameterClass="rms.take.oldElectReg.domain.OldElectRegFile" resultMap="OldElectTakeInfo-result">
		select    take_yyyy
				, take_org_cd
				, reg_dtime
				, take_sno
		  from TB_TKORGTAKEPLAN
		 where record_center_id = #recordCenterId:VARCHAR#
		   and reg_dtime 		= #recvDtime:VARCHAR#
		   and creat_sys_cd 	= #creatSysCd:VARCHAR#
	</select>
	
	<update id="updateOrgPlan" parameterClass="rms.take.undTake.domain.TkOrgTakePlan">
		update TB_TKORGTAKEPLAN
		   set take_state_div_cd = #takeStateDivCd:VARCHAR#
		 where record_center_id = #recordCenterId#
		   and take_yyyy = #takeYyyy:VARCHAR#
		   and take_org_cd = #takeOrgCd:VARCHAR#
		   and creat_sys_cd = #creatSysCd:VARCHAR#
		   and reg_dtime = #regDtime:VARCHAR#
		   and recv_div_cd = #recvDivCd:VARCHAR#
		   and take_req_user_id = #takeReqUserId:VARCHAR#
		   and take_req_user_nm = #takeReqUserNm:VARCHAR#
	</update>
	
	<update id="updateOldElectOrgTakePlan" parameterClass="rms.take.oldElectReg.domain.OldElectReg">
		update tb_tkorgtakeplan 
		   set take_state_div_cd = #regProgStateCd:VARCHAR#
		 where record_center_id = #recordCenterId:VARCHAR#
		 <dynamic>
		 	<isNotEmpty prepend="and" property="takeYyyy">
		 	 take_yyyy = #takeYyyy:VARCHAR#
		 	</isNotEmpty>
		 	<isNotEmpty prepend="and" property="takeOrgCd">
		 	 take_org_cd = #takeOrgCd:VARCHAR#
		 	</isNotEmpty>
		 </dynamic>
	</update>
	
</sqlMap>
