<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="srch.srch">

	<!--
		조건별검색_기록물철
		: 기록물철 목록 조회
	-->
	<resultMap id="findDetailsFolderPagedList-result" class="rms.srch.srch.domain.DetailsFolder">
		<result property = "recordCenterId"	    column = "RECORD_CENTER_ID"		/>
		<result property = "orgCd" 			    column = "ORG_CD"				/>
		<result property = "folderId" 		    column = "FOLDER_ID"			/>
		<result property = "clssNm" 		    column = "CLSS_NM"				/>
		<result property = "title" 			    column = "TITLE"				/> 		
		<result property = "creatYyyy"		    column = "CREAT_YYYY"			/>
		<result property = "orgNm" 			    column = "ORG_NM"				/>
		<result property = "orgAbbrNm" 		    column = "ORG_ABBR_NM"			/>
		<result property = "presvTermNm" 	    column = "PRESV_TERM_NM"		/>
		<result property = "creatSysNm" 	    column = "CREAT_SYS_NM"			/>
		<result property = "erecordFlagNm" 	    column = "ERECORD_FLAG_NM"		/>
		<result property = "agentNm" 		    column = "AGENT_NM"				/>
		<result property = "folderKeepStateCd" 	column = "FOLDER_KEEP_STATE_CD"	/>
		<result property = "folderKeepStateNm" 	column = "FOLDER_KEEP_STATE_NM"	/>
		<result property = "creatSysCd" 	    column = "CREAT_SYS_CD"			/>
		<result property = "operReadRangeCd"    column = "OPER_READ_RANGE_CD"	/>
		<result property = "operReadRangeNm"    column = "OPER_READ_RANGE_NM"	/>
		<result property = "accsFlag" 			column = "ACCS_FLAG"			/>
		<result property = "efileDelFlag" 		column = "EFILE_DEL_FLAG"		/>
		<result property = "folderKey" 		    column = "FOLDER_KEY"			/>
		<result property = "hoNo" 			    column = "HO_NO"				/>
		<result property = "hoNoCnt" 			column = "HO_NO_CNT"			/>
		<result property = "presvLoc" 			column = "PRESV_LOC"			/>
		<result property = "closeYyyy" 			column = "CLOSE_YYYY"			/>
	</resultMap>
	<select id="countDetailsFolderPagedList" parameterClass="rms.srch.srch.domain.DetailsFolder" resultClass="java.lang.Long">
		SELECT COUNT(1)
		FROM  TB_RDFOLDER A
		WHERE A.record_center_id = #recordCenterId:VARCHAR#
		<dynamic>
			<isNotEmpty prepend="AND" property="orgCd">
				<isEqual property="searchDivCd" compareValue="1">
					A.cur_keep_org_cd = #orgCd:VARCHAR#
				</isEqual>
				<isEqual property="searchDivCd" compareValue="2">
					A.org_cd = #orgCd:VARCHAR#
				</isEqual>						
			</isNotEmpty>
			<isEmpty property="orgCd">
				<isNotEmpty prepend="AND" property="orgNm">
					<isEqual property="searchDivCd" compareValue="1">
						A.cur_keep_org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
					</isEqual>	
					<isEqual property="searchDivCd" compareValue="2">
						A.org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
					</isEqual>
				</isNotEmpty>
			</isEmpty>
			<isNotEqual property="readRangType" compareValue="1">
				<isNotEqual prepend="AND" property="sesUserDiv" compareValue="3">
				    A.oper_read_range_cd != '03' 
				</isNotEqual>
			</isNotEqual>
			<isNotEmpty prepend="AND" property="operReadRangeCd">
				(CASE WHEN (SELECT COUNT(1) FROM TB_RDRECORD Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id AND Z.oper_read_range_cd IN ('02','03')) > 0 THEN '02' ELSE '01' END) = #operReadRangeCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="creatSysCd">
				A.creat_sys_cd = #creatSysCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="creatFromYyyy">
				<isNotEmpty property="creatToYyyy">
					(A.creat_yyyy BETWEEN #creatFromYyyy:VARCHAR# AND #creatToYyyy:VARCHAR#)
				</isNotEmpty>
				<isEmpty property="creatToYyyy">
					A.creat_yyyy <![CDATA[>=]]> #creatFromYyyy:VARCHAR#
				</isEmpty>
			</isNotEmpty>
			<isEmpty prepend="AND" property="creatFromYyyy">
				<isNotEmpty property="creatToYyyy">
					A.creat_yyyy <![CDATA[<=]]> #creatToYyyy:VARCHAR#
				</isNotEmpty>
			</isEmpty>
			<isNotEmpty prepend="AND" property="clssId">
			    <isEqual property="clssDivCd" compareValue="1">
					(A.clss_id = #clssId:VARCHAR# OR A.new_clss_id = #clssId:VARCHAR#)
				</isEqual>
				<isNotEqual property="clssDivCd" compareValue="1">
			    	A.clss_id = #clssId:VARCHAR#
			    </isNotEqual>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="arrTitle">
				<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">A.title LIKE #arrTitle[]:VARCHAR#</iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="innerTitle">
				A.title LIKE #innerTitle:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="folderTypeDivCd">
				A.folder_type_div_cd = #folderTypeDivCd:VARCHAR#
			</isNotEmpty>
	        <isNotEmpty property="presvTermCd">
		        <isEqual prepend="AND" property="presvTermCd" compareValue="25">
		            A.PRESV_TERM_CD IN ('20','25')
	            </isEqual>
		        <isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
		            A.PRESV_TERM_CD = #presvTermCd:VARCHAR#
	            </isNotEqual>		            
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="keywd">
				A.folder_id IN (SELECT folder_id FROM TB_RDFOLDERKEYWD WHERE record_center_id=#recordCenterId:VARCHAR# AND keywd LIKE #keywd:VARCHAR#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="agentNm">
				A.folder_id IN (SELECT folder_id FROM TB_RDFOLDERCREAT WHERE record_center_id=#recordCenterId:VARCHAR# AND agent_nm LIKE #agentNm:VARCHAR#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="erecordFlag">
				A.erecord_flag = #erecordFlag:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="scanProgStateCd">
				<isEqual property="scanProgStateCd" compareValue="5">
					A.scan_prog_state_cd = #scanProgStateCd:VARCHAR#
				</isEqual>
				<isEqual property="scanProgStateCd" compareValue="1">
			    	(A.scan_prog_state_cd IS NULL or A.scan_prog_state_cd IN ('', '1', '2', '3', '4'))
			    </isEqual>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="takeYyyy">
				A.take_yyyy = #takeYyyy:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="arrFolderKeepStateCd">
				A.folder_keep_state_cd IN <iterate property="arrFolderKeepStateCd" open="(" close=")" conjunction=",">#arrFolderKeepStateCd[]:VARCHAR#</iterate>
			</isNotEmpty>
		</dynamic>
	</select>
	<select id="findDetailsFolderPagedList" parameterClass="rms.srch.srch.domain.DetailsFolder" resultMap="findDetailsFolderPagedList-result">
		SELECT C.record_center_id 
			, C.org_cd
			, C.folder_id
			<dynamic>
				<isEmpty prepend="" property="clssId">
					, (CASE WHEN C.clss_div_cd='1' THEN C.clss_nm
							WHEN C.new_clss_id IS NULL THEN C.clss_nm
							ELSE C.new_clss_nm END) AS clss_nm
				</isEmpty>
				<isNotEmpty prepend="" property="clssId">
					<isEqual property="clssDivCd" compareValue="1">
						, (CASE WHEN C.clss_div_cd='1' THEN C.clss_nm ELSE C.new_clss_nm END) AS clss_nm
					</isEqual>
					<isNotEqual property="clssDivCd" compareValue="1">
						, C.clss_nm
					</isNotEqual>
				</isNotEmpty>
			</dynamic>
			, C.title
			, C.creat_yyyy
			, (SELECT Z.org_nm FROM TB_STORG Z WHERE Z.record_center_id=C.record_center_id AND Z.org_cd=C.org_cd) org_nm
			, (SELECT Z.org_abbr_nm FROM TB_STORG Z WHERE Z.record_center_id=C.record_center_id AND Z.org_cd=C.org_cd) org_abbr_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD07' AND Z.com_cd=C.presv_term_cd) presv_term_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD17' AND Z.com_cd=C.creat_sys_cd) creat_sys_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD23' AND Z.com_cd=C.erecord_flag) erecord_flag_nm
			, (SELECT Z.agent_nm FROM TB_RDFOLDERCREAT Z
			    WHERE Z.record_center_id=C.record_center_id
			    AND   Z.folder_id=C.folder_id
			    AND   Z.agent_sno=(SELECT MAX(Y.agent_sno) FROM TB_RDFOLDERCREAT Y WHERE Y.record_center_id=C.record_center_id AND Y.folder_id=C.folder_id)) agent_nm
			, C.folder_keep_state_cd
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD32' AND Z.com_cd=C.folder_keep_state_cd) folder_keep_state_nm
			, C.creat_sys_cd
			, (CASE WHEN (SELECT COUNT(1) FROM TB_RDRECORD Z WHERE Z.record_center_id=C.record_center_id AND Z.folder_id=C.folder_id AND Z.oper_read_range_cd IN ('02','03')) > 0 THEN '02' ELSE '01' END) AS oper_read_range_cd
		    , (CASE WHEN (SELECT COUNT(1) FROM TB_RDRECORD Z WHERE Z.record_center_id=C.record_center_id AND Z.folder_id=C.folder_id AND Z.oper_read_range_cd IN ('02','03')) > 0 THEN '열람제한' ELSE '열람가능' END) AS oper_read_range_nm
		    , (CASE WHEN #sesUserDiv:VARCHAR# = '3' AND C.record_center_id = (SELECT Z.record_center_id FROM TB_STUSER Z WHERE Z.USER_ID = #sesUserId:VARCHAR#) THEN 1 
					WHEN (CASE WHEN (SELECT COUNT(1) FROM TB_RDRECORD Z WHERE Z.record_center_id=C.record_center_id AND Z.folder_id=C.folder_id AND Z.oper_read_range_cd IN ('02','03')) > 0 THEN '02' ELSE '01' END) = '01' THEN 1
					<isEqual property="orgUserAccsType" compareValue="1">
					WHEN ((CASE WHEN (SELECT COUNT(1) FROM TB_RDRECORD Z WHERE Z.record_center_id=C.record_center_id AND Z.folder_id=C.folder_id AND Z.oper_read_range_cd IN ('02','03')) > 0 THEN '02' ELSE '01' END) = '02' AND C.cur_keep_org_cd=#sesOrgCd:VARCHAR#) THEN 1
					</isEqual>
					<isEqual property="orgUserAccsType" compareValue="2">
					WHEN C.cur_keep_org_cd=#sesOrgCd:VARCHAR# THEN 1
					</isEqual>
		            WHEN (SELECT COUNT(1) FROM TB_RDFOLDERACCS Z WHERE Z.record_center_id=C.record_center_id AND Z.folder_id=C.folder_id AND Z.accs_type_cd='2' AND Z.accs_dept_cd=#sesOrgCd:VARCHAR#) > 0 THEN 1 
		            WHEN (SELECT COUNT(1) FROM TB_RDFOLDERACCS Z WHERE Z.record_center_id=C.record_center_id AND Z.folder_id=C.folder_id AND Z.accs_type_cd='1' AND Z.accs_user_id=#sesUserId:VARCHAR#) > 0 THEN 1
		            WHEN (SELECT COUNT(1) FROM TB_RDFOLDERREADDETL Z WHERE Z.record_center_id=C.record_center_id AND Z.folder_id=C.folder_id AND Z.read_aprov_cd='2' AND EXISTS (SELECT 1 FROM TB_RDREADREQ Y WHERE Y.record_center_id=Z.record_center_id AND Y.read_reqno=Z.read_reqno AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN Y.read_start_ymd AND Y.read_close_ymd)) > 0 THEN 1
		            ELSE 0
		       END) accs_flag
			, C.efile_del_flag
			, C.creat_sys_cd||'-'||C.org_cd||'-'||C.clss_id||'-'||C.creat_yyyy||'-'||C.folder_reg_seq AS folder_key
			, C.ho_no
			, (SELECT COUNT(1) FROM TB_RDFOLDER F WHERE F.creat_sys_cd=C.creat_sys_cd AND F.org_cd=C.org_cd AND F.clss_id=C.clss_id AND F.creat_yyyy=C.creat_yyyy AND F.folder_reg_seq=C.folder_reg_seq) AS ho_no_cnt
			,C.presv_loc
       		, SUBSTR(RPAD(C.folder_close_dtime,14,'0'),1,4) as close_yyyy
		FROM (
			SELECT ROWNUM AS rnum
				, B.*
			FROM (
				SELECT 
					<dynamic>
						<isNotEqual property="checkParam" compareValue="Y">
							<isEmpty property="order">
								/*+ index_desc(A TB_RDFOLDER_IX07) */ 
							</isEmpty>
							<isEqual property="order" compareValue="0">
								/*+ index_desc(A TB_RDFOLDER_IX07) */ 
							</isEqual>
							<isEqual property="order" compareValue="1">
								/*+ index(A TB_RDFOLDER_IX07) */ 
							</isEqual>
							<isEqual property="order" compareValue="2">
								/*+ index(A TB_RDFOLDER_IX12) */ 
							</isEqual>
						</isNotEqual>
					</dynamic>
					  A.record_center_id
					, A.folder_id
					, A.creat_sys_cd
					, A.org_cd
					, A.cur_keep_org_cd
					, A.clss_div_cd
					, A.clss_id
					, A.clss_nm
					, A.new_clss_id
					, A.new_clss_nm
					, A.creat_yyyy
					, A.title
					, A.presv_term_cd
					, A.erecord_flag
					, A.folder_keep_state_cd
					, A.oper_read_range_cd
					, A.efile_del_flag
					, A.folder_reg_seq
					, A.ho_no
					, A.folder_close_dtime
					, (SELECT STAKRM_ID||'-'||BOOKSF_ID||'-'||BOOKSF_SHELF_CNO||'-'||BOOKSF_SHELF_RNO FROM TB_SRBOOKSFARNGDETL WHERE FOLDER_ID = A.FOLDER_ID) AS PRESV_LOC
				FROM  TB_RDFOLDER A
				WHERE A.record_center_id = #recordCenterId:VARCHAR#
				<dynamic>
					<isNotEmpty prepend="AND" property="orgCd">
						<isEqual property="searchDivCd" compareValue="1">
							A.cur_keep_org_cd = #orgCd:VARCHAR#
						</isEqual>
						<isEqual property="searchDivCd" compareValue="2">
							A.org_cd = #orgCd:VARCHAR#
						</isEqual>						
					</isNotEmpty>
					<isEmpty property="orgCd">
						<isNotEmpty prepend="AND" property="orgNm">
							<isEqual property="searchDivCd" compareValue="1">
								A.cur_keep_org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
							</isEqual>	
							<isEqual property="searchDivCd" compareValue="2">
								A.org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
							</isEqual>
						</isNotEmpty>
					</isEmpty>
					<isNotEqual property="readRangType" compareValue="1">
						<isNotEqual prepend="AND" property="sesUserDiv" compareValue="3">
						    A.oper_read_range_cd != '03' 
						</isNotEqual>
					</isNotEqual>
					<isNotEmpty prepend="AND" property="operReadRangeCd">
						(CASE WHEN (SELECT COUNT(1) FROM TB_RDRECORD Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id AND Z.oper_read_range_cd IN ('02','03')) > 0 THEN '02' ELSE '01' END) = #operReadRangeCd:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="creatSysCd">
						A.creat_sys_cd = #creatSysCd:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="creatFromYyyy">
						<isNotEmpty property="creatToYyyy">
							(A.creat_yyyy BETWEEN #creatFromYyyy:VARCHAR# AND #creatToYyyy:VARCHAR#)
						</isNotEmpty>
						<isEmpty property="creatToYyyy">
							A.creat_yyyy <![CDATA[>=]]> #creatFromYyyy:VARCHAR#
						</isEmpty>
					</isNotEmpty>
					<isEmpty prepend="AND" property="creatFromYyyy">
						<isNotEmpty property="creatToYyyy">
							A.creat_yyyy <![CDATA[<=]]> #creatToYyyy:VARCHAR#
						</isNotEmpty>
					</isEmpty>
					<isNotEmpty prepend="AND" property="clssId">
					    <isEqual property="clssDivCd" compareValue="1">
							(A.clss_id = #clssId:VARCHAR# OR A.new_clss_id = #clssId:VARCHAR#)
						</isEqual>
						<isNotEqual property="clssDivCd" compareValue="1">
					    	A.clss_id = #clssId:VARCHAR#
					    </isNotEqual>
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="arrTitle">
						<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">A.title LIKE #arrTitle[]:VARCHAR#</iterate>
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="innerTitle">
						A.title LIKE #innerTitle:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="folderTypeDivCd">
						A.folder_type_div_cd = #folderTypeDivCd:VARCHAR#
					</isNotEmpty>
			        <isNotEmpty property="presvTermCd">
				        <isEqual prepend="AND" property="presvTermCd" compareValue="25">
				            A.PRESV_TERM_CD IN ('20','25')
			            </isEqual>
				        <isNotEqual prepend="AND" property="presvTermCd" compareValue="25">
				            A.PRESV_TERM_CD = #presvTermCd:VARCHAR#
			            </isNotEqual>		            
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="keywd">
						A.folder_id IN (SELECT folder_id FROM TB_RDFOLDERKEYWD WHERE record_center_id=#recordCenterId:VARCHAR# AND keywd LIKE #keywd:VARCHAR#)
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="agentNm">
						A.folder_id IN (SELECT folder_id FROM TB_RDFOLDERCREAT WHERE record_center_id=#recordCenterId:VARCHAR# AND agent_nm LIKE #agentNm:VARCHAR#)
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="erecordFlag">
						A.erecord_flag = #erecordFlag:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="scanProgStateCd">
						<isEqual property="scanProgStateCd" compareValue="5">
							A.scan_prog_state_cd = #scanProgStateCd:VARCHAR#
						</isEqual>
						<isEqual property="scanProgStateCd" compareValue="1">
					    	(A.scan_prog_state_cd IS NULL or A.scan_prog_state_cd IN ('', '1', '2', '3', '4'))
					    </isEqual>
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="takeYyyy">
						A.take_yyyy = #takeYyyy:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="arrFolderKeepStateCd">
						A.folder_keep_state_cd IN <iterate property="arrFolderKeepStateCd" open="(" close=")" conjunction=",">#arrFolderKeepStateCd[]:VARCHAR#</iterate>
					</isNotEmpty>
				</dynamic>
				<isEqual property="checkParam" compareValue="Y">
					<isEmpty property="order">
						ORDER BY A.record_center_id, A.creat_yyyy DESC, A.title DESC
					</isEmpty>
					<isEqual property="order" compareValue="0">
						ORDER BY A.record_center_id, A.creat_yyyy DESC, A.title DESC
					</isEqual>
					<isEqual property="order" compareValue="1">
						ORDER BY A.record_center_id, A.creat_yyyy, A.title
					</isEqual>
					<isEqual property="order" compareValue="2">
						ORDER BY A.record_center_id, A.title, A.creat_yyyy
					</isEqual>
				</isEqual>
			) B
			WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
		) C
		WHERE C.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
	</select>
	<!-- 
		조건별검색_기록물철
		: 기록물철 목록 조회 (보유 + 이관/폐기/기관간인계 목록 포함)
	 -->
	<select id="countDetailsFolderPagedList_union" parameterClass="rms.srch.srch.domain.DetailsFolder" resultClass="java.lang.Long">
		SELECT COUNT(1)
		FROM (
			(
			SELECT A.folder_id
			FROM  TB_RDFOLDER A
			WHERE A.record_center_id = #recordCenterId:VARCHAR#
			<dynamic>
				<isNotEmpty prepend="AND" property="orgCd">
					<isEqual property="searchDivCd" compareValue="1">
						A.cur_keep_org_cd = #orgCd:VARCHAR#
					</isEqual>
					<isEqual property="searchDivCd" compareValue="2">
						A.org_cd = #orgCd:VARCHAR#
					</isEqual>						
				</isNotEmpty>
				<isEmpty property="orgCd">
					<isNotEmpty prepend="AND" property="orgNm">
						<isEqual property="searchDivCd" compareValue="1">
							A.cur_keep_org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
						</isEqual>	
						<isEqual property="searchDivCd" compareValue="2">
							A.org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
						</isEqual>
					</isNotEmpty>
				</isEmpty>
				<isNotEqual property="readRangType" compareValue="1">
					<isNotEqual prepend="AND" property="sesUserDiv" compareValue="3">
					    A.oper_read_range_cd != '03' 
					</isNotEqual>
				</isNotEqual>
				<isNotEmpty prepend="AND" property="operReadRangeCd">
					(CASE WHEN (SELECT COUNT(1) FROM TB_RDRECORD Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id AND Z.oper_read_range_cd IN ('02','03')) > 0 THEN '02' ELSE '01' END) = #operReadRangeCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="creatSysCd">
					A.creat_sys_cd = #creatSysCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="creatFromYyyy">
					<isNotEmpty property="creatToYyyy">
						(A.creat_yyyy BETWEEN #creatFromYyyy:VARCHAR# AND #creatToYyyy:VARCHAR#)
					</isNotEmpty>
					<isEmpty property="creatToYyyy">
						A.creat_yyyy <![CDATA[>=]]> #creatFromYyyy:VARCHAR#
					</isEmpty>
				</isNotEmpty>
				<isEmpty prepend="AND" property="creatFromYyyy">
					<isNotEmpty property="creatToYyyy">
						A.creat_yyyy <![CDATA[<=]]> #creatToYyyy:VARCHAR#
					</isNotEmpty>
				</isEmpty>
				<isNotEmpty prepend="AND" property="clssId">
				    <isEqual property="clssDivCd" compareValue="1">
						(A.clss_id = #clssId:VARCHAR# OR A.new_clss_id = #clssId:VARCHAR#)
					</isEqual>
					<isNotEqual property="clssDivCd" compareValue="1">
				    	A.clss_id = #clssId:VARCHAR#
				    </isNotEqual>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="arrTitle">
					<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">A.title LIKE #arrTitle[]:VARCHAR#</iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="innerTitle">
					A.title LIKE #innerTitle:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="folderTypeDivCd">
					A.folder_type_div_cd = #folderTypeDivCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="presvTermCd">
					A.presv_term_cd = #presvTermCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="keywd">
					A.folder_id IN (SELECT folder_id FROM TB_RDFOLDERKEYWD WHERE record_center_id=#recordCenterId:VARCHAR# AND keywd LIKE #keywd:VARCHAR#)
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="agentNm">
					A.folder_id IN (SELECT folder_id FROM TB_RDFOLDERCREAT WHERE record_center_id=#recordCenterId:VARCHAR# AND agent_nm LIKE #agentNm:VARCHAR#)
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="erecordFlag">
					A.erecord_flag = #erecordFlag:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="scanProgStateCd">
					<isEqual property="scanProgStateCd" compareValue="5">
						A.scan_prog_state_cd = #scanProgStateCd:VARCHAR#
					</isEqual>
					<isEqual property="scanProgStateCd" compareValue="1">
				    	(A.scan_prog_state_cd IS NULL or A.scan_prog_state_cd IN ('', '1', '2', '3', '4'))
				    </isEqual>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="takeYyyy">
					A.take_yyyy = #takeYyyy:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="arrFolderKeepStateCd">
					A.folder_keep_state_cd IN <iterate property="arrFolderKeepStateCd" open="(" close=")" conjunction=",">#arrFolderKeepStateCd[]:VARCHAR#</iterate>
				</isNotEmpty>
			</dynamic>
			)
			UNION ALL
			(
			SELECT A.folder_id
			FROM  TB_NKFOLDER A
			WHERE A.record_center_id = #recordCenterId:VARCHAR#
			<dynamic>
				<isNotEmpty prepend="AND" property="orgCd">
					<isEqual property="searchDivCd" compareValue="1">
						A.cur_keep_org_cd = #orgCd:VARCHAR#
					</isEqual>
					<isEqual property="searchDivCd" compareValue="2">
						A.org_cd = #orgCd:VARCHAR#
					</isEqual>						
				</isNotEmpty>
				<isEmpty property="orgCd">
					<isNotEmpty prepend="AND" property="orgNm">
						<isEqual property="searchDivCd" compareValue="1">
							A.cur_keep_org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
						</isEqual>	
						<isEqual property="searchDivCd" compareValue="2">
							A.org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
						</isEqual>
					</isNotEmpty>
				</isEmpty>
				<isNotEqual property="readRangType" compareValue="1">
					<isNotEqual prepend="AND" property="sesUserDiv" compareValue="3">
					    A.oper_read_range_cd != '03' 
					</isNotEqual>
				</isNotEqual>
				<isNotEmpty prepend="AND" property="operReadRangeCd">
					(CASE WHEN (SELECT COUNT(1) FROM TB_RDRECORD Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id AND Z.oper_read_range_cd IN ('02','03')) > 0 THEN '02' ELSE '01' END) = #operReadRangeCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="creatSysCd">
					A.creat_sys_cd = #creatSysCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="creatFromYyyy">
					<isNotEmpty property="creatToYyyy">
						(A.creat_yyyy BETWEEN #creatFromYyyy:VARCHAR# AND #creatToYyyy:VARCHAR#)
					</isNotEmpty>
					<isEmpty property="creatToYyyy">
						A.creat_yyyy <![CDATA[>=]]> #creatFromYyyy:VARCHAR#
					</isEmpty>
				</isNotEmpty>
				<isEmpty prepend="AND" property="creatFromYyyy">
					<isNotEmpty property="creatToYyyy">
						A.creat_yyyy <![CDATA[<=]]> #creatToYyyy:VARCHAR#
					</isNotEmpty>
				</isEmpty>
				<isNotEmpty prepend="AND" property="clssId">
				    <isEqual property="clssDivCd" compareValue="1">
						(A.clss_id = #clssId:VARCHAR# OR A.new_clss_id = #clssId:VARCHAR#)
					</isEqual>
					<isNotEqual property="clssDivCd" compareValue="1">
				    	A.clss_id = #clssId:VARCHAR#
				    </isNotEqual>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="arrTitle">
					<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">A.title LIKE #arrTitle[]:VARCHAR#</iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="innerTitle">
					A.title LIKE #innerTitle:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="folderTypeDivCd">
					A.folder_type_div_cd = #folderTypeDivCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="presvTermCd">
					A.presv_term_cd = #presvTermCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="keywd">
					A.folder_id IN (SELECT folder_id FROM TB_RDFOLDERKEYWD WHERE record_center_id=#recordCenterId:VARCHAR# AND keywd LIKE #keywd:VARCHAR#)
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="agentNm">
					A.folder_id IN (SELECT folder_id FROM TB_RDFOLDERCREAT WHERE record_center_id=#recordCenterId:VARCHAR# AND agent_nm LIKE #agentNm:VARCHAR#)
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="erecordFlag">
					A.erecord_flag = #erecordFlag:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="scanProgStateCd">
					<isEqual property="scanProgStateCd" compareValue="5">
						A.scan_prog_state_cd = #scanProgStateCd:VARCHAR#
					</isEqual>
					<isEqual property="scanProgStateCd" compareValue="1">
				    	(A.scan_prog_state_cd IS NULL or A.scan_prog_state_cd IN ('', '1', '2', '3', '4'))
				    </isEqual>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="takeYyyy">
					A.take_yyyy = #takeYyyy:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="arrFolderKeepStateCd">
					A.folder_keep_state_cd IN <iterate property="arrFolderKeepStateCd" open="(" close=")" conjunction=",">#arrFolderKeepStateCd[]:VARCHAR#</iterate>
				</isNotEmpty>
			</dynamic>
			)
		)
	</select>
	<select id="findDetailsFolderPagedList_union" parameterClass="rms.srch.srch.domain.DetailsFolder" resultMap="findDetailsFolderPagedList-result">
		SELECT C.record_center_id 
			, C.org_cd
			, C.folder_id
			<dynamic>
				<isEmpty prepend="" property="clssId">
					, (CASE WHEN C.clss_div_cd='1' THEN C.clss_nm
							WHEN C.new_clss_id IS NULL THEN C.clss_nm
							ELSE C.new_clss_nm END) AS clss_nm
				</isEmpty>
				<isNotEmpty prepend="" property="clssId">
					<isEqual property="clssDivCd" compareValue="1">
						, (CASE WHEN C.clss_div_cd='1' THEN C.clss_nm ELSE C.new_clss_nm END) AS clss_nm
					</isEqual>
					<isNotEqual property="clssDivCd" compareValue="1">
						, C.clss_nm
					</isNotEqual>
				</isNotEmpty>
			</dynamic>
			, C.title
			, C.creat_yyyy
			, (SELECT Z.org_nm FROM TB_STORG Z WHERE Z.record_center_id=C.record_center_id AND Z.org_cd=C.org_cd) org_nm
			, (SELECT Z.org_abbr_nm FROM TB_STORG Z WHERE Z.record_center_id=C.record_center_id AND Z.org_cd=C.org_cd) org_abbr_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD07' AND Z.com_cd=C.presv_term_cd) presv_term_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD17' AND Z.com_cd=C.creat_sys_cd) creat_sys_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD23' AND Z.com_cd=C.erecord_flag) erecord_flag_nm
			, (SELECT Z.agent_nm FROM TB_RDFOLDERCREAT Z
			    WHERE Z.record_center_id=C.record_center_id
			    AND   Z.folder_id=C.folder_id
			    AND   Z.agent_sno=(SELECT MAX(Y.agent_sno) FROM TB_RDFOLDERCREAT Y WHERE Y.record_center_id=C.record_center_id AND Y.folder_id=C.folder_id)) agent_nm
			, C.folder_keep_state_cd
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD32' AND Z.com_cd=C.folder_keep_state_cd) folder_keep_state_nm
			, C.creat_sys_cd
			, (CASE WHEN (SELECT COUNT(1) FROM TB_RDRECORD Z WHERE Z.record_center_id=C.record_center_id AND Z.folder_id=C.folder_id AND Z.oper_read_range_cd IN ('02','03')) > 0 THEN '02' ELSE '01' END) AS oper_read_range_cd
		    , (CASE WHEN (SELECT COUNT(1) FROM TB_RDRECORD Z WHERE Z.record_center_id=C.record_center_id AND Z.folder_id=C.folder_id AND Z.oper_read_range_cd IN ('02','03')) > 0 THEN '열람제한' ELSE '열람가능' END) AS oper_read_range_nm
		    , (CASE WHEN #sesUserDiv:VARCHAR# = '3' AND C.record_center_id = (SELECT Z.record_center_id FROM TB_STUSER Z WHERE Z.USER_ID = #sesUserId:VARCHAR#) THEN 1 
					WHEN (CASE WHEN (SELECT COUNT(1) FROM TB_RDRECORD Z WHERE Z.record_center_id=C.record_center_id AND Z.folder_id=C.folder_id AND Z.oper_read_range_cd IN ('02','03')) > 0 THEN '02' ELSE '01' END) = '01' THEN 1
					<isEqual property="orgUserAccsType" compareValue="1">
					WHEN ((CASE WHEN (SELECT COUNT(1) FROM TB_RDRECORD Z WHERE Z.record_center_id=C.record_center_id AND Z.folder_id=C.folder_id AND Z.oper_read_range_cd IN ('02','03')) > 0 THEN '02' ELSE '01' END) = '02' AND C.cur_keep_org_cd=#sesOrgCd:VARCHAR#) THEN 1
					</isEqual>
					<isEqual property="orgUserAccsType" compareValue="2">
					WHEN C.cur_keep_org_cd=#sesOrgCd:VARCHAR# THEN 1
					</isEqual>
		            WHEN (SELECT COUNT(1) FROM TB_RDFOLDERACCS Z WHERE Z.record_center_id=C.record_center_id AND Z.folder_id=C.folder_id AND Z.accs_type_cd='2' AND Z.accs_dept_cd=#sesOrgCd:VARCHAR#) > 0 THEN 1 
		            WHEN (SELECT COUNT(1) FROM TB_RDFOLDERACCS Z WHERE Z.record_center_id=C.record_center_id AND Z.folder_id=C.folder_id AND Z.accs_type_cd='1' AND Z.accs_user_id=#sesUserId:VARCHAR#) > 0 THEN 1
		            WHEN (SELECT COUNT(1) FROM TB_RDFOLDERREADDETL Z WHERE Z.record_center_id=C.record_center_id AND Z.folder_id=C.folder_id AND Z.read_aprov_cd='2' AND EXISTS (SELECT 1 FROM TB_RDREADREQ Y WHERE Y.record_center_id=Z.record_center_id AND Y.read_reqno=Z.read_reqno AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN Y.read_start_ymd AND Y.read_close_ymd)) > 0 THEN 1
		            ELSE 0
		       END) accs_flag
			, C.efile_del_flag
			, C.creat_sys_cd||'-'||C.org_cd||'-'||C.clss_id||'-'||C.creat_yyyy||'-'||C.folder_reg_seq AS folder_key
			, C.ho_no
			, (SELECT COUNT(1) FROM TB_RDFOLDER F WHERE F.creat_sys_cd=C.creat_sys_cd AND F.org_cd=C.org_cd AND F.clss_id=C.clss_id AND F.creat_yyyy=C.creat_yyyy AND F.folder_reg_seq=C.folder_reg_seq) AS ho_no_cnt
	        ,C.PRESV_LOC
	        , SUBSTR(RPAD(C.folder_close_dtime,14,'0'),1,4) as close_yyyy			
		FROM (
			SELECT ROWNUM AS rnum
				, B.*
			FROM (
				(
				SELECT 
					<dynamic>
						<isNotEqual property="checkParam" compareValue="Y">
							<isEmpty property="order">
								/*+ index_desc(A TB_RDFOLDER_IX07) */ 
							</isEmpty>
							<isEqual property="order" compareValue="0">
								/*+ index_desc(A TB_RDFOLDER_IX07) */ 
							</isEqual>
							<isEqual property="order" compareValue="1">
								/*+ index(A TB_RDFOLDER_IX07) */ 
							</isEqual>
							<isEqual property="order" compareValue="2">
								/*+ index(A TB_RDFOLDER_IX12) */ 
							</isEqual>
						</isNotEqual>
					</dynamic>
					  A.record_center_id
					, A.folder_id
					, A.creat_sys_cd
					, A.org_cd
					, A.cur_keep_org_cd
					, A.clss_div_cd
					, A.clss_id
					, A.clss_nm
					, A.new_clss_id
					, A.new_clss_nm
					, A.creat_yyyy
					, A.title
					, A.presv_term_cd
					, A.erecord_flag
					, A.folder_keep_state_cd
					, A.oper_read_range_cd
					, A.efile_del_flag
					, A.folder_reg_seq
					, A.ho_no
                    , A.folder_close_dtime
                    , (SELECT STAKRM_ID||'-'||BOOKSF_ID||'-'||BOOKSF_SHELF_CNO||'-'||BOOKSF_SHELF_RNO FROM TB_SRBOOKSFARNGDETL WHERE FOLDER_ID = A.FOLDER_ID) AS PRESV_LOC					
				FROM  TB_RDFOLDER A
				WHERE A.record_center_id = #recordCenterId:VARCHAR#
				<dynamic>
					<isNotEmpty prepend="AND" property="orgCd">
						<isEqual property="searchDivCd" compareValue="1">
							A.cur_keep_org_cd = #orgCd:VARCHAR#
						</isEqual>
						<isEqual property="searchDivCd" compareValue="2">
							A.org_cd = #orgCd:VARCHAR#
						</isEqual>						
					</isNotEmpty>
					<isEmpty property="orgCd">
						<isNotEmpty prepend="AND" property="orgNm">
							<isEqual property="searchDivCd" compareValue="1">
								A.cur_keep_org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
							</isEqual>	
							<isEqual property="searchDivCd" compareValue="2">
								A.org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
							</isEqual>
						</isNotEmpty>
					</isEmpty>
					<isNotEqual property="readRangType" compareValue="1">
						<isNotEqual prepend="AND" property="sesUserDiv" compareValue="3">
						    A.oper_read_range_cd != '03' 
						</isNotEqual>
					</isNotEqual>
					<isNotEmpty prepend="AND" property="operReadRangeCd">
						(CASE WHEN (SELECT COUNT(1) FROM TB_RDRECORD Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id AND Z.oper_read_range_cd IN ('02','03')) > 0 THEN '02' ELSE '01' END) = #operReadRangeCd:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="creatSysCd">
						A.creat_sys_cd = #creatSysCd:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="creatFromYyyy">
						<isNotEmpty property="creatToYyyy">
							(A.creat_yyyy BETWEEN #creatFromYyyy:VARCHAR# AND #creatToYyyy:VARCHAR#)
						</isNotEmpty>
						<isEmpty property="creatToYyyy">
							A.creat_yyyy <![CDATA[>=]]> #creatFromYyyy:VARCHAR#
						</isEmpty>
					</isNotEmpty>
					<isEmpty prepend="AND" property="creatFromYyyy">
						<isNotEmpty property="creatToYyyy">
							A.creat_yyyy <![CDATA[<=]]> #creatToYyyy:VARCHAR#
						</isNotEmpty>
					</isEmpty>
					<isNotEmpty prepend="AND" property="clssId">
					    <isEqual property="clssDivCd" compareValue="1">
							(A.clss_id = #clssId:VARCHAR# OR A.new_clss_id = #clssId:VARCHAR#)
						</isEqual>
						<isNotEqual property="clssDivCd" compareValue="1">
					    	A.clss_id = #clssId:VARCHAR#
					    </isNotEqual>
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="arrTitle">
						<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">A.title LIKE #arrTitle[]:VARCHAR#</iterate>
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="innerTitle">
						A.title LIKE #innerTitle:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="folderTypeDivCd">
						A.folder_type_div_cd = #folderTypeDivCd:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="presvTermCd">
						A.presv_term_cd = #presvTermCd:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="keywd">
						A.folder_id IN (SELECT folder_id FROM TB_RDFOLDERKEYWD WHERE record_center_id=#recordCenterId:VARCHAR# AND keywd LIKE #keywd:VARCHAR#)
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="agentNm">
						A.folder_id IN (SELECT folder_id FROM TB_RDFOLDERCREAT WHERE record_center_id=#recordCenterId:VARCHAR# AND agent_nm LIKE #agentNm:VARCHAR#)
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="erecordFlag">
						A.erecord_flag = #erecordFlag:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="scanProgStateCd">
						<isEqual property="scanProgStateCd" compareValue="5">
							A.scan_prog_state_cd = #scanProgStateCd:VARCHAR#
						</isEqual>
						<isEqual property="scanProgStateCd" compareValue="1">
					    	(A.scan_prog_state_cd IS NULL or A.scan_prog_state_cd IN ('', '1', '2', '3', '4'))
					    </isEqual>
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="takeYyyy">
						A.take_yyyy = #takeYyyy:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="arrFolderKeepStateCd">
						A.folder_keep_state_cd IN <iterate property="arrFolderKeepStateCd" open="(" close=")" conjunction=",">#arrFolderKeepStateCd[]:VARCHAR#</iterate>
					</isNotEmpty>
				</dynamic>
				)
				UNION ALL
				(
				SELECT 
					<dynamic>
						<isNotEqual property="checkParam" compareValue="Y">
							<isEmpty property="order">
								/*+ index_desc(A TB_NKFOLDER_IX07) */ 
							</isEmpty>
							<isEqual property="order" compareValue="0">
								/*+ index_desc(A TB_NKFOLDER_IX07) */ 
							</isEqual>
							<isEqual property="order" compareValue="1">
								/*+ index(A TB_NKFOLDER_IX07) */ 
							</isEqual>
							<isEqual property="order" compareValue="2">
								/*+ index(A TB_NKFOLDER_IX12) */ 
							</isEqual>
						</isNotEqual>
					</dynamic>
					  A.record_center_id
					, A.folder_id
					, A.creat_sys_cd
					, A.org_cd
					, A.cur_keep_org_cd
					, A.clss_div_cd
					, A.clss_id
					, A.clss_nm
					, A.new_clss_id
					, A.new_clss_nm
					, A.creat_yyyy
					, A.title
					, A.presv_term_cd
					, A.erecord_flag
					, A.folder_keep_state_cd
					, A.oper_read_range_cd
					, A.efile_del_flag
					, A.folder_reg_seq
					, A.ho_no
                    , A.folder_close_dtime
                    , '' AS PRESV_LOC					
				FROM  TB_NKFOLDER A
				WHERE A.record_center_id = #recordCenterId:VARCHAR#
				<dynamic>
					<isNotEmpty prepend="AND" property="orgCd">
						<isEqual property="searchDivCd" compareValue="1">
							A.cur_keep_org_cd = #orgCd:VARCHAR#
						</isEqual>
						<isEqual property="searchDivCd" compareValue="2">
							A.org_cd = #orgCd:VARCHAR#
						</isEqual>						
					</isNotEmpty>
					<isEmpty property="orgCd">
						<isNotEmpty prepend="AND" property="orgNm">
							<isEqual property="searchDivCd" compareValue="1">
								A.cur_keep_org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
							</isEqual>	
							<isEqual property="searchDivCd" compareValue="2">
								A.org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
							</isEqual>
						</isNotEmpty>
					</isEmpty>
					<isNotEqual property="readRangType" compareValue="1">
						<isNotEqual prepend="AND" property="sesUserDiv" compareValue="3">
						    A.oper_read_range_cd != '03' 
						</isNotEqual>
					</isNotEqual>
					<isNotEmpty prepend="AND" property="operReadRangeCd">
						(CASE WHEN (SELECT COUNT(1) FROM TB_RDRECORD Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id AND Z.oper_read_range_cd IN ('02','03')) > 0 THEN '02' ELSE '01' END) = #operReadRangeCd:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="creatSysCd">
						A.creat_sys_cd = #creatSysCd:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="creatFromYyyy">
						<isNotEmpty property="creatToYyyy">
							(A.creat_yyyy BETWEEN #creatFromYyyy:VARCHAR# AND #creatToYyyy:VARCHAR#)
						</isNotEmpty>
						<isEmpty property="creatToYyyy">
							A.creat_yyyy <![CDATA[>=]]> #creatFromYyyy:VARCHAR#
						</isEmpty>
					</isNotEmpty>
					<isEmpty prepend="AND" property="creatFromYyyy">
						<isNotEmpty property="creatToYyyy">
							A.creat_yyyy <![CDATA[<=]]> #creatToYyyy:VARCHAR#
						</isNotEmpty>
					</isEmpty>
					<isNotEmpty prepend="AND" property="clssId">
					    <isEqual property="clssDivCd" compareValue="1">
							(A.clss_id = #clssId:VARCHAR# OR A.new_clss_id = #clssId:VARCHAR#)
						</isEqual>
						<isNotEqual property="clssDivCd" compareValue="1">
					    	A.clss_id = #clssId:VARCHAR#
					    </isNotEqual>
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="arrTitle">
						<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">A.title LIKE #arrTitle[]:VARCHAR#</iterate>
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="innerTitle">
						A.title LIKE #innerTitle:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="folderTypeDivCd">
						A.folder_type_div_cd = #folderTypeDivCd:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="presvTermCd">
						A.presv_term_cd = #presvTermCd:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="keywd">
						A.folder_id IN (SELECT folder_id FROM TB_RDFOLDERKEYWD WHERE record_center_id=#recordCenterId:VARCHAR# AND keywd LIKE #keywd:VARCHAR#)
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="agentNm">
						A.folder_id IN (SELECT folder_id FROM TB_RDFOLDERCREAT WHERE record_center_id=#recordCenterId:VARCHAR# AND agent_nm LIKE #agentNm:VARCHAR#)
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="erecordFlag">
						A.erecord_flag = #erecordFlag:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="scanProgStateCd">
						<isEqual property="scanProgStateCd" compareValue="5">
							A.scan_prog_state_cd = #scanProgStateCd:VARCHAR#
						</isEqual>
						<isEqual property="scanProgStateCd" compareValue="1">
					    	(A.scan_prog_state_cd IS NULL or A.scan_prog_state_cd IN ('', '1', '2', '3', '4'))
					    </isEqual>
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="takeYyyy">
						A.take_yyyy = #takeYyyy:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="arrFolderKeepStateCd">
						A.folder_keep_state_cd IN <iterate property="arrFolderKeepStateCd" open="(" close=")" conjunction=",">#arrFolderKeepStateCd[]:VARCHAR#</iterate>
					</isNotEmpty>
				</dynamic>
				)
				<isEqual property="checkParam" compareValue="Y">
					<isEmpty property="order">
						ORDER BY record_center_id, creat_yyyy DESC, title DESC
					</isEmpty>
					<isEqual property="order" compareValue="0">
						ORDER BY record_center_id, creat_yyyy DESC, title DESC
					</isEqual>
					<isEqual property="order" compareValue="1">
						ORDER BY record_center_id, creat_yyyy, title
					</isEqual>
					<isEqual property="order" compareValue="2">
						ORDER BY record_center_id, title, creat_yyyy
					</isEqual>
				</isEqual>
			) B
			WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
		) C
		WHERE C.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
	</select>

	<!--
		조건별검색_기록물철
		: 기록물철 질의저장 목록 조회
	-->
	<resultMap id="findDetailsFolderSearchParamPagedList-result" class="rms.srch.srch.domain.FolderQuery">
		<result property="userId"				column="user_id" />
		<result property="folderQueryId"		column="folder_query_id" />
		<result property="folderQueryNm"		column="folder_query_nm" />
		<result property="creatSysCd"			column="creat_sys_cd" />
		<result property="creatYyyyFrom"		column="creat_yyyy_from" />
		<result property="creatYyyyTo"			column="creat_yyyy_to" />
		<result property="creatOrgCd"			column="creat_org_cd" />
		<result property="creatOrgNm"			column="creat_org_nm" />
		<result property="clssDivCd"			column="clss_div_cd" />
		<result property="clssId"				column="clss_id" />
		<result property="clssNm"				column="clss_nm" />
		<result property="folderTitle"			column="folder_title" />
		<result property="presvTermCd"			column="presv_term_cd" />
		<result property="folderTypeDivCd"		column="folder_type_div_cd" />
		<result property="workUserId"			column="work_user_id" />
		<result property="regDtime"				column="reg_dtime" />
		<result property="erecordFlag"			column="erecord_flag" />
		<result property="scanProgStateCd"		column="scan_prog_state_cd" />
		<result property="takeYyyy"				column="take_yyyy" />
		<result property="agentNm"				column="agent_nm" />
		<result property="folderKeepStateCd"	column="folder_keep_state_cd" />
		<result property="operReadRangeCd"		column="oper_read_range_cd" />
		<result property="innerTitle"			column="inner_title" />
		<result property="searchDivCd"			column="search_div_cd" />
		<result property="keywd"				column="keywd"		jdbcType="CLOB"	javaType="java.lang.String" />
	</resultMap>
	<select id="countDetailsFolderSearchParamPagedList" parameterClass="rms.srch.srch.domain.FolderQuery" resultClass="java.lang.Long">
		SELECT COUNT(1)
		FROM  TB_STFOLDERQUERY A
		WHERE A.user_id = #userId:VARCHAR#
	</select>
	<select id="findDetailsFolderSearchParamPagedList" parameterClass="rms.srch.srch.domain.FolderQuery" resultMap="findDetailsFolderSearchParamPagedList-result">
		SELECT E.user_id
			, E.folder_query_id
			, E.folder_query_nm
			, E.creat_sys_cd
			, E.creat_yyyy_from
			, E.creat_yyyy_to
			, E.creat_org_cd
			, (SELECT MAX(Z.org_nm) FROM TB_STORG Z WHERE Z.org_cd=E.creat_org_cd) AS creat_org_nm
			, E.clss_div_cd
			, E.clss_id
			, (CASE WHEN E.clss_div_cd='1' THEN (SELECT Z.bis_clss_nm FROM TB_ZZBISCLSS Z WHERE Z.bis_clss_id=E.clss_id)
					WHEN E.clss_div_cd='2' THEN (SELECT MAX(Z.unit_nm) FROM TB_ZZUNIT Z WHERE Z.unit_cd=E.clss_id)
					ELSE '' END) AS clss_nm
			, E.folder_title
			, E.presv_term_cd
			, E.folder_type_div_cd
			, E.work_user_id
			, E.reg_dtime
			, E.erecord_flag
			, E.scan_prog_state_cd
			, E.take_yyyy
			, E.agent_nm
			, E.folder_keep_state_cd
			, E.oper_read_range_cd
			, E.inner_title
			, E.search_div_cd
			, E.keywd
		FROM (
			SELECT D.*
			FROM (
				SELECT ROWNUM AS rnum
					, C.*
				FROM (
					SELECT A.*
					FROM  TB_STFOLDERQUERY A
					WHERE A.user_id = #userId:VARCHAR#
					ORDER BY A.user_id, A.folder_query_id
				) C
				WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
			) D
			WHERE D.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
		) E
		ORDER BY E.rnum
	</select>

	<!-- 
		조건별검색_기록물철
		: 기록물철 검색조건 삭제(질의저장)
	 -->
	<delete id="deleteDetailsFolderSearchParam" parameterClass="rms.srch.srch.domain.FolderQuery">
		DELETE FROM TB_STFOLDERQUERY
		WHERE user_id = #userId:VARCHAR#
		AND   folder_query_id = #folderQueryId:VARCHAR#
	</delete>

	<!-- 
		조건별검색_기록물철
		: 기록물철 검색조건 저장(질의저장)
	 -->
	<insert id="createDetailsFolderSearchParam" parameterClass="rms.srch.srch.domain.FolderQuery">
		INSERT INTO TB_STFOLDERQUERY
		(
			user_id, folder_query_id, folder_query_nm, creat_sys_cd, creat_yyyy_from
			, creat_yyyy_to, creat_org_cd, clss_div_cd, clss_id, folder_title
			, presv_term_cd, folder_type_div_cd, work_user_id, reg_dtime, erecord_flag
			, scan_prog_state_cd, take_yyyy, agent_nm, folder_keep_state_cd, oper_read_range_cd
			, inner_title, search_div_cd, keywd
		)
		VALUES
		(
			#userId:VARCHAR#, (SELECT NVL(MAX(TO_NUMBER(folder_query_id)),0)+1 FROM TB_STFOLDERQUERY WHERE user_id = #userId:VARCHAR#), #folderQueryNm:VARCHAR#, #creatSysCd:VARCHAR#, #creatYyyyFrom:VARCHAR#
			, #creatYyyyTo:VARCHAR#, #orgCd:VARCHAR#, #clssDivCd:VARCHAR#, #clssId:VARCHAR#, #title:VARCHAR#
			, #presvTermCd:VARCHAR#, #folderTypeDivCd:VARCHAR#, #userId:VARCHAR#
			<!--cubrid, TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'), #erecordFlag:VARCHAR#-->
			, TO_CHAR(sys_datetime, 'YYYYMMDDHH24MISS'), #erecordFlag:VARCHAR#
			, #scanProgStateCd:VARCHAR#, #takeYyyy:VARCHAR#, #agentNm:VARCHAR#, #folderKeepStateCd:VARCHAR#, #operReadRangeCd:VARCHAR#
			, #innerTitle:VARCHAR#, #searchDivCd:VARCHAR#, #keywd:CLOB#
		)
	</insert>

	<!--
		조건별검색_기록물건
		: 기록물건 목록 조회
	-->
	<resultMap id="findDetailsRecordPagedList-result" class="rms.srch.srch.domain.DetailsRecord">
		<result property = "recordCenterId" 	column = "RECORD_CENTER_ID"     />
		<result property = "folderOrgCd" 		column = "FOLDER_ORG_CD"        /> 
		<result property = "recordOrgCd" 		column = "RECORD_ORG_CD"        /> 		
		<result property = "folderId" 			column = "FOLDER_ID"			/>
		<result property = "recordId" 			column = "RECORD_ID"			/>
		<result property = "folderTitle" 		column = "FOLDER_TITLE"			/>
		<result property = "title" 				column = "TITLE"				/>
		<result property = "orgNm" 				column = "ORG_NM"				/>
		<result property = "orgAbbrNm" 			column = "ORG_ABBR_NM"      	/>
		<result property = "creatRegDtime" 		column = "CREAT_REG_DTIME"		/>
		<result property = "recordDetlTypeNm" 	column = "RECORD_DETL_TYPE_NM"	/>
		<result property = "openDivNm" 			column = "OPEN_DIV_NM"			/>
		<result property = "erecordFlagNm" 		column = "ERECORD_FLAG_NM"		/>
		<result property = "creatSysNm" 		column = "CREAT_SYS_NM"			/>
		<result property = "spclRecordTypeNm" 	column = "SPCL_RECORD_TYPE_NM"	/>
		<result property = "scanFinFlag" 	    column = "SCAN_FIN_FLAG"		/>
		<result property = "folderKeepStateCd" 	column = "FOLDER_KEEP_STATE_CD"	/>
		<result property = "folderKeepStateNm" 	column = "FOLDER_KEEP_STATE_NM"	/>
		<result property = "creatSysCd" 	    column = "CREAT_SYS_CD"			/>
		<result property = "scanProgStateCd" 	column = "SCAN_PROG_STATE_CD"	/>
		<result property = "operReadRangeCd" 	column = "OPER_READ_RANGE_CD"	/>
		<result property = "operReadRangeNm"    column = "OPER_READ_RANGE_NM"	/>
		<result property = "accsFlag" 			column = "ACCS_FLAG"			/>
		<result property = "dutyChrgrNm" 		column = "DUTY_CHRGR_NM"		/>
		<result property = "prodTypeCd" 		column = "PROD_TYPE_CD"			/>
		<result property = "recordRegDivNm" 	column = "RECORD_REG_DIV_NM"	/>
		<result property = "efileDelFlag" 		column = "EFILE_DEL_FLAG"		/>
		<result property = "folderKey" 			column = "folder_key"			/>
		<result property = "hoNo" 				column = "ho_no"				/>
		<result property = "creatYyyy" 			column = "creat_yyyy"			/>
		<result property = "creatRegNo" 		column = "creat_reg_no"			/>
		<result property = "dtchRegNo" 			column = "dtch_reg_no"			/>
		<result property = "creatSysRecordId" 	column = "creat_sys_record_id"	/>
		<result property = "recordDetlTypeCd" 	column = "record_detl_type_cd"	/>
		<result property = "docNo" 				column = "doc_no"				/>
		<result property = "creatRegNoSub" 		column = "creat_reg_no_sub"		/>
	</resultMap>
	<!-- 20150805 김경수 create_sys_cd = '04' (통합온나라)일 경우 규격변경 -->
	<select id="countDetailsRecordPagedList" parameterClass="rms.srch.srch.domain.DetailsRecord" resultClass="java.lang.Long">
		SELECT /*+ use_merge(k)*/ COUNT(1)
		FROM TB_RDRECORD A
			, TB_RDFOLDER K
		WHERE A.record_center_id = K.record_center_id
		AND   A.folder_id = K.folder_id
		AND   A.record_center_id = #recordCenterId:VARCHAR#
		<dynamic>
			<isNotEmpty prepend="AND" property="creatSysCd">
				A.creat_sys_cd = #creatSysCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="orgCd">
				<isEqual property="searchDivCd" compareValue="1">
					K.cur_keep_org_cd = #orgCd:VARCHAR#
				</isEqual>
				<isEqual property="searchDivCd" compareValue="2">
					A.org_cd = #orgCd:VARCHAR#
				</isEqual>
			</isNotEmpty>
			<isEmpty property="orgCd">
				<isNotEmpty prepend="AND" property="orgNm">
					<isEqual property="searchDivCd" compareValue="1">
						K.cur_keep_org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
					</isEqual>
					<isEqual property="searchDivCd" compareValue="2">
						A.org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
					</isEqual>
				</isNotEmpty>
			</isEmpty>
			<isNotEmpty prepend="AND" property="recordDetlTypeCd">
				A.record_detl_type_cd = #recordDetlTypeCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="bmsRecordDetlTypeCd">
				A.bms_record_detl_type_cd = #bmsRecordDetlTypeCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="bmsRecordDetlSortCd">
				A.bms_record_detl_sort_cd = #bmsRecordDetlSortCd:VARCHAR#
			</isNotEmpty>	
			<isNotEmpty prepend="AND" property="creatRegDtimeStart">
				<isNotEmpty property="creatRegDtimeEnd">
					(A.creat_reg_dtime BETWEEN #creatRegDtimeStart:VARCHAR#||'000000' AND #creatRegDtimeEnd:VARCHAR#||'240000')
				</isNotEmpty>
				<isEmpty property="creatRegDtimeEnd">
					A.creat_reg_dtime <![CDATA[>=]]> #creatRegDtimeStart:VARCHAR#||'000000'
				</isEmpty>
			</isNotEmpty>
			<isEmpty prepend="AND" property="creatRegDtimeStart">
				<isNotEmpty property="creatRegDtimeEnd">
					A.creat_reg_dtime <![CDATA[<=]]> #creatRegDtimeEnd:VARCHAR#||'240000'
				</isNotEmpty>
			</isEmpty>
			<isNotEmpty prepend="AND" property="erecordFlag">
				A.erecord_flag = #erecordFlag:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="arrTitle">
				<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">A.title LIKE #arrTitle[]:VARCHAR#</iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="innerTitle">
				A.title LIKE #innerTitle:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="oldRecordDocno">
				(A.doc_no LIKE #oldRecordDocno:VARCHAR# OR A.old_record_docno LIKE #oldRecordDocno:VARCHAR#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="keywd">
				A.record_id IN (SELECT record_id FROM TB_RDRECORDKEYWD WHERE record_center_id=#recordCenterId:VARCHAR# AND keywd LIKE #keywd:VARCHAR#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spclRecordType">
				<isEqual property="spclRecordType" compareValue="1">
					A.spcl_record_type = 'YNNNN'
				</isEqual>
				<isEqual property="spclRecordType" compareValue="2">
					A.spcl_record_type = 'NYNNN'
				</isEqual>
				<isEqual property="spclRecordType" compareValue="3">
					A.spcl_record_type = 'NNYNN'
				</isEqual>
				<isEqual property="spclRecordType" compareValue="4">
					A.spcl_record_type = 'NNNYN'
				</isEqual>
				<isEqual property="spclRecordType" compareValue="5">
					A.spcl_record_type = 'NNNNY'
				</isEqual>
			</isNotEmpty>
			<isNotEqual property="readRangType" compareValue="1">
				<isNotEqual prepend="AND" property="sesUserDiv"
					compareValue="3">
					A.oper_read_range_cd != '03' AND K.oper_read_range_cd != '03'
				</isNotEqual>
			</isNotEqual>
			<isNotEmpty prepend="AND" property="operReadRangeCd">
				A.oper_read_range_cd = #operReadRangeCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="clssId">
				<isEqual property="clssDivCd" compareValue="1">
					(K.clss_id = #clssId:VARCHAR# OR K.new_clss_id = #clssId:VARCHAR#)
				</isEqual>
				<isNotEqual property="clssDivCd" compareValue="1">
					K.clss_id = #clssId:VARCHAR#
				</isNotEqual>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="scanProgStateCd">
				<isEqual property="scanProgStateCd" compareValue="5">
					K.scan_prog_state_cd = #scanProgStateCd:VARCHAR#
				</isEqual>
				<isEqual property="scanProgStateCd" compareValue="1">
					(K.scan_prog_state_cd IS NULL OR K.scan_prog_state_cd IN ('1','2','3','4'))
				</isEqual>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="arrFolderKeepStateCd">
				K.folder_keep_state_cd IN <iterate property="arrFolderKeepStateCd" open="(" close=")" conjunction=",">#arrFolderKeepStateCd[]:VARCHAR#</iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="recordClssCd">
				A.record_clss_cd = #recordClssCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="recverSenderAgentNm">
				EXISTS (
					SELECT 1 FROM TB_RDRECORDCREAT Z
					WHERE Z.record_center_id=A.record_center_id
					AND Z.record_id=A.record_id
					AND Z.agent_type_cd IN ('08','09')
					AND (Z.agent_nm LIKE #recverSenderAgentNm:VARCHAR#
					OR Z.agent_org_nm LIKE #recverSenderAgentNm:VARCHAR#)
				)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="openDivCd">
				A.open_div_cd = #openDivCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="prodTypeCd">
<!-- 				<isEqual property="prodTypeCd" compareValue="0"> -->
<!-- 					A.record_reg_div_cd IN ('1','3','5','6','8') -->
<!-- 				</isEqual> -->
<!-- 				<isEqual property="prodTypeCd" compareValue="1"> -->
<!-- 					A.record_reg_div_cd IN ('2','4','7') -->
<!-- 				</isEqual> -->
				NVL(A.prod_type_cd, (CASE WHEN A.record_reg_div_cd IN ('1','3','5','6','7','8') THEN '0' ELSE '1' END)) = #prodTypeCd:VARCHAR#
			</isNotEmpty>
		</dynamic>
	</select>
	<!-- 20150805 김경수 create_sys_cd = '04' (통합온나라)일 경우 규격변경 -->
	<select id="findDetailsRecordPagedList" parameterClass="rms.srch.srch.domain.DetailsRecord" resultMap="findDetailsRecordPagedList-result">
		SELECT E.record_center_id
			, E.folder_org_cd
			, E.record_org_cd
			, E.folder_id
			, E.record_id
			, E.folder_title
			, E.title
			, (SELECT Z.org_nm FROM TB_STORG Z WHERE Z.record_center_id=E.record_center_id AND Z.org_cd=E.record_org_cd) org_nm
			, (SELECT Z.org_abbr_nm FROM TB_STORG Z WHERE Z.record_center_id=E.record_center_id AND Z.org_cd=E.record_org_cd) org_abbr_nm
			, SUBSTR(E.creat_reg_dtime,0,8) creat_reg_dtime
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD03' AND Z.com_cd=E.record_detl_type_cd) record_detl_type_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD05' AND Z.com_cd=E.open_div_cd) open_div_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD23' AND Z.com_cd=E.erecord_flag) erecord_flag_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD17' AND Z.com_cd=E.creat_sys_cd) creat_sys_nm
			, (DECODE(SUBSTR(E.spcl_record_type,1,1),'N','','Y',(SELECT com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='1'))
				||DECODE(SUBSTR(E.spcl_record_type,2,1),'N','','Y',(SELECT ','||com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='2'))
				||DECODE(SUBSTR(E.spcl_record_type,3,1),'N','','Y',(SELECT ','||com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='3'))
				||DECODE(SUBSTR(E.spcl_record_type,4,1),'N','','Y',(SELECT ','||com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='4'))
				||DECODE(SUBSTR(E.spcl_record_type,5,1),'N','','Y',(SELECT ','||com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='5'))) spcl_record_type_nm
			, E.scan_fin_flag
			, E.folder_keep_state_cd
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD32' AND Z.com_cd=E.folder_keep_state_cd) folder_keep_state_nm
			, E.creat_sys_cd
			, E.scan_prog_state_cd
			, E.oper_read_range_cd
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD53' AND Z.com_cd=E.oper_read_range_cd) oper_read_range_nm
		    , (CASE WHEN #sesUserDiv:VARCHAR# = '3' AND E.record_center_id = (SELECT Z.record_center_id FROM TB_STUSER Z WHERE Z.USER_ID = #sesUserId:VARCHAR#) THEN 1
					WHEN E.oper_read_range_cd='01' THEN 1
					<isEqual property="orgUserAccsType" compareValue="1">
					WHEN (E.oper_read_range_cd='02' AND #sesOrgCd:VARCHAR# = (SELECT B.CUR_KEEP_ORG_CD FROM TB_RDFOLDER B WHERE B.folder_id=E.folder_id)) THEN 1
					</isEqual>
					<isEqual property="orgUserAccsType" compareValue="2">
					WHEN #sesOrgCd:VARCHAR# = (SELECT B.CUR_KEEP_ORG_CD FROM TB_RDFOLDER B WHERE B.folder_id=E.folder_id) THEN 1
					</isEqual>
		            WHEN (SELECT COUNT(1) FROM TB_RDRECORDACCS Z WHERE Z.record_center_id=E.record_center_id AND Z.record_id=E.record_id AND Z.accs_type_cd='2' AND Z.accs_dept_cd=#sesOrgCd:VARCHAR#) > 0 THEN 1 
		            WHEN (SELECT COUNT(1) FROM TB_RDRECORDACCS Z WHERE Z.record_center_id=E.record_center_id AND Z.record_id=E.record_id AND Z.accs_type_cd='1' AND Z.accs_user_id=#sesUserId:VARCHAR#) > 0 THEN 1
		            WHEN (SELECT COUNT(1) FROM TB_RDRECORDREADDETL Z WHERE Z.record_center_id in (select record_center_id from tb_stuser where user_id = #sesUserId:VARCHAR#) AND Z.record_id=E.record_id AND Z.read_aprov_cd='2' AND EXISTS (SELECT 1 FROM TB_RDREADREQ Y WHERE Y.record_center_id=Z.record_center_id AND Y.read_reqno=Z.read_reqno AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN Y.read_start_ymd AND Y.read_close_ymd AND Y.read_user_id=#sesUserId:VARCHAR#)) > 0 THEN 1
		            ELSE 0
		       END) accs_flag
		    , (CASE WHEN (E.record_detl_type_cd='01' AND E.prod_type_cd='1')
		            THEN (SELECT Z.agent_nm FROM TB_RDRECORDCREAT Z WHERE Z.record_center_id=E.record_center_id AND Z.record_id=E.record_id AND Z.agent_sno=(SELECT MIN(agent_sno) FROM TB_RDRECORDCREAT Y WHERE Y.record_center_id=Z.record_center_id AND Y.record_id=Z.record_id AND Y.agent_type_cd='28'))
		        	WHEN (E.record_detl_type_cd='02' OR E.record_detl_type_cd='03')
		            THEN (SELECT Z.agent_nm FROM TB_RDRECORDCREAT Z WHERE Z.record_center_id=E.record_center_id AND Z.record_id=E.record_id AND Z.agent_sno=(SELECT MIN(agent_sno) FROM TB_RDRECORDCREAT Y WHERE Y.record_center_id=Z.record_center_id AND Y.record_id=Z.record_id AND Y.agent_type_cd='06'))
		        	WHEN E.record_detl_type_cd='04'
		            THEN (SELECT Z.agent_nm FROM TB_RDRECORDCREAT Z WHERE Z.record_center_id=E.record_center_id AND Z.record_id=E.record_id AND Z.agent_sno=(SELECT MIN(agent_sno) FROM TB_RDRECORDCREAT Y WHERE Y.record_center_id=Z.record_center_id AND Y.record_id=Z.record_id AND Y.agent_type_cd='07'))
		        	WHEN E.creat_sys_cd='03'
		            THEN (SELECT Z.agent_nm FROM TB_RDRECORDCREAT Z WHERE Z.record_center_id=E.record_center_id AND Z.record_id=E.record_id AND Z.agent_sno=(SELECT MIN(agent_sno) FROM TB_RDRECORDCREAT Y WHERE Y.record_center_id=Z.record_center_id AND Y.record_id=Z.record_id AND Y.agent_type_cd='01'))
		       		ELSE (SELECT Z.agent_nm FROM TB_RDRECORDCREAT Z WHERE Z.record_center_id=E.record_center_id AND Z.record_id=E.record_id AND Z.agent_sno=(SELECT MIN(agent_sno) FROM TB_RDRECORDCREAT Y WHERE Y.record_center_id=Z.record_center_id AND Y.record_id=Z.record_id AND Y.agent_type_cd='02'))
		       END) duty_chrgr_nm
		     , E.efile_del_flag
		     , E.prod_type_cd
       		 , (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd = 'RD02' AND Z.com_cd = E.record_reg_div_cd) record_reg_div_nm
       		 , E.folder_key
       		 , E.ho_no
      		 , E.creat_yyyy, E.creat_reg_no, E.dtch_reg_no, E.creat_sys_record_id, E.record_detl_type_cd, E.doc_no
       		 , SUBSTR(E.creat_reg_no, 8, 6) creat_reg_no_sub
		FROM (
			SELECT D.*
			FROM (
				SELECT ROWNUM AS rnum
					, C.*
				FROM (
					SELECT 
						<dynamic>
							<isEqual property="checkParam" compareValue="Y">
								/*+ use_merge(k)*/
							</isEqual>
							<isNotEqual property="checkParam" compareValue="Y">
								<isEmpty property="order">
									/*+ index_desc(A TB_RDRECORD_IX09) */ 
								</isEmpty>
								<isEqual property="order" compareValue="0">
									/*+ index_desc(A TB_RDRECORD_IX09) */ 
								</isEqual>
								<isEqual property="order" compareValue="1">
									/*+ index(A TB_RDRECORD_IX09) */ 
								</isEqual>
								<isEqual property="order" compareValue="2">
									/*+ index(A TB_RDRECORD_IX08) */ 
								</isEqual>
							</isNotEqual>
						</dynamic> 
					      A.record_center_id
						, A.org_cd AS record_org_cd
						, A.folder_id
						, A.record_id
						, A.title
						, A.creat_reg_dtime
						, A.record_detl_type_cd
						, A.open_div_cd
						, A.erecord_flag
						, A.creat_sys_cd
						, A.creat_yyyy
						, A.doc_no
						, A.old_record_docno
						, A.spcl_record_type
						, A.scan_fin_flag
						, A.oper_read_range_cd
						, A.duty_chrgr_nm
						, A.record_clss_cd
						, A.record_reg_div_cd
						, A.creat_reg_no
						, A.dtch_reg_no
						, A.creat_sys_record_id
<!-- 						, (CASE WHEN A.record_reg_div_cd IN ('1','3','5','6','8') THEN 0 ELSE 1 END) prod_type_cd -->
						, (CASE WHEN A.prod_type_cd is not null THEN A.prod_type_cd ELSE (CASE WHEN A.record_reg_div_cd IN ('1','3','5','6','7','8') THEN '0' ELSE '1' END) END) prod_type_cd
						, K.org_cd as folder_org_cd
						, K.cur_keep_org_cd      as folder_cur_keep_org_cd 
						, K.title                as folder_title
						, K.oper_read_range_cd   as folder_read_range_cd
						, K.clss_id              as clss_id
						, K.new_clss_id          as new_clss_id
						, K.scan_prog_state_cd   as scan_prog_state_cd
						, K.folder_keep_state_cd as folder_keep_state_cd
						, K.efile_del_flag	     as efile_del_flag
						, K.creat_sys_cd||'-'||K.org_cd||'-'||K.clss_id||'-'||K.creat_yyyy||'-'||K.folder_reg_seq AS folder_key
						, K.ho_no
					FROM  TB_RDRECORD A
						, TB_RDFOLDER K
					WHERE A.record_center_id = K.record_center_id
					AND   A.folder_id = K.folder_id
					AND   A.record_center_id = #recordCenterId:VARCHAR#
					<dynamic>
						<isNotEmpty prepend="AND" property="creatSysCd">
							A.creat_sys_cd = #creatSysCd:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="orgCd">
							<isEqual property="searchDivCd" compareValue="1">
								K.cur_keep_org_cd = #orgCd:VARCHAR#
							</isEqual>
							<isEqual property="searchDivCd" compareValue="2">
								A.org_cd = #orgCd:VARCHAR#
							</isEqual>							
						</isNotEmpty>
						<isEmpty property="orgCd">
							<isNotEmpty prepend="AND" property="orgNm">
								<isEqual property="searchDivCd" compareValue="1">
									K.cur_keep_org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
								</isEqual>
								<isEqual property="searchDivCd" compareValue="2">
									A.org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
								</isEqual>
							</isNotEmpty>
						</isEmpty>
						<isNotEmpty prepend="AND" property="recordDetlTypeCd">
							A.record_detl_type_cd = #recordDetlTypeCd:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="bmsRecordDetlTypeCd">
							A.bms_record_detl_type_cd = #bmsRecordDetlTypeCd:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="bmsRecordDetlSortCd">
							A.bms_record_detl_sort_cd = #bmsRecordDetlSortCd:VARCHAR#
						</isNotEmpty>	
						<isNotEmpty prepend="AND" property="creatRegDtimeStart">
							<isNotEmpty property="creatRegDtimeEnd">
								(A.creat_reg_dtime BETWEEN #creatRegDtimeStart:VARCHAR#||'000000' AND #creatRegDtimeEnd:VARCHAR#||'240000')
							</isNotEmpty>
							<isEmpty property="creatRegDtimeEnd">
								A.creat_reg_dtime <![CDATA[>=]]> #creatRegDtimeStart:VARCHAR#||'000000'
							</isEmpty>
						</isNotEmpty>
						<isEmpty prepend="AND" property="creatRegDtimeStart">
							<isNotEmpty property="creatRegDtimeEnd">
								A.creat_reg_dtime <![CDATA[<=]]> #creatRegDtimeEnd:VARCHAR#||'240000'
							</isNotEmpty>
						</isEmpty>
						<isNotEmpty prepend="AND" property="erecordFlag">
							A.erecord_flag = #erecordFlag:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="arrTitle">
							<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">A.title LIKE #arrTitle[]:VARCHAR#</iterate>
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="innerTitle">
							A.title LIKE #innerTitle:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="oldRecordDocno">
							(A.doc_no LIKE #oldRecordDocno:VARCHAR# OR A.old_record_docno LIKE #oldRecordDocno:VARCHAR#)
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="keywd">
							A.record_id IN (SELECT record_id FROM TB_RDRECORDKEYWD WHERE record_center_id=#recordCenterId:VARCHAR# AND keywd LIKE #keywd:VARCHAR#)
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="spclRecordType">
							<isEqual property="spclRecordType" compareValue="1">
								A.spcl_record_type = 'YNNNN'
							</isEqual>
							<isEqual property="spclRecordType" compareValue="2">
						    	A.spcl_record_type = 'NYNNN'
						    </isEqual>
						    <isEqual property="spclRecordType" compareValue="3">
								A.spcl_record_type = 'NNYNN'
							</isEqual>
							<isEqual property="spclRecordType" compareValue="4">
						    	A.spcl_record_type = 'NNNYN'
						    </isEqual>	
						    <isEqual property="spclRecordType" compareValue="5">
						    	A.spcl_record_type = 'NNNNY'
						    </isEqual>
						</isNotEmpty>
						<isNotEqual property="readRangType" compareValue="1">
							<isNotEqual prepend="AND" property="sesUserDiv" compareValue="3">
							    A.oper_read_range_cd != '03' AND K.oper_read_range_cd != '03'
							</isNotEqual>
						</isNotEqual>
						<isNotEmpty prepend="AND" property="operReadRangeCd">
							A.oper_read_range_cd = #operReadRangeCd:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="clssId">
						    <isEqual property="clssDivCd" compareValue="1">
								(K.clss_id = #clssId:VARCHAR# OR K.new_clss_id = #clssId:VARCHAR#)
							</isEqual>
							<isNotEqual property="clssDivCd" compareValue="1">
						    	K.clss_id = #clssId:VARCHAR#
						    </isNotEqual>
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="scanProgStateCd">
							<isEqual property="scanProgStateCd" compareValue="5">
								K.scan_prog_state_cd = #scanProgStateCd:VARCHAR#
							</isEqual>
							<isEqual property="scanProgStateCd" compareValue="1">
						    	(K.scan_prog_state_cd IS NULL OR K.scan_prog_state_cd IN ('1','2','3','4'))
						    </isEqual>
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="arrFolderKeepStateCd">
							K.folder_keep_state_cd IN <iterate property="arrFolderKeepStateCd" open="(" close=")" conjunction=",">#arrFolderKeepStateCd[]:VARCHAR#</iterate>
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="recordClssCd">
							A.record_clss_cd = #recordClssCd:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="recverSenderAgentNm">
							EXISTS (
								SELECT 1 FROM TB_RDRECORDCREAT Z
								WHERE Z.record_center_id=A.record_center_id
								AND Z.record_id=A.record_id
								AND Z.agent_type_cd IN ('08','09')
								AND (Z.agent_nm LIKE #recverSenderAgentNm:VARCHAR#
								OR Z.agent_org_nm LIKE #recverSenderAgentNm:VARCHAR#)
							)
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="openDivCd">
							A.open_div_cd = #openDivCd:VARCHAR#
						</isNotEmpty>	
						<isNotEmpty prepend="AND" property="prodTypeCd">
<!-- 							<isEqual property="prodTypeCd" compareValue="0"> -->
<!-- 						    	A.record_reg_div_cd IN ('1','3','5','6','8') -->
<!-- 						    </isEqual> -->
<!-- 							<isEqual property="prodTypeCd" compareValue="1"> -->
<!-- 						    	A.record_reg_div_cd IN ('2','4','7') -->
<!-- 						    </isEqual> -->
						    NVL(A.prod_type_cd, (CASE WHEN A.record_reg_div_cd IN ('1','3','5','6','7','8') THEN '0' ELSE '1' END)) = #prodTypeCd:VARCHAR#
						</isNotEmpty>
						<isEqual property="checkParam" compareValue="Y">
							<isEmpty property="order">
								ORDER BY A.record_center_id, A.creat_reg_dtime DESC, A.creat_reg_no DESC
							</isEmpty>
							<isEqual property="order" compareValue="0">
								ORDER BY A.record_center_id, A.creat_reg_dtime DESC, A.creat_reg_no DESC
							</isEqual>
							<isEqual property="order" compareValue="1">
								ORDER BY A.record_center_id, A.creat_reg_dtime, A.creat_reg_no
							</isEqual>
							<isEqual property="order" compareValue="2">
								ORDER BY A.record_center_id, A.title
							</isEqual>
						</isEqual>
					</dynamic>
				) C
				WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
			) D
			WHERE D.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
		) E
		ORDER BY E.rnum
	</select>
	<!-- 
		조건별검색_기록물건
		: 기록물건 목록 조회 (보유 + 이관/폐기/기관간인계 목록 포함)
	 -->
	<!-- 20150805 김경수 create_sys_cd = '04' (통합온나라)일 경우 규격변경 -->
	<select id="countDetailsRecordPagedList_union" parameterClass="rms.srch.srch.domain.DetailsRecord" resultClass="java.lang.Long">
		SELECT /*+ use_merge(k)*/ COUNT(1)
		FROM (
			(
			SELECT A.record_id
			FROM TB_RDRECORD A
				, TB_RDFOLDER K
			WHERE A.record_center_id = K.record_center_id
			AND   A.folder_id = K.folder_id
			AND   A.record_center_id = #recordCenterId:VARCHAR#
			<dynamic>
				<isNotEmpty prepend="AND" property="creatSysCd">
					A.creat_sys_cd = #creatSysCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="orgCd">
					<isEqual property="searchDivCd" compareValue="1">
						K.cur_keep_org_cd = #orgCd:VARCHAR#
					</isEqual>
					<isEqual property="searchDivCd" compareValue="2">
						A.org_cd = #orgCd:VARCHAR#
					</isEqual>
				</isNotEmpty>
				<isEmpty property="orgCd">
					<isNotEmpty prepend="AND" property="orgNm">
						<isEqual property="searchDivCd" compareValue="1">
							K.cur_keep_org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
						</isEqual>
						<isEqual property="searchDivCd" compareValue="2">
							A.org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
						</isEqual>
					</isNotEmpty>
				</isEmpty>
				<isNotEmpty prepend="AND" property="recordDetlTypeCd">
					A.record_detl_type_cd = #recordDetlTypeCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="creatRegDtimeStart">
					<isNotEmpty property="creatRegDtimeEnd">
						(A.creat_reg_dtime BETWEEN #creatRegDtimeStart:VARCHAR#||'000000' AND #creatRegDtimeEnd:VARCHAR#||'240000')
					</isNotEmpty>
					<isEmpty property="creatRegDtimeEnd">
						A.creat_reg_dtime <![CDATA[>=]]> #creatRegDtimeStart:VARCHAR#||'000000'
					</isEmpty>
				</isNotEmpty>
				<isEmpty prepend="AND" property="creatRegDtimeStart">
					<isNotEmpty property="creatRegDtimeEnd">
						A.creat_reg_dtime <![CDATA[<=]]> #creatRegDtimeEnd:VARCHAR#||'240000'
					</isNotEmpty>
				</isEmpty>
				<isNotEmpty prepend="AND" property="erecordFlag">
					A.erecord_flag = #erecordFlag:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="arrTitle">
					<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">A.title LIKE #arrTitle[]:VARCHAR#</iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="innerTitle">
					A.title LIKE #innerTitle:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="oldRecordDocno">
					(A.doc_no LIKE #oldRecordDocno:VARCHAR# OR A.old_record_docno LIKE #oldRecordDocno:VARCHAR#)
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="keywd">
					A.record_id IN (SELECT record_id FROM TB_RDRECORDKEYWD WHERE record_center_id=#recordCenterId:VARCHAR# AND keywd LIKE #keywd:VARCHAR#)
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="spclRecordType">
					<isEqual property="spclRecordType" compareValue="1">
						A.spcl_record_type = 'YNNNN'
					</isEqual>
					<isEqual property="spclRecordType" compareValue="2">
						A.spcl_record_type = 'NYNNN'
					</isEqual>
					<isEqual property="spclRecordType" compareValue="3">
						A.spcl_record_type = 'NNYNN'
					</isEqual>
					<isEqual property="spclRecordType" compareValue="4">
						A.spcl_record_type = 'NNNYN'
					</isEqual>
					<isEqual property="spclRecordType" compareValue="5">
						A.spcl_record_type = 'NNNNY'
					</isEqual>
				</isNotEmpty>
				<isNotEqual property="readRangType" compareValue="1">
					<isNotEqual prepend="AND" property="sesUserDiv"
						compareValue="3">
						A.oper_read_range_cd != '03' AND K.oper_read_range_cd != '03'
					</isNotEqual>
				</isNotEqual>
				<isNotEmpty prepend="AND" property="operReadRangeCd">
					A.oper_read_range_cd = #operReadRangeCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="clssId">
					<isEqual property="clssDivCd" compareValue="1">
						(K.clss_id = #clssId:VARCHAR# OR K.new_clss_id = #clssId:VARCHAR#)
					</isEqual>
					<isNotEqual property="clssDivCd" compareValue="1">
						K.clss_id = #clssId:VARCHAR#
					</isNotEqual>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="scanProgStateCd">
					<isEqual property="scanProgStateCd" compareValue="5">
						K.scan_prog_state_cd = #scanProgStateCd:VARCHAR#
					</isEqual>
					<isEqual property="scanProgStateCd" compareValue="1">
						(K.scan_prog_state_cd IS NULL OR K.scan_prog_state_cd IN ('1','2','3','4'))
					</isEqual>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="arrFolderKeepStateCd">
					K.folder_keep_state_cd IN <iterate property="arrFolderKeepStateCd" open="(" close=")" conjunction=",">#arrFolderKeepStateCd[]:VARCHAR#</iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="recordClssCd">
					A.record_clss_cd = #recordClssCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="recverSenderAgentNm">
					EXISTS (
						SELECT 1 FROM TB_RDRECORDCREAT Z
						WHERE Z.record_center_id=A.record_center_id
						AND Z.record_id=A.record_id
						AND Z.agent_type_cd IN ('08','09')
						AND Z.agent_nm LIKE #recverSenderAgentNm:VARCHAR#
					)
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="openDivCd">
					A.open_div_cd = #openDivCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="prodTypeCd">
<!-- 					<isEqual property="prodTypeCd" compareValue="0"> -->
<!-- 						A.record_reg_div_cd IN ('1','3','5','6','8') -->
<!-- 					</isEqual> -->
<!-- 					<isEqual property="prodTypeCd" compareValue="1"> -->
<!-- 						A.record_reg_div_cd IN ('2','4','7') -->
<!-- 					</isEqual> -->
					NVL(A.prod_type_cd, (CASE WHEN A.record_reg_div_cd IN ('1','3','5','6','7','8') THEN '0' ELSE '1' END)) = #prodTypeCd:VARCHAR#
				</isNotEmpty>
			</dynamic>
			)
			UNION ALL
			(
			SELECT A.record_id
			FROM TB_NKRECORD A
				, TB_NKFOLDER K
			WHERE A.record_center_id = K.record_center_id
			AND   A.folder_id = K.folder_id
			AND   A.record_center_id = #recordCenterId:VARCHAR#
			<dynamic>
				<isNotEmpty prepend="AND" property="creatSysCd">
					A.creat_sys_cd = #creatSysCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="orgCd">
					<isEqual property="searchDivCd" compareValue="1">
						K.cur_keep_org_cd = #orgCd:VARCHAR#
					</isEqual>
					<isEqual property="searchDivCd" compareValue="2">
						A.org_cd = #orgCd:VARCHAR#
					</isEqual>
				</isNotEmpty>
				<isEmpty property="orgCd">
					<isNotEmpty prepend="AND" property="orgNm">
						<isEqual property="searchDivCd" compareValue="1">
							K.cur_keep_org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
						</isEqual>
						<isEqual property="searchDivCd" compareValue="2">
							A.org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
						</isEqual>
					</isNotEmpty>
				</isEmpty>
				<isNotEmpty prepend="AND" property="recordDetlTypeCd">
					A.record_detl_type_cd = #recordDetlTypeCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="bmsRecordDetlTypeCd">
					A.bms_record_detl_type_cd = #bmsRecordDetlTypeCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="bmsRecordDetlSortCd">
					A.bms_record_detl_sort_cd = #bmsRecordDetlSortCd:VARCHAR#
				</isNotEmpty>	
				<isNotEmpty prepend="AND" property="creatRegDtimeStart">
					<isNotEmpty property="creatRegDtimeEnd">
						(A.creat_reg_dtime BETWEEN #creatRegDtimeStart:VARCHAR#||'000000' AND #creatRegDtimeEnd:VARCHAR#||'240000')
					</isNotEmpty>
					<isEmpty property="creatRegDtimeEnd">
						A.creat_reg_dtime <![CDATA[>=]]> #creatRegDtimeStart:VARCHAR#||'000000'
					</isEmpty>
				</isNotEmpty>
				<isEmpty prepend="AND" property="creatRegDtimeStart">
					<isNotEmpty property="creatRegDtimeEnd">
						A.creat_reg_dtime <![CDATA[<=]]> #creatRegDtimeEnd:VARCHAR#||'240000'
					</isNotEmpty>
				</isEmpty>
				<isNotEmpty prepend="AND" property="erecordFlag">
					A.erecord_flag = #erecordFlag:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="arrTitle">
					<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">A.title LIKE #arrTitle[]:VARCHAR#</iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="innerTitle">
					A.title LIKE #innerTitle:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="oldRecordDocno">
					(A.doc_no LIKE #oldRecordDocno:VARCHAR# OR A.old_record_docno LIKE #oldRecordDocno:VARCHAR#)
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="keywd">
					A.record_id IN (SELECT record_id FROM TB_RDRECORDKEYWD WHERE record_center_id=#recordCenterId:VARCHAR# AND keywd LIKE #keywd:VARCHAR#)
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="spclRecordType">
					<isEqual property="spclRecordType" compareValue="1">
						A.spcl_record_type = 'YNNNN'
					</isEqual>
					<isEqual property="spclRecordType" compareValue="2">
						A.spcl_record_type = 'NYNNN'
					</isEqual>
					<isEqual property="spclRecordType" compareValue="3">
						A.spcl_record_type = 'NNYNN'
					</isEqual>
					<isEqual property="spclRecordType" compareValue="4">
						A.spcl_record_type = 'NNNYN'
					</isEqual>
					<isEqual property="spclRecordType" compareValue="5">
						A.spcl_record_type = 'NNNNY'
					</isEqual>
				</isNotEmpty>
				<isNotEqual property="readRangType" compareValue="1">
					<isNotEqual prepend="AND" property="sesUserDiv" compareValue="3">
						A.oper_read_range_cd != '03' AND K.oper_read_range_cd != '03'
					</isNotEqual>
				</isNotEqual>
				<isNotEmpty prepend="AND" property="operReadRangeCd">
					A.oper_read_range_cd = #operReadRangeCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="clssId">
					<isEqual property="clssDivCd" compareValue="1">
						(K.clss_id = #clssId:VARCHAR# OR K.new_clss_id = #clssId:VARCHAR#)
					</isEqual>
					<isNotEqual property="clssDivCd" compareValue="1">
						K.clss_id = #clssId:VARCHAR#
					</isNotEqual>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="scanProgStateCd">
					<isEqual property="scanProgStateCd" compareValue="5">
						K.scan_prog_state_cd = #scanProgStateCd:VARCHAR#
					</isEqual>
					<isEqual property="scanProgStateCd" compareValue="1">
						(K.scan_prog_state_cd IS NULL OR K.scan_prog_state_cd IN ('1','2','3','4'))
					</isEqual>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="arrFolderKeepStateCd">
					K.folder_keep_state_cd IN <iterate property="arrFolderKeepStateCd" open="(" close=")" conjunction=",">#arrFolderKeepStateCd[]:VARCHAR#</iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="recordClssCd">
					A.record_clss_cd = #recordClssCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="recverSenderAgentNm">
					EXISTS (
						SELECT 1 FROM TB_RDRECORDCREAT Z
						WHERE Z.record_center_id=A.record_center_id
						AND Z.record_id=A.record_id
						AND Z.agent_type_cd IN ('08','09')
						AND Z.agent_nm LIKE #recverSenderAgentNm:VARCHAR#
					)
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="openDivCd">
					A.open_div_cd = #openDivCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="prodTypeCd">
<!-- 					<isEqual property="prodTypeCd" compareValue="0"> -->
<!-- 						A.record_reg_div_cd IN ('1','3','5','6','8') -->
<!-- 					</isEqual> -->
<!-- 					<isEqual property="prodTypeCd" compareValue="1"> -->
<!-- 						A.record_reg_div_cd IN ('2','4','7') -->
<!-- 					</isEqual> -->
					NVL(A.prod_type_cd, (CASE WHEN A.record_reg_div_cd IN ('1','3','5','6','7','8') THEN '0' ELSE '1' END)) = #prodTypeCd:VARCHAR#
				</isNotEmpty>
			</dynamic>
			)
		)
	</select>
	<!-- 20150805 김경수 create_sys_cd = '04' (통합온나라)일 경우 규격변경 -->
	<select id="findDetailsRecordPagedList_union" parameterClass="rms.srch.srch.domain.DetailsRecord" resultMap="findDetailsRecordPagedList-result">
		SELECT E.record_center_id
			, E.folder_org_cd
			, E.record_org_cd
			, E.folder_id
			, E.record_id
			, E.folder_title
			, E.title
			, (SELECT Z.org_nm FROM TB_STORG Z WHERE Z.record_center_id=E.record_center_id AND Z.org_cd=E.record_org_cd) org_nm
			, (SELECT Z.org_abbr_nm FROM TB_STORG Z WHERE Z.record_center_id=E.record_center_id AND Z.org_cd=E.record_org_cd) org_abbr_nm
			, SUBSTR(E.creat_reg_dtime,0,8) creat_reg_dtime
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD03' AND Z.com_cd=E.record_detl_type_cd) record_detl_type_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD05' AND Z.com_cd=E.open_div_cd) open_div_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD23' AND Z.com_cd=E.erecord_flag) erecord_flag_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD17' AND Z.com_cd=E.creat_sys_cd) creat_sys_nm
			, (DECODE(SUBSTR(E.spcl_record_type,1,1),'N','','Y',(SELECT com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='1'))
				||DECODE(SUBSTR(E.spcl_record_type,2,1),'N','','Y',(SELECT ','||com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='2'))
				||DECODE(SUBSTR(E.spcl_record_type,3,1),'N','','Y',(SELECT ','||com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='3'))
				||DECODE(SUBSTR(E.spcl_record_type,4,1),'N','','Y',(SELECT ','||com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='4'))
				||DECODE(SUBSTR(E.spcl_record_type,5,1),'N','','Y',(SELECT ','||com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='5'))) spcl_record_type_nm
			, E.scan_fin_flag
			, E.folder_keep_state_cd
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD32' AND Z.com_cd=E.folder_keep_state_cd) folder_keep_state_nm
			, E.creat_sys_cd
			, E.scan_prog_state_cd
			, E.oper_read_range_cd
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD53' AND Z.com_cd=E.oper_read_range_cd) oper_read_range_nm
		    , (CASE WHEN #sesUserDiv:VARCHAR# = '3' AND E.record_center_id = (SELECT Z.record_center_id FROM TB_STUSER Z WHERE Z.USER_ID = #sesUserId:VARCHAR#) THEN 1
					WHEN E.oper_read_range_cd='01' THEN 1
					<isEqual property="orgUserAccsType" compareValue="1">
					WHEN (E.oper_read_range_cd='02' AND #sesOrgCd:VARCHAR# = (SELECT B.CUR_KEEP_ORG_CD FROM TB_RDFOLDER B WHERE B.folder_id=E.folder_id)) THEN 1
					</isEqual>
					<isEqual property="orgUserAccsType" compareValue="2">
					WHEN #sesOrgCd:VARCHAR# = (SELECT B.CUR_KEEP_ORG_CD FROM TB_RDFOLDER B WHERE B.folder_id=E.folder_id) THEN 1
					</isEqual>
		            WHEN (SELECT COUNT(1) FROM TB_RDRECORDACCS Z WHERE Z.record_center_id=E.record_center_id AND Z.record_id=E.record_id AND Z.accs_type_cd='2' AND Z.accs_dept_cd=#sesOrgCd:VARCHAR#) > 0 THEN 1 
		            WHEN (SELECT COUNT(1) FROM TB_RDRECORDACCS Z WHERE Z.record_center_id=E.record_center_id AND Z.record_id=E.record_id AND Z.accs_type_cd='1' AND Z.accs_user_id=#sesUserId:VARCHAR#) > 0 THEN 1
		            WHEN (SELECT COUNT(1) FROM TB_RDRECORDREADDETL Z WHERE Z.record_center_id in (select record_center_id from tb_stuser where user_id = #sesUserId:VARCHAR#) AND Z.record_id=E.record_id AND Z.read_aprov_cd='2' AND EXISTS (SELECT 1 FROM TB_RDREADREQ Y WHERE Y.record_center_id=Z.record_center_id AND Y.read_reqno=Z.read_reqno AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN Y.read_start_ymd AND Y.read_close_ymd AND Y.read_user_id=#sesUserId:VARCHAR#)) > 0 THEN 1
		            ELSE 0
		       END) accs_flag
		    , (CASE WHEN (E.record_detl_type_cd='01' AND E.prod_type_cd='1')
		            THEN (SELECT Z.agent_nm FROM TB_RDRECORDCREAT Z WHERE Z.record_center_id=E.record_center_id AND Z.record_id=E.record_id AND Z.agent_sno=(SELECT MIN(agent_sno) FROM TB_RDRECORDCREAT Y WHERE Y.record_center_id=Z.record_center_id AND Y.record_id=Z.record_id AND Y.agent_type_cd='28'))
		        	WHEN (E.record_detl_type_cd='02' OR E.record_detl_type_cd='03')
		            THEN (SELECT Z.agent_nm FROM TB_RDRECORDCREAT Z WHERE Z.record_center_id=E.record_center_id AND Z.record_id=E.record_id AND Z.agent_sno=(SELECT MIN(agent_sno) FROM TB_RDRECORDCREAT Y WHERE Y.record_center_id=Z.record_center_id AND Y.record_id=Z.record_id AND Y.agent_type_cd='06'))
		        	WHEN E.record_detl_type_cd='04'
		            THEN (SELECT Z.agent_nm FROM TB_RDRECORDCREAT Z WHERE Z.record_center_id=E.record_center_id AND Z.record_id=E.record_id AND Z.agent_sno=(SELECT MIN(agent_sno) FROM TB_RDRECORDCREAT Y WHERE Y.record_center_id=Z.record_center_id AND Y.record_id=Z.record_id AND Y.agent_type_cd='07'))
		        	WHEN E.creat_sys_cd='03'
		            THEN (SELECT Z.agent_nm FROM TB_RDRECORDCREAT Z WHERE Z.record_center_id=E.record_center_id AND Z.record_id=E.record_id AND Z.agent_sno=(SELECT MIN(agent_sno) FROM TB_RDRECORDCREAT Y WHERE Y.record_center_id=Z.record_center_id AND Y.record_id=Z.record_id AND Y.agent_type_cd='01'))
		       		ELSE (SELECT Z.agent_nm FROM TB_RDRECORDCREAT Z WHERE Z.record_center_id=E.record_center_id AND Z.record_id=E.record_id AND Z.agent_sno=(SELECT MIN(agent_sno) FROM TB_RDRECORDCREAT Y WHERE Y.record_center_id=Z.record_center_id AND Y.record_id=Z.record_id AND Y.agent_type_cd='02'))
		       END) duty_chrgr_nm
		     , E.efile_del_flag
		     , E.prod_type_cd
       		 , (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd = 'RD02' AND Z.com_cd = E.record_reg_div_cd) record_reg_div_nm
       		 , E.folder_key
       		 , E.ho_no
       		 , E.creat_yyyy, E.creat_reg_no, E.dtch_reg_no, E.creat_sys_record_id, E.record_detl_type_cd, E.doc_no
       		 , SUBSTR(E.creat_reg_no, 8, 6) creat_reg_no_sub
		FROM (
			SELECT D.*
			FROM (
				SELECT ROWNUM AS rnum
					, C.*
				FROM (
					(
					SELECT
						<dynamic>
							<isEqual property="checkParam" compareValue="Y">
								/*+ use_merge(k)*/
							</isEqual>
							<isNotEqual property="checkParam" compareValue="Y">
								<isEmpty property="order">
									/*+ index_desc(A TB_RDRECORD_IX09) */ 
								</isEmpty>
								<isEqual property="order" compareValue="0">
									/*+ index_desc(A TB_RDRECORD_IX09) */ 
								</isEqual>
								<isEqual property="order" compareValue="1">
									/*+ index(A TB_RDRECORD_IX09) */ 
								</isEqual>
								<isEqual property="order" compareValue="2">
									/*+ index(A TB_RDRECORD_IX08) */ 
								</isEqual>
							</isNotEqual>
						</dynamic> 
					      A.record_center_id
						, A.org_cd AS record_org_cd
						, A.folder_id
						, A.record_id
						, A.title
						, A.creat_reg_dtime
						, A.creat_reg_no
						, A.record_detl_type_cd
						, A.open_div_cd
						, A.erecord_flag
						, A.creat_sys_cd
						, A.creat_yyyy
						, A.doc_no
						, A.old_record_docno
						, A.spcl_record_type
						, A.scan_fin_flag
						, A.oper_read_range_cd
						, A.duty_chrgr_nm
						, A.record_clss_cd
						, A.record_reg_div_cd
						, A.dtch_reg_no
						, A.creat_sys_record_id
<!-- 						, (CASE WHEN A.record_reg_div_cd IN ('1','3','5','6','8') THEN 0 ELSE 1 END) prod_type_cd -->
						, (CASE WHEN A.prod_type_cd is not null THEN A.prod_type_cd ELSE (CASE WHEN A.record_reg_div_cd IN ('1','3','5','6','7','8') THEN '0' ELSE '1' END) END) prod_type_cd
						, K.org_cd               as folder_org_cd
						, K.cur_keep_org_cd      as folder_cur_keep_org_cd 
						, K.title                as folder_title
						, K.oper_read_range_cd   as folder_read_range_cd
						, K.clss_id              as clss_id
						, K.new_clss_id          as new_clss_id
						, K.scan_prog_state_cd   as scan_prog_state_cd
						, K.folder_keep_state_cd as folder_keep_state_cd
						, K.efile_del_flag	     as efile_del_flag
						, K.creat_sys_cd||'-'||K.org_cd||'-'||K.clss_id||'-'||K.creat_yyyy||'-'||K.folder_reg_seq AS folder_key
						, K.ho_no
					FROM  TB_RDRECORD A
						, TB_RDFOLDER K
					WHERE A.record_center_id = K.record_center_id
					AND   A.folder_id = K.folder_id
					AND   A.record_center_id = #recordCenterId:VARCHAR#
					<dynamic>
						<isNotEmpty prepend="AND" property="creatSysCd">
							A.creat_sys_cd = #creatSysCd:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="orgCd">
							<isEqual property="searchDivCd" compareValue="1">
								K.cur_keep_org_cd = #orgCd:VARCHAR#
							</isEqual>
							<isEqual property="searchDivCd" compareValue="2">
								A.org_cd = #orgCd:VARCHAR#
							</isEqual>							
						</isNotEmpty>
						<isEmpty property="orgCd">
							<isNotEmpty prepend="AND" property="orgNm">
								<isEqual property="searchDivCd" compareValue="1">
									K.cur_keep_org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
								</isEqual>
								<isEqual property="searchDivCd" compareValue="2">
									A.org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
								</isEqual>
							</isNotEmpty>
						</isEmpty>
						<isNotEmpty prepend="AND" property="recordDetlTypeCd">
							A.record_detl_type_cd = #recordDetlTypeCd:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="creatRegDtimeStart">
							<isNotEmpty property="creatRegDtimeEnd">
								(A.creat_reg_dtime BETWEEN #creatRegDtimeStart:VARCHAR#||'000000' AND #creatRegDtimeEnd:VARCHAR#||'240000')
							</isNotEmpty>
							<isEmpty property="creatRegDtimeEnd">
								A.creat_reg_dtime <![CDATA[>=]]> #creatRegDtimeStart:VARCHAR#||'000000'
							</isEmpty>
						</isNotEmpty>
						<isEmpty prepend="AND" property="creatRegDtimeStart">
							<isNotEmpty property="creatRegDtimeEnd">
								A.creat_reg_dtime <![CDATA[<=]]> #creatRegDtimeEnd:VARCHAR#||'240000'
							</isNotEmpty>
						</isEmpty>
						<isNotEmpty prepend="AND" property="erecordFlag">
							A.erecord_flag = #erecordFlag:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="arrTitle">
							<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">A.title LIKE #arrTitle[]:VARCHAR#</iterate>
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="innerTitle">
							A.title LIKE #innerTitle:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="oldRecordDocno">
							(A.doc_no LIKE #oldRecordDocno:VARCHAR# OR A.old_record_docno LIKE #oldRecordDocno:VARCHAR#)
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="keywd">
							A.record_id IN (SELECT record_id FROM TB_RDRECORDKEYWD WHERE record_center_id=#recordCenterId:VARCHAR# AND keywd LIKE #keywd:VARCHAR#)
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="spclRecordType">
							<isEqual property="spclRecordType" compareValue="1">
								A.spcl_record_type = 'YNNNN'
							</isEqual>
							<isEqual property="spclRecordType" compareValue="2">
						    	A.spcl_record_type = 'NYNNN'
						    </isEqual>
						    <isEqual property="spclRecordType" compareValue="3">
								A.spcl_record_type = 'NNYNN'
							</isEqual>
							<isEqual property="spclRecordType" compareValue="4">
						    	A.spcl_record_type = 'NNNYN'
						    </isEqual>	
						    <isEqual property="spclRecordType" compareValue="5">
						    	A.spcl_record_type = 'NNNNY'
						    </isEqual>
						</isNotEmpty>
						<isNotEqual property="readRangType" compareValue="1">
							<isNotEqual prepend="AND" property="sesUserDiv" compareValue="3">
							    A.oper_read_range_cd != '03' AND K.oper_read_range_cd != '03'
							</isNotEqual>
						</isNotEqual>
						<isNotEmpty prepend="AND" property="operReadRangeCd">
							A.oper_read_range_cd = #operReadRangeCd:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="clssId">
						    <isEqual property="clssDivCd" compareValue="1">
								(K.clss_id = #clssId:VARCHAR# OR K.new_clss_id = #clssId:VARCHAR#)
							</isEqual>
							<isNotEqual property="clssDivCd" compareValue="1">
						    	K.clss_id = #clssId:VARCHAR#
						    </isNotEqual>
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="scanProgStateCd">
							<isEqual property="scanProgStateCd" compareValue="5">
								K.scan_prog_state_cd = #scanProgStateCd:VARCHAR#
							</isEqual>
							<isEqual property="scanProgStateCd" compareValue="1">
						    	(K.scan_prog_state_cd IS NULL OR K.scan_prog_state_cd IN ('1','2','3','4'))
						    </isEqual>
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="arrFolderKeepStateCd">
							K.folder_keep_state_cd IN <iterate property="arrFolderKeepStateCd" open="(" close=")" conjunction=",">#arrFolderKeepStateCd[]:VARCHAR#</iterate>
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="recordClssCd">
							A.record_clss_cd = #recordClssCd:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="recverSenderAgentNm">
							EXISTS (
								SELECT 1 FROM TB_RDRECORDCREAT Z
								WHERE Z.record_center_id=A.record_center_id
								AND Z.record_id=A.record_id
								AND Z.agent_type_cd IN ('08','09')
								AND Z.agent_nm LIKE #recverSenderAgentNm:VARCHAR#
							)
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="openDivCd">
							A.open_div_cd = #openDivCd:VARCHAR#
						</isNotEmpty>	
						<isNotEmpty prepend="AND" property="prodTypeCd">
<!-- 							<isEqual property="prodTypeCd" compareValue="0"> -->
<!-- 						    	A.record_reg_div_cd IN ('1','3','5','6','8') -->
<!-- 						    </isEqual> -->
<!-- 							<isEqual property="prodTypeCd" compareValue="1"> -->
<!-- 						    	A.record_reg_div_cd IN ('2','4','7') -->
<!-- 						    </isEqual> -->
						    NVL(A.prod_type_cd, (CASE WHEN A.record_reg_div_cd IN ('1','3','5','6','7','8') THEN '0' ELSE '1' END)) = #prodTypeCd:VARCHAR#
						</isNotEmpty>
					</dynamic>
					)
					UNION ALL
					(
					SELECT
						<dynamic>
							<isEqual property="checkParam" compareValue="Y">
								/*+ use_merge(k)*/
							</isEqual>
							<isNotEqual property="checkParam" compareValue="Y">
								<isEmpty property="order">
									/*+ index_desc(A TB_RDRECORD_IX09) */ 
								</isEmpty>
								<isEqual property="order" compareValue="0">
									/*+ index_desc(A TB_RDRECORD_IX09) */ 
								</isEqual>
								<isEqual property="order" compareValue="1">
									/*+ index(A TB_RDRECORD_IX09) */ 
								</isEqual>
								<isEqual property="order" compareValue="2">
									/*+ index(A TB_RDRECORD_IX08) */ 
								</isEqual>
							</isNotEqual>
						</dynamic> 
					      A.record_center_id
						, A.org_cd AS record_org_cd
						, A.folder_id
						, A.record_id
						, A.title
						, A.creat_reg_dtime
						, A.creat_reg_no
						, A.record_detl_type_cd
						, A.open_div_cd
						, A.erecord_flag
						, A.creat_sys_cd
						, A.creat_yyyy
						, A.doc_no
						, A.old_record_docno
						, A.spcl_record_type
						, '' AS scan_fin_flag
						, A.oper_read_range_cd
						, A.duty_chrgr_nm
						, A.record_clss_cd
						, A.record_reg_div_cd
						, A.dtch_reg_no
						, A.creat_sys_record_id
<!-- 						, (CASE WHEN A.record_reg_div_cd IN ('1','3','5','6','8') THEN 0 ELSE 1 END) prod_type_cd -->
						, (CASE WHEN A.prod_type_cd is not null THEN A.prod_type_cd ELSE (CASE WHEN A.record_reg_div_cd IN ('1','3','5','6','7','8') THEN '0' ELSE '1' END) END) prod_type_cd
						, K.org_cd               as folder_org_cd
						, K.cur_keep_org_cd      as folder_cur_keep_org_cd 
						, K.title                as folder_title
						, K.oper_read_range_cd   as folder_read_range_cd
						, K.clss_id              as clss_id
						, K.new_clss_id          as new_clss_id
						, K.scan_prog_state_cd   as scan_prog_state_cd
						, K.folder_keep_state_cd as folder_keep_state_cd
						, K.efile_del_flag	     as efile_del_flag
						, K.creat_sys_cd||'-'||K.org_cd||'-'||K.clss_id||'-'||K.creat_yyyy||'-'||K.folder_reg_seq AS folder_key
						, K.ho_no
					FROM  TB_NKRECORD A
						, TB_NKFOLDER K
					WHERE A.record_center_id = K.record_center_id
					AND   A.folder_id = K.folder_id
					AND   A.record_center_id = #recordCenterId:VARCHAR#
					<dynamic>
						<isNotEmpty prepend="AND" property="creatSysCd">
							A.creat_sys_cd = #creatSysCd:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="orgCd">
							<isEqual property="searchDivCd" compareValue="1">
								K.cur_keep_org_cd = #orgCd:VARCHAR#
							</isEqual>
							<isEqual property="searchDivCd" compareValue="2">
								A.org_cd = #orgCd:VARCHAR#
							</isEqual>							
						</isNotEmpty>
						<isEmpty property="orgCd">
							<isNotEmpty prepend="AND" property="orgNm">
								<isEqual property="searchDivCd" compareValue="1">
									K.cur_keep_org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
								</isEqual>
								<isEqual property="searchDivCd" compareValue="2">
									A.org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
								</isEqual>
							</isNotEmpty>
						</isEmpty>
						<isNotEmpty prepend="AND" property="recordDetlTypeCd">
							A.record_detl_type_cd = #recordDetlTypeCd:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="bmsRecordDetlTypeCd">
							A.bms_record_detl_type_cd = #bmsRecordDetlTypeCd:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="bmsRecordDetlSortCd">
							A.bms_record_detl_sort_cd = #bmsRecordDetlSortCd:VARCHAR#
						</isNotEmpty>	
						<isNotEmpty prepend="AND" property="creatRegDtimeStart">
							<isNotEmpty property="creatRegDtimeEnd">
								(A.creat_reg_dtime BETWEEN #creatRegDtimeStart:VARCHAR#||'000000' AND #creatRegDtimeEnd:VARCHAR#||'240000')
							</isNotEmpty>
							<isEmpty property="creatRegDtimeEnd">
								A.creat_reg_dtime <![CDATA[>=]]> #creatRegDtimeStart:VARCHAR#||'000000'
							</isEmpty>
						</isNotEmpty>
						<isEmpty prepend="AND" property="creatRegDtimeStart">
							<isNotEmpty property="creatRegDtimeEnd">
								A.creat_reg_dtime <![CDATA[<=]]> #creatRegDtimeEnd:VARCHAR#||'240000'
							</isNotEmpty>
						</isEmpty>
						<isNotEmpty prepend="AND" property="erecordFlag">
							A.erecord_flag = #erecordFlag:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="arrTitle">
							<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">A.title LIKE #arrTitle[]:VARCHAR#</iterate>
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="innerTitle">
							A.title LIKE #innerTitle:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="oldRecordDocno">
							(A.doc_no LIKE #oldRecordDocno:VARCHAR# OR A.old_record_docno LIKE #oldRecordDocno:VARCHAR#)
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="keywd">
							A.record_id IN (SELECT record_id FROM TB_NKRECORDKEYWD WHERE record_center_id=#recordCenterId:VARCHAR# AND keywd LIKE #keywd:VARCHAR#)
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="spclRecordType">
							<isEqual property="spclRecordType" compareValue="1">
								A.spcl_record_type = 'YNNNN'
							</isEqual>
							<isEqual property="spclRecordType" compareValue="2">
						    	A.spcl_record_type = 'NYNNN'
						    </isEqual>
						    <isEqual property="spclRecordType" compareValue="3">
								A.spcl_record_type = 'NNYNN'
							</isEqual>
							<isEqual property="spclRecordType" compareValue="4">
						    	A.spcl_record_type = 'NNNYN'
						    </isEqual>	
						    <isEqual property="spclRecordType" compareValue="5">
						    	A.spcl_record_type = 'NNNNY'
						    </isEqual>
						</isNotEmpty>
						<isNotEqual property="readRangType" compareValue="1">
							<isNotEqual prepend="AND" property="sesUserDiv" compareValue="3">
							    A.oper_read_range_cd != '03' AND K.oper_read_range_cd != '03'
							</isNotEqual>
						</isNotEqual>
						<isNotEmpty prepend="AND" property="operReadRangeCd">
							A.oper_read_range_cd = #operReadRangeCd:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="clssId">
						    <isEqual property="clssDivCd" compareValue="1">
								(K.clss_id = #clssId:VARCHAR# OR K.new_clss_id = #clssId:VARCHAR#)
							</isEqual>
							<isNotEqual property="clssDivCd" compareValue="1">
						    	K.clss_id = #clssId:VARCHAR#
						    </isNotEqual>
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="scanProgStateCd">
							<isEqual property="scanProgStateCd" compareValue="5">
								K.scan_prog_state_cd = #scanProgStateCd:VARCHAR#
							</isEqual>
							<isEqual property="scanProgStateCd" compareValue="1">
						    	(K.scan_prog_state_cd IS NULL OR K.scan_prog_state_cd IN ('1','2','3','4'))
						    </isEqual>
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="arrFolderKeepStateCd">
							K.folder_keep_state_cd IN <iterate property="arrFolderKeepStateCd" open="(" close=")" conjunction=",">#arrFolderKeepStateCd[]:VARCHAR#</iterate>
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="recordClssCd">
							A.record_clss_cd = #recordClssCd:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="recverSenderAgentNm">	<!-- NK 는 보관하지 않음 -->
							1 != 1
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="openDivCd">
							A.open_div_cd = #openDivCd:VARCHAR#
						</isNotEmpty>	
						<isNotEmpty prepend="AND" property="prodTypeCd">
<!-- 							<isEqual property="prodTypeCd" compareValue="0"> -->
<!-- 						    	A.record_reg_div_cd IN ('1','3','5','6','8') -->
<!-- 						    </isEqual> -->
<!-- 							<isEqual property="prodTypeCd" compareValue="1"> -->
<!-- 						    	A.record_reg_div_cd IN ('2','4','7') -->
<!-- 						    </isEqual> -->
						    NVL(A.prod_type_cd, (CASE WHEN A.record_reg_div_cd IN ('1','3','5','6','7','8') THEN '0' ELSE '1' END)) = #prodTypeCd:VARCHAR#
						</isNotEmpty>
					</dynamic>
					)
					<isEqual property="checkParam" compareValue="Y">
						<isEmpty property="order">
							ORDER BY record_center_id, creat_reg_dtime DESC, creat_reg_no DESC
						</isEmpty>
						<isEqual property="order" compareValue="0">
							ORDER BY record_center_id, creat_reg_dtime DESC, creat_reg_no DESC
						</isEqual>
						<isEqual property="order" compareValue="1">
							ORDER BY record_center_id, creat_reg_dtime, creat_reg_no
						</isEqual>
						<isEqual property="order" compareValue="2">
							ORDER BY record_center_id, title
						</isEqual>
					</isEqual>
				) C
				WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
			) D
			WHERE D.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
		) E
		ORDER BY E.rnum
	</select>

	<!--
		조건별검색_기록물건
		: 기록물건 질의저장 목록 조회
	-->
	<resultMap id="findDetailsRecordSearchParamPagedList-result" class="rms.srch.srch.domain.RecordQuery">
		<result property="userId"				column="user_id" />
		<result property="recordQueryId"		column="record_query_id" />
		<result property="recordQueryNm"		column="record_query_nm" />
		<result property="creatSysCd"			column="creat_sys_cd" />
		<result property="creatOrgCd"			column="creat_org_cd" />
		<result property="creatOrgNm"			column="creat_org_nm" />
		<result property="recordDetlTypeCd"		column="record_detl_type_cd" />
		<result property="recordTitle"			column="record_title" />
		<result property="workUserId"			column="work_user_id" />
		<result property="regDtime"				column="reg_dtime" />
		<result property="erecordFlag"			column="erecord_flag" />
		<result property="scanProgStateCd"		column="scan_prog_state_cd" />
		<result property="spclRecordType"		column="spcl_record_type" />
		<result property="scanFinFlag"			column="scan_fin_flag" />
		<result property="folderKeepStateCd"	column="folder_keep_state_cd" />
		<result property="oldRecordDocno"		column="old_record_docno" />
		<result property="recordClssCd"			column="record_clss_cd" />
		<result property="openDivCd"			column="open_div_cd" />
		<result property="creatRegDtimeFrom"	column="creat_reg_dtime_from" />
		<result property="creatRegDtimeTo"		column="creat_reg_dtime_to" />
		<result property="clssDivCd"			column="clss_div_cd" />
		<result property="clssId"				column="clss_id" />
		<result property="clssNm"				column="clss_nm" />
		<result property="prodTypeCd"			column="prod_type_cd" />
		<result property="operReadRangeCd"		column="oper_read_range_cd" />
		<result property="recvSendAgentNm"		column="recv_send_agent_nm" />
		<result property="innerTitle"			column="inner_title" />
		<result property="searchDivCd"			column="search_div_cd" />
		<result property="keywd"				column="keywd"		jdbcType="CLOB"	javaType="java.lang.String" />
	</resultMap>
	<select id="countDetailsRecordSearchParamPagedList" parameterClass="rms.srch.srch.domain.RecordQuery" resultClass="java.lang.Long">
		SELECT COUNT(1)
		FROM  TB_STRECORDQUERY A
		WHERE A.user_id = #userId:VARCHAR#
	</select>
	<select id="findDetailsRecordSearchParamPagedList" parameterClass="rms.srch.srch.domain.RecordQuery" resultMap="findDetailsRecordSearchParamPagedList-result">
		SELECT E.user_id
			, E.record_query_id
			, E.record_query_nm
			, E.creat_sys_cd
			, E.creat_org_cd
			, (SELECT MAX(Z.org_nm) FROM TB_STORG Z WHERE Z.org_cd=E.creat_org_cd) AS creat_org_nm
			, E.record_detl_type_cd
			, E.record_title
			, E.work_user_id
			, E.reg_dtime
			, E.erecord_flag
			, E.scan_prog_state_cd
			, E.spcl_record_type
			, E.scan_fin_flag
			, E.folder_keep_state_cd
			, E.old_record_docno
			, E.record_clss_cd
			, E.open_div_cd
			, E.creat_reg_dtime_from
			, E.creat_reg_dtime_to
			, E.clss_div_cd
			, E.clss_id
			, (CASE WHEN E.clss_div_cd='1' THEN (SELECT Z.bis_clss_nm FROM TB_ZZBISCLSS Z WHERE Z.bis_clss_id=E.clss_id)
					WHEN E.clss_div_cd='2' THEN (SELECT MAX(Z.unit_nm) FROM TB_ZZUNIT Z WHERE Z.unit_cd=E.clss_id)
					ELSE '' END) AS clss_nm
			, E.prod_type_cd
			, E.oper_read_range_cd
			, E.recv_send_agent_nm
			, E.inner_title
			, E.search_div_cd
			, E.keywd
		FROM (
			SELECT D.*
			FROM (
				SELECT ROWNUM AS rnum
					, C.*
				FROM (
					SELECT A.*
					FROM  TB_STRECORDQUERY A
					WHERE A.user_id = #userId:VARCHAR#
					ORDER BY A.user_id, A.record_query_id
				) C
				WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
			) D
			WHERE D.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
		) E
		ORDER BY E.rnum
	</select>

	<!-- 
		조건별검색_기록물건
		: 기록물건 검색조건 삭제(질의저장)
	 -->
	<delete id="deleteDetailsRecordSearchParam" parameterClass="rms.srch.srch.domain.RecordQuery">
		DELETE FROM TB_STRECORDQUERY
		WHERE user_id = #userId:VARCHAR#
		AND   record_query_id = #recordQueryId:VARCHAR#
	</delete>

	<!-- 
		조건별검색_기록물건
		: 기록물건 검색조건 저장(질의저장)
	 -->
	<insert id="createDetailsRecordSearchParam" parameterClass="rms.srch.srch.domain.RecordQuery">
		INSERT INTO TB_STRECORDQUERY
		(
			user_id, record_query_id, record_query_nm, creat_sys_cd, creat_org_cd
			, record_detl_type_cd, record_title, work_user_id, reg_dtime, erecord_flag
			, scan_prog_state_cd, spcl_record_type, scan_fin_flag, folder_keep_state_cd, old_record_docno
			, record_clss_cd, open_div_cd, creat_reg_dtime_from, creat_reg_dtime_to, clss_div_cd
			, clss_id, prod_type_cd, oper_read_range_cd, recv_send_agent_nm, inner_title
			, search_div_cd, keywd
		)
		VALUES
		(
			#userId:VARCHAR#, (SELECT NVL(MAX(TO_NUMBER(record_query_id)),0)+1 FROM TB_STRECORDQUERY WHERE user_id = #userId:VARCHAR#), #recordQueryNm:VARCHAR#, #creatSysCd:VARCHAR#, #orgCd:VARCHAR#
			, #recordDetlTypeCd:VARCHAR#, #title:VARCHAR#, #userId:VARCHAR#
			<!--cubrid , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'), #erecordFlag:VARCHAR#-->
			, TO_CHAR(sys_datetime, 'YYYYMMDDHH24MISS'), #erecordFlag:VARCHAR#
			, #scanProgStateCd:VARCHAR#, #spclRecordType:VARCHAR#, #scanProgStateCd:VARCHAR#, #folderKeepStateCd:VARCHAR#, #oldRecordDocno:VARCHAR#
			, #recordClssCd:VARCHAR#, #openDivCd:VARCHAR#, #creatRegDtimeFrom:VARCHAR#, #creatRegDtimeTo:VARCHAR#, #clssDivCd:VARCHAR#
			, #clssId:VARCHAR#, #prodTypeCd:VARCHAR#, #operReadRangeCd:VARCHAR#, #recverSenderAgentNm:VARCHAR#, #innerTitle:VARCHAR#
			, #searchDivCd:VARCHAR#, #keywd:CLOB#
		)
	</insert>

	<!--
		조건별검색_기간별기록물건
		: 기록물건 목록 조회
	-->
	<resultMap id="findDetailsTermRecordPagedList-result" class="rms.srch.srch.domain.DetailsRecord">
		<result property = "recordCenterId" 	column = "RECORD_CENTER_ID"     />
		<result property = "folderOrgCd" 		column = "FOLDER_ORG_CD"        /> 
		<result property = "recordOrgCd" 		column = "RECORD_ORG_CD"        /> 		
		<result property = "folderId" 			column = "FOLDER_ID"			/>
		<result property = "recordId" 			column = "RECORD_ID"			/>
		<result property = "folderTitle" 		column = "FOLDER_TITLE"			/>
		<result property = "title" 				column = "TITLE"				/>
		<result property = "orgNm" 				column = "ORG_NM"				/>
		<result property = "orgAbbrNm" 			column = "ORG_ABBR_NM"      	/>
		<result property = "creatRegDtime" 		column = "CREAT_REG_DTIME"		/>
		<result property = "recordDetlTypeNm" 	column = "RECORD_DETL_TYPE_NM"	/>
		<result property = "openDivNm" 			column = "OPEN_DIV_NM"			/>
		<result property = "erecordFlagNm" 		column = "ERECORD_FLAG_NM"		/>
		<result property = "creatSysNm" 		column = "CREAT_SYS_NM"			/>
		<result property = "spclRecordTypeNm" 	column = "SPCL_RECORD_TYPE_NM"	/>
		<result property = "scanFinFlag" 	    column = "SCAN_FIN_FLAG"		/>
		<result property = "folderKeepStateCd" 	column = "FOLDER_KEEP_STATE_CD"	/>
		<result property = "folderKeepStateNm" 	column = "FOLDER_KEEP_STATE_NM"	/>
		<result property = "creatSysCd" 	    column = "CREAT_SYS_CD"			/>
		<result property = "scanProgStateCd" 	column = "SCAN_PROG_STATE_CD"	/>
		<result property = "folderReadRangeCd" 	column = "FOLDER_READ_RANGE_CD"	/>
		<result property = "operReadRangeCd" 	column = "OPER_READ_RANGE_CD"	/>
		<result property = "operReadRangeNm"    column = "OPER_READ_RANGE_NM"	/>
		<result property = "folderAccsFlag" 	column = "FOLDER_ACCS_FLAG"		/>
		<result property = "accsFlag" 			column = "ACCS_FLAG"			/>
		<result property = "dutyChrgrNm" 		column = "DUTY_CHRGR_NM"		/>
		<result property = "efileDelFlag" 		column = "EFILE_DEL_FLAG"		/>
		<result property = "folderKey" 			column = "folder_key"			/>
		<result property = "hoNo" 				column = "ho_no"				/>
		<result property = "creatYyyy" 			column = "creat_yyyy"			/>
		<result property = "creatRegNo" 		column = "creat_reg_no"			/>
		<result property = "dtchRegNo" 			column = "dtch_reg_no"			/>
		<result property = "creatSysRecordId" 	column = "creat_sys_record_id"	/>
		<result property = "recordDetlTypeCd" 	column = "record_detl_type_cd"	/>
		<result property = "docNo" 				column = "doc_no"				/>
		<result property = "creatRegNoSub" 		column = "creat_reg_no_sub"		/>
		<result property = "prodTypeCd" 		column = "prod_type_cd"			/>
	</resultMap>
	<select id="countDetailsTermRecordPagedList" parameterClass="rms.srch.srch.domain.DetailsRecord" resultClass="java.lang.Long">
		SELECT COUNT(1)
		FROM (
			SELECT B.*
				,(SELECT Z.cur_keep_org_cd      FROM TB_RDFOLDER Z WHERE Z.record_center_id=B.record_center_id AND Z.folder_id=B.folder_id) AS folder_cur_keep_org_cd
				,(SELECT Z.folder_keep_state_cd FROM TB_RDFOLDER Z WHERE Z.record_center_id=B.record_center_id AND Z.folder_id=B.folder_id) AS folder_keep_state_cd
				,(SELECT Z.oper_read_range_cd   FROM TB_RDFOLDER Z WHERE Z.record_center_id=B.record_center_id AND Z.folder_id=B.folder_id) AS folder_read_range_cd
	        FROM TB_RDRECORD B
		) A
		WHERE A.record_center_id = #recordCenterId:VARCHAR#
		<dynamic>
			<isNotEmpty prepend="AND" property="creatSysCd">
				A.creat_sys_cd = #creatSysCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="orgCd">
				<isEqual property="searchDivCd" compareValue="1">
					A.folder_cur_keep_org_cd = #orgCd:VARCHAR#
				</isEqual>
				<isEqual property="searchDivCd" compareValue="2">
					A.org_cd = #orgCd:VARCHAR#
				</isEqual>							
			</isNotEmpty>
			<isEmpty property="orgCd">
				<isNotEmpty prepend="AND" property="orgNm">
					<isEqual property="searchDivCd" compareValue="1">
						A.folder_cur_keep_org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)					
					</isEqual>
					<isEqual property="searchDivCd" compareValue="2">
						A.org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
					</isEqual>
				</isNotEmpty>
			</isEmpty>
			<isNotEmpty prepend="AND" property="creatRegDtimeStart">
				<isNotEmpty property="creatRegDtimeEnd">
					(A.creat_reg_dtime BETWEEN #creatRegDtimeStart:VARCHAR#||'000000' AND #creatRegDtimeEnd:VARCHAR#||'240000')
				</isNotEmpty>
				<isEmpty property="creatRegDtimeEnd">
					A.creat_reg_dtime <![CDATA[>=]]> #creatRegDtimeStart:VARCHAR#||'000000'
				</isEmpty>
			</isNotEmpty>
			<isEmpty prepend="AND" property="creatRegDtimeStart">
				<isNotEmpty property="creatRegDtimeEnd">
					A.creat_reg_dtime <![CDATA[<=]]> #creatRegDtimeEnd:VARCHAR#||'240000'
				</isNotEmpty>
			</isEmpty>
			<isNotEmpty prepend="AND" property="arrTitle">
				<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">A.title LIKE #arrTitle[]:VARCHAR#</iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="innerTitle">
				A.title LIKE #innerTitle:VARCHAR#
			</isNotEmpty>
			<isNotEqual property="readRangType" compareValue="1">
				<isNotEqual prepend="AND" property="sesUserDiv" compareValue="3">
				    A.oper_read_range_cd != '03' AND A.folder_read_range_cd != '03'
				</isNotEqual>
			</isNotEqual>
			<isNotEmpty prepend="AND" property="arrFolderKeepStateCd">
				A.folder_keep_state_cd IN <iterate property="arrFolderKeepStateCd" open="(" close=")" conjunction=",">#arrFolderKeepStateCd[]:VARCHAR#</iterate>
			</isNotEmpty>
		</dynamic>
	</select>
	<select id="findDetailsTermRecordPagedList" parameterClass="rms.srch.srch.domain.DetailsRecord" resultMap="findDetailsTermRecordPagedList-result">
		SELECT E.record_center_id
			, E.folder_org_cd
			, E.record_org_cd
			, E.folder_id
			, E.record_id
			, E.folder_title
			, E.title
			, (SELECT Z.org_nm FROM TB_STORG Z WHERE Z.record_center_id=E.record_center_id AND Z.org_cd=E.record_org_cd) org_nm
			, (SELECT Z.org_abbr_nm FROM TB_STORG Z WHERE Z.record_center_id=E.record_center_id AND Z.org_cd=E.record_org_cd) org_abbr_nm
			, SUBSTR(E.creat_reg_dtime,0,8) creat_reg_dtime
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD03' AND Z.com_cd=E.record_detl_type_cd) record_detl_type_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD05' AND Z.com_cd=E.open_div_cd) open_div_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD23' AND Z.com_cd=E.erecord_flag) erecord_flag_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD17' AND Z.com_cd=E.creat_sys_cd) creat_sys_nm
			, (DECODE(SUBSTR(E.spcl_record_type,1,1),'N','','Y',(SELECT com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='1'))
				||DECODE(SUBSTR(E.spcl_record_type,2,1),'N','','Y',(SELECT ','||com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='2'))
				||DECODE(SUBSTR(E.spcl_record_type,3,1),'N','','Y',(SELECT ','||com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='3'))
				||DECODE(SUBSTR(E.spcl_record_type,4,1),'N','','Y',(SELECT ','||com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='4'))
				||DECODE(SUBSTR(E.spcl_record_type,5,1),'N','','Y',(SELECT ','||com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='5'))) SPCL_RECORD_TYPE_NM
			, E.scan_fin_flag
			, E.folder_keep_state_cd
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD32' AND Z.com_cd=E.folder_keep_state_cd) folder_keep_state_nm
			, E.creat_sys_cd
			, E.scan_prog_state_cd
			, E.oper_read_range_cd
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD53' AND Z.com_cd=E.oper_read_range_cd) oper_read_range_nm
			, E.folder_read_range_cd
		    , (CASE WHEN '3'=#sesUserDiv:VARCHAR# AND E.record_center_id = (SELECT Z.record_center_id FROM TB_STUSER Z WHERE Z.USER_ID = #sesUserId:VARCHAR#) THEN 1
					WHEN E.folder_read_range_cd='01' THEN 1
					<isEqual property="orgUserAccsType" compareValue="1">
					WHEN (E.folder_read_range_cd='02' AND E.folder_cur_keep_org_cd=#sesOrgCd:VARCHAR#) THEN 1
					</isEqual>
					<isEqual property="orgUserAccsType" compareValue="2">
					WHEN E.folder_cur_keep_org_cd=#sesOrgCd:VARCHAR# THEN 1
					</isEqual>
		            WHEN (SELECT COUNT(1) FROM TB_RDFOLDERACCS Z WHERE Z.record_center_id=E.record_center_id AND Z.folder_id=E.folder_id AND Z.accs_type_cd='2' AND Z.accs_dept_cd=#sesOrgCd:VARCHAR#) > 0 THEN 1 
		            WHEN (SELECT COUNT(1) FROM TB_RDFOLDERACCS Z WHERE Z.record_center_id=E.record_center_id AND Z.folder_id=E.folder_id AND Z.accs_type_cd='1' AND Z.accs_user_id=#sesUserId:VARCHAR#) > 0 THEN 1
		            ELSE 0
		       END) folder_accs_flag
		    , (CASE WHEN #sesUserDiv:VARCHAR# = '3' AND E.record_center_id = (SELECT Z.record_center_id FROM TB_STUSER Z WHERE Z.USER_ID = #sesUserId:VARCHAR#) THEN 1
					WHEN E.oper_read_range_cd='01' THEN 1
					<isEqual property="orgUserAccsType" compareValue="1">
					WHEN (E.oper_read_range_cd='02' AND #sesOrgCd:VARCHAR# = (SELECT B.CUR_KEEP_ORG_CD FROM TB_RDFOLDER B WHERE B.folder_id=E.folder_id)) THEN 1
					</isEqual>
					<isEqual property="orgUserAccsType" compareValue="2">
					WHEN #sesOrgCd:VARCHAR# = (SELECT B.CUR_KEEP_ORG_CD FROM TB_RDFOLDER B WHERE B.folder_id=E.folder_id) THEN 1
					</isEqual>
		            WHEN (SELECT COUNT(1) FROM TB_RDRECORDACCS Z WHERE Z.record_center_id=E.record_center_id AND Z.record_id=E.record_id AND Z.accs_type_cd='2' AND Z.accs_dept_cd=#sesOrgCd:VARCHAR#) > 0 THEN 1 
		            WHEN (SELECT COUNT(1) FROM TB_RDRECORDACCS Z WHERE Z.record_center_id=E.record_center_id AND Z.record_id=E.record_id AND Z.accs_type_cd='1' AND Z.accs_user_id=#sesUserId:VARCHAR#) > 0 THEN 1
		            ELSE 0
		       END) accs_flag
		    , E.duty_chrgr_nm
		    , E.efile_del_flag
		    , E.prod_type_cd
       		, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd = 'RD02' AND Z.com_cd = E.record_reg_div_cd) record_reg_div_nm
       		, E.folder_key
       		, E.ho_no
       		, E.creat_yyyy, E.creat_reg_no, E.dtch_reg_no, E.creat_sys_record_id, E.record_detl_type_cd, E.doc_no
       		, SUBSTR(E.creat_reg_no, 8, 6) creat_reg_no_sub
		FROM (
			SELECT D.*
			FROM (
				SELECT ROWNUM AS rnum
					, C.*
				FROM (
					SELECT B.*
					FROM (
						SELECT
							<dynamic>
								<isNotEqual property="checkParam" compareValue="Y">
									<isEmpty property="order">
										/*+ index_desc(A TB_RDRECORD_IX09) */ 
									</isEmpty>
									<isEqual property="order" compareValue="0">
										/*+ index_desc(A TB_RDRECORD_IX09) */ 
									</isEqual>
									<isEqual property="order" compareValue="1">
										/*+ index(A TB_RDRECORD_IX09) */ 
									</isEqual>
									<isEqual property="order" compareValue="2">
										/*+ index(A TB_RDRECORD_IX08) */ 
									</isEqual>
								</isNotEqual>
							</dynamic>
						      A.record_center_id
							, A.org_cd AS record_org_cd
							, A.folder_id
							, A.record_id
							, A.title
							, A.creat_reg_dtime
							, A.record_detl_type_cd
							, A.open_div_cd
							, A.erecord_flag
							, A.creat_sys_cd
							, A.creat_yyyy
							, A.doc_no
							, A.old_record_docno
							, A.spcl_record_type
							, A.scan_fin_flag
							, A.oper_read_range_cd
							, A.duty_chrgr_nm
							, A.record_clss_cd
							, A.record_reg_div_cd
							, A.creat_reg_no
							, A.dtch_reg_no
							, A.creat_sys_record_id
<!-- 							, (CASE WHEN A.record_reg_div_cd IN ('1','3','5','6','8') THEN 0 ELSE 1 END) prod_type_cd -->
							, (CASE WHEN A.prod_type_cd is not null THEN A.prod_type_cd ELSE (CASE WHEN A.record_reg_div_cd IN ('1','3','5','6','7','8') THEN '0' ELSE '1' END) END) prod_type_cd
							, (SELECT org_cd               FROM TB_RDFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) folder_org_cd
							, (SELECT cur_keep_org_cd      FROM TB_RDFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) folder_cur_keep_org_cd
							, (SELECT title                FROM TB_RDFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) folder_title
							, (SELECT oper_read_range_cd   FROM TB_RDFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) folder_read_range_cd
							, (SELECT clss_id              FROM TB_RDFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) clss_id
							, (SELECT new_clss_id          FROM TB_RDFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) new_clss_id
							, (SELECT scan_prog_state_cd   FROM TB_RDFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) scan_prog_state_cd
							, (SELECT folder_keep_state_cd FROM TB_RDFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) folder_keep_state_cd
							, (SELECT efile_del_flag	   FROM TB_RDFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) efile_del_flag
							, (SELECT Z.creat_sys_cd||'-'||Z.org_cd||'-'||Z.clss_id||'-'||Z.creat_yyyy||'-'||Z.folder_reg_seq FROM TB_RDFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) AS folder_key
							, (SELECT ho_no	   FROM TB_RDFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) ho_no
						FROM TB_RDRECORD A
						<dynamic>
							<isEqual property="checkParam" compareValue="Y">
								<isEmpty property="order">
									ORDER BY A.record_center_id, A.creat_reg_dtime DESC, A.creat_reg_no DESC
								</isEmpty>
								<isEqual property="order" compareValue="0">
									ORDER BY A.record_center_id, A.creat_reg_dtime DESC, A.creat_reg_no DESC
								</isEqual>
								<isEqual property="order" compareValue="1">
									ORDER BY A.record_center_id, A.creat_reg_dtime, A.creat_reg_no
								</isEqual>
								<isEqual property="order" compareValue="2">
									ORDER BY A.record_center_id, A.title
								</isEqual>
							</isEqual>
						</dynamic>
					) B
					WHERE B.record_center_id = #recordCenterId:VARCHAR#
					<dynamic>
						<isNotEmpty prepend="AND" property="creatSysCd">
							B.creat_sys_cd = #creatSysCd:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="orgCd">
							<isEqual property="searchDivCd" compareValue="1">
								B.folder_cur_keep_org_cd = #orgCd:VARCHAR#
							</isEqual>
							<isEqual property="searchDivCd" compareValue="2">
								B.record_org_cd = #orgCd:VARCHAR#
							</isEqual>							
						</isNotEmpty>
						<isEmpty property="orgCd">
							<isNotEmpty prepend="AND" property="orgNm">
								<isEqual property="searchDivCd" compareValue="1">
									B.folder_cur_keep_org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
								</isEqual>
								<isEqual property="searchDivCd" compareValue="2">
									B.record_org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
								</isEqual>
							</isNotEmpty>
						</isEmpty>
						<isNotEmpty prepend="AND" property="creatRegDtimeStart">
							<isNotEmpty property="creatRegDtimeEnd">
								(B.creat_reg_dtime BETWEEN #creatRegDtimeStart:VARCHAR#||'000000' AND #creatRegDtimeEnd:VARCHAR#||'240000')
							</isNotEmpty>
							<isEmpty property="creatRegDtimeEnd">
								B.creat_reg_dtime <![CDATA[>=]]> #creatRegDtimeStart:VARCHAR#||'000000'
							</isEmpty>
						</isNotEmpty>
						<isEmpty prepend="AND" property="creatRegDtimeStart">
							<isNotEmpty property="creatRegDtimeEnd">
								B.creat_reg_dtime <![CDATA[<=]]> #creatRegDtimeEnd:VARCHAR#||'240000'
							</isNotEmpty>
						</isEmpty>
						<isNotEmpty prepend="AND" property="arrTitle">
							<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">B.title LIKE #arrTitle[]:VARCHAR#</iterate>
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="innerTitle">
							B.title LIKE #innerTitle:VARCHAR#
						</isNotEmpty>
						<isNotEqual property="readRangType" compareValue="1">
							<isNotEqual prepend="AND" property="sesUserDiv" compareValue="3">
							    B.oper_read_range_cd != '03' AND B.folder_read_range_cd != '03'
							</isNotEqual>
						</isNotEqual>
						<isNotEmpty prepend="AND" property="arrFolderKeepStateCd">
							B.folder_keep_state_cd IN <iterate property="arrFolderKeepStateCd" open="(" close=")" conjunction=",">#arrFolderKeepStateCd[]:VARCHAR#</iterate>
						</isNotEmpty>
 					</dynamic>
				) C
				WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
			) D
			WHERE D.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
		) E
		ORDER BY E.rnum
	</select>
	<!--
		조건별검색_기간별기록물건
		: 기록물건 목록 조회 (보유 + 이관/폐기/기관간인계 목록 포함)
	-->
	<select id="countDetailsTermRecordPagedList_union" parameterClass="rms.srch.srch.domain.DetailsRecord" resultClass="java.lang.Long">
		SELECT COUNT(1)
		FROM (
			(
			SELECT record_id
			FROM (
				SELECT B.*
					,(SELECT Z.cur_keep_org_cd      FROM TB_RDFOLDER Z WHERE Z.record_center_id=B.record_center_id AND Z.folder_id=B.folder_id) AS folder_cur_keep_org_cd
					,(SELECT Z.folder_keep_state_cd FROM TB_RDFOLDER Z WHERE Z.record_center_id=B.record_center_id AND Z.folder_id=B.folder_id) AS folder_keep_state_cd
					,(SELECT Z.oper_read_range_cd   FROM TB_RDFOLDER Z WHERE Z.record_center_id=B.record_center_id AND Z.folder_id=B.folder_id) AS folder_read_range_cd
		        FROM TB_RDRECORD B
			) A
			WHERE A.record_center_id = #recordCenterId:VARCHAR#
			<dynamic>
				<isNotEmpty prepend="AND" property="creatSysCd">
					A.creat_sys_cd = #creatSysCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="orgCd">
					<isEqual property="searchDivCd" compareValue="1">
						A.folder_cur_keep_org_cd = #orgCd:VARCHAR#
					</isEqual>
					<isEqual property="searchDivCd" compareValue="2">
						A.org_cd = #orgCd:VARCHAR#
					</isEqual>							
				</isNotEmpty>
				<isEmpty property="orgCd">
					<isNotEmpty prepend="AND" property="orgNm">
						<isEqual property="searchDivCd" compareValue="1">
							A.folder_cur_keep_org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)					
						</isEqual>
						<isEqual property="searchDivCd" compareValue="2">
							A.org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
						</isEqual>
					</isNotEmpty>
				</isEmpty>
				<isNotEmpty prepend="AND" property="creatRegDtimeStart">
					<isNotEmpty property="creatRegDtimeEnd">
						(A.creat_reg_dtime BETWEEN #creatRegDtimeStart:VARCHAR#||'000000' AND #creatRegDtimeEnd:VARCHAR#||'240000')
					</isNotEmpty>
					<isEmpty property="creatRegDtimeEnd">
						A.creat_reg_dtime <![CDATA[>=]]> #creatRegDtimeStart:VARCHAR#||'000000'
					</isEmpty>
				</isNotEmpty>
				<isEmpty prepend="AND" property="creatRegDtimeStart">
					<isNotEmpty property="creatRegDtimeEnd">
						A.creat_reg_dtime <![CDATA[<=]]> #creatRegDtimeEnd:VARCHAR#||'240000'
					</isNotEmpty>
				</isEmpty>
				<isNotEmpty prepend="AND" property="arrTitle">
					<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">A.title LIKE #arrTitle[]:VARCHAR#</iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="innerTitle">
					A.title LIKE #innerTitle:VARCHAR#
				</isNotEmpty>
				<isNotEqual property="readRangType" compareValue="1">
					<isNotEqual prepend="AND" property="sesUserDiv" compareValue="3">
					    A.oper_read_range_cd != '03' AND A.folder_read_range_cd != '03'
					</isNotEqual>
				</isNotEqual>
				<isNotEmpty prepend="AND" property="arrFolderKeepStateCd">
					A.folder_keep_state_cd IN <iterate property="arrFolderKeepStateCd" open="(" close=")" conjunction=",">#arrFolderKeepStateCd[]:VARCHAR#</iterate>
				</isNotEmpty>
			</dynamic>
			)
			UNION ALL
			(
			SELECT record_id
			FROM (
				SELECT B.*
					,(SELECT Z.cur_keep_org_cd      FROM TB_NKFOLDER Z WHERE Z.record_center_id=B.record_center_id AND Z.folder_id=B.folder_id) AS folder_cur_keep_org_cd
					,(SELECT Z.folder_keep_state_cd FROM TB_NKFOLDER Z WHERE Z.record_center_id=B.record_center_id AND Z.folder_id=B.folder_id) AS folder_keep_state_cd
					,(SELECT Z.oper_read_range_cd   FROM TB_NKFOLDER Z WHERE Z.record_center_id=B.record_center_id AND Z.folder_id=B.folder_id) AS folder_read_range_cd
		        FROM TB_NKRECORD B
			) A
			WHERE A.record_center_id = #recordCenterId:VARCHAR#
			<dynamic>
				<isNotEmpty prepend="AND" property="creatSysCd">
					A.creat_sys_cd = #creatSysCd:VARCHAR#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="orgCd">
					<isEqual property="searchDivCd" compareValue="1">
						A.folder_cur_keep_org_cd = #orgCd:VARCHAR#
					</isEqual>
					<isEqual property="searchDivCd" compareValue="2">
						A.org_cd = #orgCd:VARCHAR#
					</isEqual>							
				</isNotEmpty>
				<isEmpty property="orgCd">
					<isNotEmpty prepend="AND" property="orgNm">
						<isEqual property="searchDivCd" compareValue="1">
							A.folder_cur_keep_org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)					
						</isEqual>
						<isEqual property="searchDivCd" compareValue="2">
							A.org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
						</isEqual>
					</isNotEmpty>
				</isEmpty>
				<isNotEmpty prepend="AND" property="creatRegDtimeStart">
					<isNotEmpty property="creatRegDtimeEnd">
						(A.creat_reg_dtime BETWEEN #creatRegDtimeStart:VARCHAR#||'000000' AND #creatRegDtimeEnd:VARCHAR#||'240000')
					</isNotEmpty>
					<isEmpty property="creatRegDtimeEnd">
						A.creat_reg_dtime <![CDATA[>=]]> #creatRegDtimeStart:VARCHAR#||'000000'
					</isEmpty>
				</isNotEmpty>
				<isEmpty prepend="AND" property="creatRegDtimeStart">
					<isNotEmpty property="creatRegDtimeEnd">
						A.creat_reg_dtime <![CDATA[<=]]> #creatRegDtimeEnd:VARCHAR#||'240000'
					</isNotEmpty>
				</isEmpty>
				<isNotEmpty prepend="AND" property="arrTitle">
					<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">A.title LIKE #arrTitle[]:VARCHAR#</iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="innerTitle">
					A.title LIKE #innerTitle:VARCHAR#
				</isNotEmpty>
				<isNotEqual property="readRangType" compareValue="1">
					<isNotEqual prepend="AND" property="sesUserDiv" compareValue="3">
					    A.oper_read_range_cd != '03' AND A.folder_read_range_cd != '03'
					</isNotEqual>
				</isNotEqual>
				<isNotEmpty prepend="AND" property="arrFolderKeepStateCd">
					A.folder_keep_state_cd IN <iterate property="arrFolderKeepStateCd" open="(" close=")" conjunction=",">#arrFolderKeepStateCd[]:VARCHAR#</iterate>
				</isNotEmpty>
			</dynamic>
			)
		)
	</select>
	<select id="findDetailsTermRecordPagedList_union" parameterClass="rms.srch.srch.domain.DetailsRecord" resultMap="findDetailsTermRecordPagedList-result">
		SELECT E.record_center_id
			, E.folder_org_cd
			, E.record_org_cd
			, E.folder_id
			, E.record_id
			, E.folder_title
			, E.title
			, (SELECT Z.org_nm FROM TB_STORG Z WHERE Z.record_center_id=E.record_center_id AND Z.org_cd=E.record_org_cd) org_nm
			, (SELECT Z.org_abbr_nm FROM TB_STORG Z WHERE Z.record_center_id=E.record_center_id AND Z.org_cd=E.record_org_cd) org_abbr_nm
			, SUBSTR(E.creat_reg_dtime,0,8) creat_reg_dtime
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD03' AND Z.com_cd=E.record_detl_type_cd) record_detl_type_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD05' AND Z.com_cd=E.open_div_cd) open_div_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD23' AND Z.com_cd=E.erecord_flag) erecord_flag_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD17' AND Z.com_cd=E.creat_sys_cd) creat_sys_nm
			, (DECODE(SUBSTR(E.spcl_record_type,1,1),'N','','Y',(SELECT com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='1'))
				||DECODE(SUBSTR(E.spcl_record_type,2,1),'N','','Y',(SELECT ','||com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='2'))
				||DECODE(SUBSTR(E.spcl_record_type,3,1),'N','','Y',(SELECT ','||com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='3'))
				||DECODE(SUBSTR(E.spcl_record_type,4,1),'N','','Y',(SELECT ','||com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='4'))
				||DECODE(SUBSTR(E.spcl_record_type,5,1),'N','','Y',(SELECT ','||com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='5'))) SPCL_RECORD_TYPE_NM
			, E.scan_fin_flag
			, E.folder_keep_state_cd
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD32' AND Z.com_cd=E.folder_keep_state_cd) folder_keep_state_nm
			, E.creat_sys_cd
			, E.scan_prog_state_cd
			, E.oper_read_range_cd
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD53' AND Z.com_cd=E.oper_read_range_cd) oper_read_range_nm
			, E.folder_read_range_cd
		    , (CASE WHEN '3'=#sesUserDiv:VARCHAR# AND E.record_center_id = (SELECT Z.record_center_id FROM TB_STUSER Z WHERE Z.USER_ID = #sesUserId:VARCHAR#) THEN 1
					WHEN E.folder_read_range_cd='01' THEN 1
					<isEqual property="orgUserAccsType" compareValue="1">
					WHEN (E.folder_read_range_cd='02' AND E.folder_cur_keep_org_cd=#sesOrgCd:VARCHAR#) THEN 1
					</isEqual>
					<isEqual property="orgUserAccsType" compareValue="2">
					WHEN E.folder_cur_keep_org_cd=#sesOrgCd:VARCHAR# THEN 1
					</isEqual>
		            WHEN (SELECT COUNT(1) FROM TB_RDFOLDERACCS Z WHERE Z.record_center_id=E.record_center_id AND Z.folder_id=E.folder_id AND Z.accs_type_cd='2' AND Z.accs_dept_cd=#sesOrgCd:VARCHAR#) > 0 THEN 1 
		            WHEN (SELECT COUNT(1) FROM TB_RDFOLDERACCS Z WHERE Z.record_center_id=E.record_center_id AND Z.folder_id=E.folder_id AND Z.accs_type_cd='1' AND Z.accs_user_id=#sesUserId:VARCHAR#) > 0 THEN 1
		            ELSE 0
		       END) folder_accs_flag
		    , (CASE WHEN '3'=#sesUserDiv:VARCHAR# AND E.record_center_id = (SELECT Z.record_center_id FROM TB_STUSER Z WHERE Z.USER_ID = #sesUserId:VARCHAR#) THEN 1
					WHEN E.oper_read_range_cd='01' THEN 1
					<isEqual property="orgUserAccsType" compareValue="1">
					WHEN (E.oper_read_range_cd='02' AND #sesOrgCd:VARCHAR# = (SELECT B.CUR_KEEP_ORG_CD FROM TB_RDFOLDER B WHERE B.folder_id=E.folder_id)) THEN 1
					</isEqual>
					<isEqual property="orgUserAccsType" compareValue="2">
					WHEN #sesOrgCd:VARCHAR# = (SELECT B.CUR_KEEP_ORG_CD FROM TB_RDFOLDER B WHERE B.folder_id=E.folder_id) THEN 1
					</isEqual>
		            WHEN (SELECT COUNT(1) FROM TB_RDRECORDACCS Z WHERE Z.record_center_id=E.record_center_id AND Z.record_id=E.record_id AND Z.accs_type_cd='2' AND Z.accs_dept_cd=#sesOrgCd:VARCHAR#) > 0 THEN 1 
		            WHEN (SELECT COUNT(1) FROM TB_RDRECORDACCS Z WHERE Z.record_center_id=E.record_center_id AND Z.record_id=E.record_id AND Z.accs_type_cd='1' AND Z.accs_user_id=#sesUserId:VARCHAR#) > 0 THEN 1
		            ELSE 0
		       END) accs_flag
		    , E.duty_chrgr_nm
		    , E.efile_del_flag
		    , E.prod_type_cd
       		, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd = 'RD02' AND Z.com_cd = E.record_reg_div_cd) record_reg_div_nm
       		, E.folder_key
       		, E.ho_no
       		, E.creat_yyyy, E.creat_reg_no, E.dtch_reg_no, E.creat_sys_record_id, E.record_detl_type_cd, E.doc_no
       		, SUBSTR(E.creat_reg_no, 8, 6) creat_reg_no_sub
		FROM (
			SELECT D.*
			FROM (
				SELECT ROWNUM AS rnum
					, C.*
				FROM (
					SELECT *
					FROM (
						(
							SELECT B.*
							FROM (
								SELECT
									<dynamic>
										<isNotEqual property="checkParam" compareValue="Y">
											<isEmpty property="order">
												/*+ index_desc(A TB_RDRECORD_IX09) */ 
											</isEmpty>
											<isEqual property="order" compareValue="0">
												/*+ index_desc(A TB_RDRECORD_IX09) */ 
											</isEqual>
											<isEqual property="order" compareValue="1">
												/*+ index(A TB_RDRECORD_IX09) */ 
											</isEqual>
											<isEqual property="order" compareValue="2">
												/*+ index(A TB_RDRECORD_IX08) */ 
											</isEqual>
										</isNotEqual>
									</dynamic>
								      A.record_center_id
									, A.org_cd AS record_org_cd
									, A.folder_id
									, A.record_id
									, A.title
									, A.creat_reg_dtime
									, A.record_detl_type_cd
									, A.open_div_cd
									, A.erecord_flag
									, A.creat_sys_cd
									, A.creat_yyyy
									, A.doc_no
									, A.old_record_docno
									, A.spcl_record_type
									, A.scan_fin_flag
									, A.oper_read_range_cd
									, A.duty_chrgr_nm
									, A.record_clss_cd
									, A.record_reg_div_cd
									, A.creat_reg_no
									, A.dtch_reg_no
									, A.creat_sys_record_id
<!-- 									, (CASE WHEN A.record_reg_div_cd IN ('1','3','5','6','8') THEN 0 ELSE 1 END) prod_type_cd -->
									, (CASE WHEN A.prod_type_cd is not null THEN A.prod_type_cd ELSE (CASE WHEN A.record_reg_div_cd IN ('1','3','5','6','7','8') THEN '0' ELSE '1' END) END) prod_type_cd
									, (SELECT org_cd               FROM TB_RDFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) folder_org_cd
									, (SELECT cur_keep_org_cd      FROM TB_RDFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) folder_cur_keep_org_cd
									, (SELECT title                FROM TB_RDFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) folder_title
									, (SELECT oper_read_range_cd   FROM TB_RDFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) folder_read_range_cd
									, (SELECT clss_id              FROM TB_RDFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) clss_id
									, (SELECT new_clss_id          FROM TB_RDFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) new_clss_id
									, (SELECT scan_prog_state_cd   FROM TB_RDFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) scan_prog_state_cd
									, (SELECT folder_keep_state_cd FROM TB_RDFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) folder_keep_state_cd
									, (SELECT efile_del_flag	   FROM TB_RDFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) efile_del_flag
									, (SELECT Z.creat_sys_cd||'-'||Z.org_cd||'-'||Z.clss_id||'-'||Z.creat_yyyy||'-'||Z.folder_reg_seq FROM TB_RDFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) AS folder_key
									, (SELECT ho_no	   FROM TB_RDFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) ho_no
								FROM TB_RDRECORD A
							) B
							WHERE B.record_center_id = #recordCenterId:VARCHAR#
							<dynamic>
								<isNotEmpty prepend="AND" property="creatSysCd">
									B.creat_sys_cd = #creatSysCd:VARCHAR#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="orgCd">
									<isEqual property="searchDivCd" compareValue="1">
										B.folder_cur_keep_org_cd = #orgCd:VARCHAR#
									</isEqual>
									<isEqual property="searchDivCd" compareValue="2">
										B.record_org_cd = #orgCd:VARCHAR#
									</isEqual>							
								</isNotEmpty>
								<isEmpty property="orgCd">
									<isNotEmpty prepend="AND" property="orgNm">
										<isEqual property="searchDivCd" compareValue="1">
											B.folder_cur_keep_org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
										</isEqual>
										<isEqual property="searchDivCd" compareValue="2">
											B.record_org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
										</isEqual>
									</isNotEmpty>
								</isEmpty>
								<isNotEmpty prepend="AND" property="creatRegDtimeStart">
									<isNotEmpty property="creatRegDtimeEnd">
										(B.creat_reg_dtime BETWEEN #creatRegDtimeStart:VARCHAR#||'000000' AND #creatRegDtimeEnd:VARCHAR#||'240000')
									</isNotEmpty>
									<isEmpty property="creatRegDtimeEnd">
										B.creat_reg_dtime <![CDATA[>=]]> #creatRegDtimeStart:VARCHAR#||'000000'
									</isEmpty>
								</isNotEmpty>
								<isEmpty prepend="AND" property="creatRegDtimeStart">
									<isNotEmpty property="creatRegDtimeEnd">
										B.creat_reg_dtime <![CDATA[<=]]> #creatRegDtimeEnd:VARCHAR#||'240000'
									</isNotEmpty>
								</isEmpty>
								<isNotEmpty prepend="AND" property="arrTitle">
									<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">B.title LIKE #arrTitle[]:VARCHAR#</iterate>
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="innerTitle">
									B.title LIKE #innerTitle:VARCHAR#
								</isNotEmpty>
								<isNotEqual property="readRangType" compareValue="1">
									<isNotEqual prepend="AND" property="sesUserDiv" compareValue="3">
									    B.oper_read_range_cd != '03' AND B.folder_read_range_cd != '03'
									</isNotEqual>
								</isNotEqual>
								<isNotEmpty prepend="AND" property="arrFolderKeepStateCd">
									B.folder_keep_state_cd IN <iterate property="arrFolderKeepStateCd" open="(" close=")" conjunction=",">#arrFolderKeepStateCd[]:VARCHAR#</iterate>
								</isNotEmpty>
		 					</dynamic>
	 					)
	 					UNION ALL
	 					(
							SELECT B.*
							FROM (
								SELECT
									<dynamic>
										<isNotEqual property="checkParam" compareValue="Y">
											<isEmpty property="order">
												/*+ index_desc(A TB_NKRECORD_IX09) */ 
											</isEmpty>
											<isEqual property="order" compareValue="0">
												/*+ index_desc(A TB_NKRECORD_IX09) */ 
											</isEqual>
											<isEqual property="order" compareValue="1">
												/*+ index(A TB_NKRECORD_IX09) */ 
											</isEqual>
											<isEqual property="order" compareValue="2">
												/*+ index(A TB_NKRECORD_IX08) */ 
											</isEqual>
										</isNotEqual>
									</dynamic>
								      A.record_center_id
									, A.org_cd AS record_org_cd
									, A.folder_id
									, A.record_id
									, A.title
									, A.creat_reg_dtime
									, A.record_detl_type_cd
									, A.open_div_cd
									, A.erecord_flag
									, A.creat_sys_cd
									, A.creat_yyyy
									, A.doc_no
									, A.old_record_docno
									, A.spcl_record_type
									, '' AS scan_fin_flag
									, A.oper_read_range_cd
									, A.duty_chrgr_nm
									, A.record_clss_cd
									, A.record_reg_div_cd
									, A.creat_reg_no
									, A.dtch_reg_no
									, A.creat_sys_record_id
<!-- 									, (CASE WHEN A.record_reg_div_cd IN ('1','3','5','6','8') THEN 0 ELSE 1 END) prod_type_cd -->
									, (CASE WHEN A.prod_type_cd is not null THEN A.prod_type_cd ELSE (CASE WHEN A.record_reg_div_cd IN ('1','3','5','6','7','8') THEN '0' ELSE '1' END) END) prod_type_cd
									, (SELECT org_cd               FROM TB_NKFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) folder_org_cd
									, (SELECT cur_keep_org_cd      FROM TB_NKFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) folder_cur_keep_org_cd
									, (SELECT title                FROM TB_NKFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) folder_title
									, (SELECT oper_read_range_cd   FROM TB_NKFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) folder_read_range_cd
									, (SELECT clss_id              FROM TB_NKFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) clss_id
									, (SELECT new_clss_id          FROM TB_NKFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) new_clss_id
									, (SELECT scan_prog_state_cd   FROM TB_NKFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) scan_prog_state_cd
									, (SELECT folder_keep_state_cd FROM TB_NKFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) folder_keep_state_cd
									, (SELECT efile_del_flag	   FROM TB_NKFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) efile_del_flag
									, (SELECT Z.creat_sys_cd||'-'||Z.org_cd||'-'||Z.clss_id||'-'||Z.creat_yyyy||'-'||Z.folder_reg_seq FROM TB_NKFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) AS folder_key
									, (SELECT ho_no	   FROM TB_NKFOLDER Z WHERE Z.record_center_id=A.record_center_id AND Z.folder_id=A.folder_id) ho_no
								FROM TB_NKRECORD A
							) B
							WHERE B.record_center_id = #recordCenterId:VARCHAR#
							<dynamic>
								<isNotEmpty prepend="AND" property="creatSysCd">
									B.creat_sys_cd = #creatSysCd:VARCHAR#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="orgCd">
									<isEqual property="searchDivCd" compareValue="1">
										B.folder_cur_keep_org_cd = #orgCd:VARCHAR#
									</isEqual>
									<isEqual property="searchDivCd" compareValue="2">
										B.record_org_cd = #orgCd:VARCHAR#
									</isEqual>							
								</isNotEmpty>
								<isEmpty property="orgCd">
									<isNotEmpty prepend="AND" property="orgNm">
										<isEqual property="searchDivCd" compareValue="1">
											B.folder_cur_keep_org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
										</isEqual>
										<isEqual property="searchDivCd" compareValue="2">
											B.record_org_cd IN (SELECT org_cd FROM TB_STORG WHERE record_center_id=#recordCenterId:VARCHAR# AND org_nm LIKE #orgNm:VARCHAR#)
										</isEqual>
									</isNotEmpty>
								</isEmpty>
								<isNotEmpty prepend="AND" property="creatRegDtimeStart">
									<isNotEmpty property="creatRegDtimeEnd">
										(B.creat_reg_dtime BETWEEN #creatRegDtimeStart:VARCHAR#||'000000' AND #creatRegDtimeEnd:VARCHAR#||'240000')
									</isNotEmpty>
									<isEmpty property="creatRegDtimeEnd">
										B.creat_reg_dtime <![CDATA[>=]]> #creatRegDtimeStart:VARCHAR#||'000000'
									</isEmpty>
								</isNotEmpty>
								<isEmpty prepend="AND" property="creatRegDtimeStart">
									<isNotEmpty property="creatRegDtimeEnd">
										B.creat_reg_dtime <![CDATA[<=]]> #creatRegDtimeEnd:VARCHAR#||'240000'
									</isNotEmpty>
								</isEmpty>
								<isNotEmpty prepend="AND" property="arrTitle">
									<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">B.title LIKE #arrTitle[]:VARCHAR#</iterate>
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="innerTitle">
									B.title LIKE #innerTitle:VARCHAR#
								</isNotEmpty>
								<isNotEqual property="readRangType" compareValue="1">
									<isNotEqual prepend="AND" property="sesUserDiv" compareValue="3">
									    B.oper_read_range_cd != '03' AND B.folder_read_range_cd != '03'
									</isNotEqual>
								</isNotEqual>
								<isNotEmpty prepend="AND" property="arrFolderKeepStateCd">
									B.folder_keep_state_cd IN <iterate property="arrFolderKeepStateCd" open="(" close=")" conjunction=",">#arrFolderKeepStateCd[]:VARCHAR#</iterate>
								</isNotEmpty>
		 					</dynamic>
	 					)
 					)
					<isEqual property="checkParam" compareValue="Y">
						<isEmpty property="order">
							ORDER BY record_center_id, creat_reg_dtime DESC, creat_reg_no DESC
						</isEmpty>
						<isEqual property="order" compareValue="0">
							ORDER BY record_center_id, creat_reg_dtime DESC, creat_reg_no DESC
						</isEqual>
						<isEqual property="order" compareValue="1">
							ORDER BY record_center_id, creat_reg_dtime, creat_reg_no
						</isEqual>
						<isEqual property="order" compareValue="2">
							ORDER BY record_center_id, title
						</isEqual>
					</isEqual>
				) C
				WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
			) D
			WHERE D.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
		) E
		ORDER BY E.rnum
	</select>

	<!--
		조건별검색_행위자별별기록물건
		: 기록물건 목록 조회
	-->
	<resultMap id="findDetailsAgentRecordPagedList-result" class="rms.srch.srch.domain.DetailsRecord">
		<result property = "recordCenterId" 	column = "RECORD_CENTER_ID"     />
		<result property = "folderOrgCd" 		column = "FOLDER_ORG_CD"        /> 
		<result property = "recordOrgCd" 		column = "RECORD_ORG_CD"        /> 		
		<result property = "folderId" 			column = "FOLDER_ID"			/>
		<result property = "recordId" 			column = "RECORD_ID"			/>
		<result property = "folderTitle" 		column = "FOLDER_TITLE"			/>
		<result property = "title" 				column = "TITLE"				/>
		<result property = "orgNm" 				column = "ORG_NM"				/>
		<result property = "orgAbbrNm" 			column = "ORG_ABBR_NM"      	/>
		<result property = "creatRegDtime" 		column = "CREAT_REG_DTIME"		/>
		<result property = "recordDetlTypeNm" 	column = "RECORD_DETL_TYPE_NM"	/>
		<result property = "openDivNm" 			column = "OPEN_DIV_NM"			/>
		<result property = "erecordFlagNm" 		column = "ERECORD_FLAG_NM"		/>
		<result property = "creatSysNm" 		column = "CREAT_SYS_NM"			/>
		<result property = "spclRecordTypeNm" 	column = "SPCL_RECORD_TYPE_NM"	/>
		<result property = "scanFinFlag" 	    column = "SCAN_FIN_FLAG"		/>
		<result property = "folderKeepStateCd" 	column = "FOLDER_KEEP_STATE_CD"	/>
		<result property = "folderKeepStateNm" 	column = "FOLDER_KEEP_STATE_NM"	/>
		<result property = "creatSysCd" 	    column = "CREAT_SYS_CD"			/>
		<result property = "scanProgStateCd" 	column = "SCAN_PROG_STATE_CD"	/>
		<result property = "folderReadRangeCd" 	column = "FOLDER_READ_RANGE_CD"	/>
		<result property = "operReadRangeCd" 	column = "OPER_READ_RANGE_CD"	/>
		<result property = "operReadRangeNm"    column = "OPER_READ_RANGE_NM"	/>
		<result property = "folderAccsFlag" 	column = "FOLDER_ACCS_FLAG"		/>
		<result property = "accsFlag" 			column = "ACCS_FLAG"			/>
		<result property = "dutyChrgrNm" 		column = "DUTY_CHRGR_NM"		/>
		<result property = "efileDelFlag" 		column = "EFILE_DEL_FLAG"		/>
		<result property = "folderKey" 			column = "folder_key"			/>
		<result property = "hoNo" 				column = "ho_no"				/>
		<result property = "creatYyyy" 			column = "creat_yyyy"			/>
		<result property = "creatRegNo" 		column = "creat_reg_no"			/>
		<result property = "dtchRegNo" 			column = "dtch_reg_no"			/>
		<result property = "creatSysRecordId" 	column = "creat_sys_record_id"	/>
		<result property = "recordDetlTypeCd" 	column = "record_detl_type_cd"	/>
		<result property = "docNo" 				column = "doc_no"				/>
		<result property = "creatRegNoSub" 		column = "creat_reg_no_sub"		/>
		<result property = "prodTypeCd" 		column = "prod_type_cd"			/>
	</resultMap>
	<select id="countDetailsAgentRecordPagedList" parameterClass="rms.srch.srch.domain.DetailsRecord" resultClass="java.lang.Long">
		SELECT COUNT(1)
		FROM TB_RDRECORD A, TB_RDFOLDER B
		WHERE B.record_center_id=A.record_center_id 
		AND   B.folder_id=A.folder_id  
		AND   A.record_center_id = #recordCenterId:VARCHAR#
	    <dynamic>
			<isNotEmpty prepend="AND" property="orgCd">
				<isEqual property="searchDivCd" compareValue="1">
					B.cur_keep_org_cd = #orgCd:VARCHAR#
				</isEqual>
				<isEqual property="searchDivCd" compareValue="2">
					A.org_cd = #orgCd:VARCHAR#
				</isEqual>							
			</isNotEmpty>
		    <isNotEmpty prepend="AND" property="agentNm">
				EXISTS (
					SELECT 1 FROM TB_RDRECORDCREAT Z
					WHERE Z.record_center_id=A.record_center_id
					AND Z.record_id=A.record_id
					AND Z.agent_type_cd = #agentTypeCd:VARCHAR#
					AND Z.agent_nm LIKE #agentNm:VARCHAR# 
				)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="arrTitle">
				<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">A.title LIKE #arrTitle[]:VARCHAR#</iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="innerTitle">
				A.title LIKE #innerTitle:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="creatRegDtimeStart">
				<isNotEmpty property="creatRegDtimeEnd">
					(A.creat_reg_dtime BETWEEN #creatRegDtimeStart:VARCHAR#||'000000' AND #creatRegDtimeEnd:VARCHAR#||'240000')
				</isNotEmpty>
				<isEmpty property="creatRegDtimeEnd">
					A.creat_reg_dtime <![CDATA[>=]]> #creatRegDtimeStart:VARCHAR#||'000000'
				</isEmpty>
			</isNotEmpty>
			<isEmpty prepend="AND" property="creatRegDtimeStart">
				<isNotEmpty property="creatRegDtimeEnd">
					A.creat_reg_dtime <![CDATA[<=]]> #creatRegDtimeEnd:VARCHAR#||'240000'
				</isNotEmpty>
			</isEmpty>
			<isNotEmpty prepend="AND" property="prodTypeCd">
<!-- 				<isEqual property="prodTypeCd" compareValue="0"> -->
<!-- 			    	A.record_reg_div_cd IN ('1','3','5','6','8') -->
<!-- 			    </isEqual> -->
<!-- 				<isEqual property="prodTypeCd" compareValue="1"> -->
<!-- 			    	A.record_reg_div_cd IN ('2','4','7') -->
<!-- 			    </isEqual> -->
			    NVL(A.prod_type_cd, (CASE WHEN A.record_reg_div_cd IN ('1','3','5','6','7','8') THEN '0' ELSE '1' END)) = #prodTypeCd:VARCHAR#
			</isNotEmpty>
		</dynamic>
	</select>
		
	<!-- 20150714 김경수 행위자별 정렬부분 제외 (기본 정렬 제외) -->
	<select id="findDetailsAgentRecordPagedList" parameterClass="rms.srch.srch.domain.DetailsRecord" resultMap="findDetailsAgentRecordPagedList-result">
		SELECT E.record_center_id
			, E.folder_org_cd
			, E.record_org_cd
			, E.folder_id
			, E.record_id
			, E.folder_title
			, E.title
			, (SELECT Z.org_nm FROM TB_STORG Z WHERE Z.record_center_id=E.record_center_id AND Z.org_cd=E.record_org_cd) org_nm
			, (SELECT Z.org_abbr_nm FROM TB_STORG Z WHERE Z.record_center_id=E.record_center_id AND Z.org_cd=E.record_org_cd) org_abbr_nm
			, SUBSTR(E.creat_reg_dtime,0,8) creat_reg_dtime
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD03' AND Z.com_cd=E.record_detl_type_cd) record_detl_type_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD05' AND Z.com_cd=E.open_div_cd) open_div_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD23' AND Z.com_cd=E.erecord_flag) erecord_flag_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD17' AND Z.com_cd=E.creat_sys_cd) creat_sys_nm
			, (DECODE(SUBSTR(E.spcl_record_type,1,1),'N','','Y',(SELECT com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='1'))
				||DECODE(SUBSTR(E.spcl_record_type,2,1),'N','','Y',(SELECT ','||com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='2'))
				||DECODE(SUBSTR(E.spcl_record_type,3,1),'N','','Y',(SELECT ','||com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='3'))
				||DECODE(SUBSTR(E.spcl_record_type,4,1),'N','','Y',(SELECT ','||com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='4'))
				||DECODE(SUBSTR(E.spcl_record_type,5,1),'N','','Y',(SELECT ','||com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='5'))) SPCL_RECORD_TYPE_NM
			, E.scan_fin_flag
			, E.folder_keep_state_cd
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD32' AND Z.com_cd=E.folder_keep_state_cd) folder_keep_state_nm
			, E.creat_sys_cd
			, E.scan_prog_state_cd
			, E.oper_read_range_cd
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD53' AND Z.com_cd=E.oper_read_range_cd) oper_read_range_nm
			, E.folder_read_range_cd
		    , (CASE WHEN #sesUserDiv:VARCHAR# = '3' AND E.record_center_id = (SELECT Z.record_center_id FROM TB_STUSER Z WHERE Z.USER_ID = #sesUserId:VARCHAR#) THEN 1
					WHEN E.folder_read_range_cd='01' THEN 1
					<isEqual property="orgUserAccsType" compareValue="1">
					WHEN (E.folder_read_range_cd='02' AND E.folder_cur_keep_org_cd=#sesOrgCd:VARCHAR#) THEN 1
					</isEqual>
					<isEqual property="orgUserAccsType" compareValue="2">
					WHEN E.folder_cur_keep_org_cd=#sesOrgCd:VARCHAR# THEN 1
					</isEqual>
		            WHEN (SELECT COUNT(1) FROM TB_RDFOLDERACCS Z WHERE Z.record_center_id=E.record_center_id AND Z.folder_id=E.folder_id AND Z.accs_type_cd='2' AND Z.accs_dept_cd=#sesOrgCd:VARCHAR#) > 0 THEN 1 
		            WHEN (SELECT COUNT(1) FROM TB_RDFOLDERACCS Z WHERE Z.record_center_id=E.record_center_id AND Z.folder_id=E.folder_id AND Z.accs_type_cd='1' AND Z.accs_user_id=#sesUserId:VARCHAR#) > 0 THEN 1
		            ELSE 0
		       END) folder_accs_flag
		    , (CASE WHEN #sesUserDiv:VARCHAR# = '3' AND E.record_center_id = (SELECT Z.record_center_id FROM TB_STUSER Z WHERE Z.USER_ID = #sesUserId:VARCHAR#) THEN 1
					WHEN E.oper_read_range_cd='01' THEN 1
					<isEqual property="orgUserAccsType" compareValue="1">
					WHEN (E.oper_read_range_cd='02' AND #sesOrgCd:VARCHAR# = (SELECT B.CUR_KEEP_ORG_CD FROM TB_RDFOLDER B WHERE B.folder_id=E.folder_id AND B.record_center_id=E.record_center_id)) THEN 1
					</isEqual>
					<isEqual property="orgUserAccsType" compareValue="2">
					WHEN #sesOrgCd:VARCHAR# = (SELECT B.CUR_KEEP_ORG_CD FROM TB_RDFOLDER B WHERE B.folder_id=E.folder_id AND B.record_center_id=E.record_center_id) THEN 1
					</isEqual>
		            WHEN (SELECT COUNT(1) FROM TB_RDRECORDACCS Z WHERE Z.record_center_id=E.record_center_id AND Z.record_id=E.record_id AND Z.accs_type_cd='2' AND Z.accs_dept_cd=#sesOrgCd:VARCHAR#) > 0 THEN 1 
		            WHEN (SELECT COUNT(1) FROM TB_RDRECORDACCS Z WHERE Z.record_center_id=E.record_center_id AND Z.record_id=E.record_id AND Z.accs_type_cd='1' AND Z.accs_user_id=#sesUserId:VARCHAR#) > 0 THEN 1
		            ELSE 0
		       END) accs_flag
		    , E.duty_chrgr_nm
		    , E.efile_del_flag
		    , E.prod_type_cd
       		, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd = 'RD02' AND Z.com_cd = E.record_reg_div_cd) record_reg_div_nm
       		, E.folder_key
       		, E.ho_no
      		, E.creat_yyyy, E.creat_reg_no, E.dtch_reg_no, E.creat_sys_record_id, E.record_detl_type_cd, E.doc_no
       		, SUBSTR(E.creat_reg_no, 8, 6) creat_reg_no_sub
		FROM (
			SELECT D.*
			FROM (
				SELECT ROWNUM AS rnum
					, C.*
				FROM (
					SELECT
						<dynamic>
							<isEqual property="order" compareValue="0">
								/*+ index(A TB_RDRECORD_IX09) */ 
							</isEqual>
							<isEqual property="order" compareValue="1">
								/*+ index_desc(A TB_RDRECORD_IX09) */ 
							</isEqual>
							<isEqual property="order" compareValue="2">
								/*+ index(A TB_RDRECORD_IX08) */ 
							</isEqual>
						</dynamic> 
						      A.record_center_id
							, A.org_cd AS record_org_cd
							, A.folder_id
							, A.record_id
							, A.title
							, A.creat_reg_dtime
							, A.record_detl_type_cd
							, A.open_div_cd
							, A.erecord_flag
							, A.creat_sys_cd
							, A.creat_yyyy
							, A.doc_no
							, A.old_record_docno
							, A.spcl_record_type
							, A.scan_fin_flag
							, A.oper_read_range_cd
							, A.duty_chrgr_nm
							, A.record_clss_cd
						, A.record_reg_div_cd
						, A.creat_reg_no
						, A.dtch_reg_no
						, A.creat_sys_record_id
<!-- 							, (CASE WHEN A.record_reg_div_cd IN ('1','3','5','6','8') THEN 0 ELSE 1 END) prod_type_cd -->
							, (CASE WHEN A.prod_type_cd is not null THEN A.prod_type_cd ELSE (CASE WHEN A.record_reg_div_cd IN ('1','3','5','6','7','8') THEN '0' ELSE '1' END) END) prod_type_cd
							, B.org_cd	AS folder_org_cd
							, B.cur_keep_org_cd AS folder_cur_keep_org_cd
							, B.title	AS folder_title
							, B.oper_read_range_cd   	AS folder_read_range_cd
							, B.clss_id					AS clss_id
							, B.new_clss_id				AS new_clss_id
							, B.scan_prog_state_cd		AS scan_prog_state_cd
							, B.folder_keep_state_cd 	AS folder_keep_state_cd
							, B.efile_del_flag
							, B.creat_sys_cd||'-'||B.org_cd||'-'||B.clss_id||'-'||B.creat_yyyy||'-'||B.folder_reg_seq AS folder_key
							, B.ho_no
						FROM TB_RDRECORD A , TB_RDFOLDER B
					   WHERE B.record_center_id=A.record_center_id 
					     AND B.folder_id=A.folder_id 
					     AND A.record_center_id = #recordCenterId:VARCHAR#
					 <dynamic>
						<isNotEmpty prepend="AND" property="orgCd">
							<isEqual property="searchDivCd" compareValue="1">
								B.cur_keep_org_cd = #orgCd:VARCHAR#
							</isEqual>
							<isEqual property="searchDivCd" compareValue="2">
								A.org_cd = #orgCd:VARCHAR#
							</isEqual>							
						</isNotEmpty>
					    <isNotEmpty prepend="AND" property="agentNm">
							EXISTS (
								SELECT 1 FROM TB_RDRECORDCREAT Z
								WHERE Z.record_center_id=A.record_center_id
								AND Z.record_id=A.record_id
								AND Z.agent_type_cd = #agentTypeCd:VARCHAR#
								AND Z.agent_nm LIKE #agentNm:VARCHAR# 
							)
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="arrTitle">
							<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">A.title LIKE #arrTitle[]:VARCHAR#</iterate>
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="innerTitle">
							A.title LIKE #innerTitle:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="creatRegDtimeStart">
							<isNotEmpty property="creatRegDtimeEnd">
								(A.creat_reg_dtime BETWEEN #creatRegDtimeStart:VARCHAR#||'000000' AND #creatRegDtimeEnd:VARCHAR#||'240000')
							</isNotEmpty>
							<isEmpty property="creatRegDtimeEnd">
								A.creat_reg_dtime <![CDATA[>=]]> #creatRegDtimeStart:VARCHAR#||'000000'
							</isEmpty>
						</isNotEmpty>
						<isEmpty prepend="AND" property="creatRegDtimeStart">
							<isNotEmpty property="creatRegDtimeEnd">
								A.creat_reg_dtime <![CDATA[<=]]> #creatRegDtimeEnd:VARCHAR#||'240000'
							</isNotEmpty>
						</isEmpty>
						<isNotEmpty prepend="AND" property="prodTypeCd">
<!-- 							<isEqual property="prodTypeCd" compareValue="0"> -->
<!-- 						    	A.record_reg_div_cd IN ('1','3','5','6','8') -->
<!-- 						    </isEqual> -->
<!-- 							<isEqual property="prodTypeCd" compareValue="1"> -->
<!-- 						    	A.record_reg_div_cd IN ('2','4','7') -->
<!-- 						    </isEqual> -->
						    NVL(A.prod_type_cd, (CASE WHEN A.record_reg_div_cd IN ('1','3','5','6','7','8') THEN '0' ELSE '1' END)) = #prodTypeCd:VARCHAR#
						</isNotEmpty>
					</dynamic>
				) C
				WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
			) D
			WHERE D.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
		) E
		ORDER BY E.rnum
	</select>

	<!--
		조건별검색_기록물철분류번호
		: 기록물철 목록 조회
	-->
	<resultMap id="findDetailsClssNoFolderPagedList-result" class="rms.srch.srch.domain.DetailsFolder">
		<result property = "recordCenterId"		column = "RECORD_CENTER_ID"		/>
		<result property = "orgCd" 			    column = "ORG_CD"				/>
		<result property = "folderId" 		    column = "FOLDER_ID"			/>
		<result property = "clssNm" 		    column = "CLSS_NM"				/>
		<result property = "title" 			    column = "TITLE"				/> 		
		<result property = "creatYyyy"		    column = "CREAT_YYYY"			/>
		<result property = "orgNm" 			    column = "ORG_NM"				/>
		<result property = "orgAbbrNm" 		    column = "ORG_ABBR_NM"			/>
		<result property = "presvTermNm" 	    column = "PRESV_TERM_NM"		/>
		<result property = "creatSysNm" 	    column = "CREAT_SYS_NM"			/>
		<result property = "erecordFlagNm" 	    column = "ERECORD_FLAG_NM"		/>
		<result property = "agentNm" 		    column = "AGENT_NM"				/>
		<result property = "folderKeepStateCd" 	column = "FOLDER_KEEP_STATE_CD"	/>
		<result property = "folderKeepStateNm" 	column = "FOLDER_KEEP_STATE_NM"	/>
		<result property = "creatSysCd" 	    column = "CREAT_SYS_CD"			/>
		<result property = "operReadRangeCd"    column = "OPER_READ_RANGE_CD"	/>
		<result property = "operReadRangeNm"    column = "OPER_READ_RANGE_NM"	/>
		<result property = "accsFlag" 			column = "ACCS_FLAG"			/>
		<result property = "efileDelFlag"		column = "EFILE_DEL_FLAG"		/>
		<result property = "folderKey" 		    column = "FOLDER_KEY"			/>
		<result property = "hoNo" 			    column = "HO_NO"				/>
		<result property = "hoNoCnt" 			column = "HO_NO_CNT"			/>
	</resultMap>
	<select id="countDetailsClssNoFolderPagedList" parameterClass="rms.srch.srch.domain.DetailsFolder" resultClass="java.lang.Long">
		SELECT COUNT(1)
		FROM  TB_RDFOLDER A
		WHERE A.record_center_id = #recordCenterId:VARCHAR#
		<dynamic>
			<isNotEmpty prepend="AND" property="creatSysCd">
				A.creat_sys_cd = #creatSysCd:VARCHAR#
			</isNotEmpty>	
			<isNotEmpty prepend="AND" property="orgCd">
				A.org_cd = #orgCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="clssId">
			    <isEqual property="clssDivCd" compareValue="1">
					(A.clss_id = #clssId:VARCHAR# OR A.new_clss_id = #clssId:VARCHAR#)
				</isEqual>
				<isNotEqual property="clssDivCd" compareValue="1">
			    	A.clss_id = #clssId:VARCHAR#
			    </isNotEqual>
			</isNotEmpty>	
			<isNotEmpty prepend="AND" property="creatYyyy">
				A.creat_yyyy = #creatYyyy:VARCHAR#
			</isNotEmpty>	
			<isNotEmpty prepend="AND" property="folderRegSeq">
				A.folder_reg_seq = #folderRegSeq:VARCHAR#
			</isNotEmpty>	
			<isNotEmpty prepend="AND" property="hoNo">
				A.ho_no = #hoNo:VARCHAR#
			</isNotEmpty>	
			<isNotEqual property="readRangType" compareValue="1">
				<isNotEqual prepend="AND" property="sesUserDiv" compareValue="3">
				    A.oper_read_range_cd != '03'
				</isNotEqual>
			</isNotEqual>
			<isNotEmpty prepend="AND" property="arrTitle">
				<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">A.title LIKE #arrTitle[]:VARCHAR#</iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="innerTitle">
				A.title LIKE #innerTitle:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="arrFolderKeepStateCd">
				A.folder_keep_state_cd IN <iterate property="arrFolderKeepStateCd" open="(" close=")" conjunction=",">#arrFolderKeepStateCd[]:VARCHAR#</iterate>
			</isNotEmpty>
		</dynamic>
	</select>
	<select id="findDetailsClssNoFolderPagedList" parameterClass="rms.srch.srch.domain.DetailsFolder" resultMap="findDetailsClssNoFolderPagedList-result">
		SELECT E.record_center_id
			, E.org_cd
			, E.folder_id
			<dynamic>
				<isEmpty prepend="" property="clssId">
					, (CASE WHEN E.clss_div_cd='1' THEN E.clss_nm
							WHEN E.new_clss_id IS NULL THEN E.clss_nm
							ELSE E.new_clss_nm END) AS clss_nm
				</isEmpty>
				<isNotEmpty prepend="" property="clssId">
					<isEqual property="clssDivCd" compareValue="1">
						, (CASE WHEN E.clss_div_cd='1' THEN E.clss_nm ELSE E.new_clss_nm END) AS clss_nm
					</isEqual>
					<isNotEqual property="clssDivCd" compareValue="1">
						, E.clss_nm
					</isNotEqual>
				</isNotEmpty>
			</dynamic>
			, E.title
			, E.creat_yyyy
			, (SELECT Z.org_nm FROM TB_STORG Z WHERE Z.record_center_id=E.record_center_id AND Z.org_cd=E.org_cd) org_nm
			, (SELECT Z.org_abbr_nm FROM TB_STORG Z WHERE Z.record_center_id=E.record_center_id AND Z.org_cd=E.org_cd) org_abbr_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD07' AND Z.com_cd=E.presv_term_cd) presv_term_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD17' AND Z.com_cd=E.creat_sys_cd) creat_sys_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD23' AND Z.com_cd=E.erecord_flag) erecord_flag_nm
			, (SELECT Z.agent_nm FROM TB_RDFOLDERCREAT Z
			    WHERE Z.record_center_id=E.record_center_id
			    AND   Z.folder_id=E.folder_id
			    AND   Z.agent_sno=(SELECT MAX(Y.agent_sno) FROM TB_RDFOLDERCREAT Y WHERE Y.record_center_id=E.record_center_id AND Y.folder_id=E.folder_id)) agent_nm
			, E.folder_keep_state_cd
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD32' AND Z.com_cd=E.folder_keep_state_cd) folder_keep_state_nm
			, E.creat_sys_cd
			, (CASE WHEN (SELECT COUNT(1) FROM TB_RDRECORD Z WHERE Z.record_center_id=E.record_center_id AND Z.folder_id=E.folder_id AND Z.oper_read_range_cd IN ('02','03')) > 0 THEN '02' ELSE '01' END) AS oper_read_range_cd
		    , (CASE WHEN (SELECT COUNT(1) FROM TB_RDRECORD Z WHERE Z.record_center_id=E.record_center_id AND Z.folder_id=E.folder_id AND Z.oper_read_range_cd IN ('02','03')) > 0 THEN '열람제한' ELSE '열람가능' END) AS oper_read_range_nm
		    , (CASE WHEN '3'=#sesUserDiv:VARCHAR# AND E.record_center_id = (SELECT Z.record_center_id FROM TB_STUSER Z WHERE Z.USER_ID = #sesUserId:VARCHAR#) THEN 1
		    		WHEN E.oper_read_range_cd='01' THEN 1
					<isEqual property="orgUserAccsType" compareValue="1">
					WHEN (E.oper_read_range_cd='02' AND E.cur_keep_org_cd=#sesOrgCd:VARCHAR#) THEN 1
					</isEqual>
					<isEqual property="orgUserAccsType" compareValue="2">
					WHEN E.cur_keep_org_cd=#sesOrgCd:VARCHAR# THEN 1
					</isEqual>
		            WHEN (SELECT COUNT(1) FROM TB_RDFOLDERACCS Z WHERE Z.record_center_id=E.record_center_id AND Z.folder_id=E.folder_id AND Z.accs_type_cd='2' AND Z.accs_dept_cd=#sesOrgCd:VARCHAR#) > 0 THEN 1 
		            WHEN (SELECT COUNT(1) FROM TB_RDFOLDERACCS Z WHERE Z.record_center_id=E.record_center_id AND Z.folder_id=E.folder_id AND Z.accs_type_cd='1' AND Z.accs_user_id=#sesUserId:VARCHAR#) > 0 THEN 1
		            WHEN (SELECT COUNT(1) FROM TB_RDFOLDERREADDETL Z WHERE Z.record_center_id=E.record_center_id AND Z.folder_id=E.folder_id AND Z.read_aprov_cd='2' AND EXISTS (SELECT 1 FROM TB_RDREADREQ Y WHERE Y.record_center_id=Z.record_center_id AND Y.read_reqno=Z.read_reqno AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN Y.read_start_ymd AND Y.read_close_ymd)) > 0 THEN 1
		            ELSE 0
		       END) accs_flag
		    , E.efile_del_flag
			, E.creat_sys_cd||'-'||E.org_cd||'-'||E.clss_id||'-'||E.creat_yyyy||'-'||E.folder_reg_seq AS folder_key
			, E.ho_no
			, (SELECT COUNT(1) FROM TB_RDFOLDER F WHERE F.creat_sys_cd=E.creat_sys_cd AND F.org_cd=E.org_cd AND F.clss_id=E.clss_id AND F.creat_yyyy=E.creat_yyyy AND F.folder_reg_seq=E.folder_reg_seq) AS ho_no_cnt
		FROM (
			SELECT D.*
			FROM (
				SELECT ROWNUM AS rnum
					, C.*
				FROM (
					SELECT
						<dynamic>
							<isNotEqual property="checkParam" compareValue="Y">
								<isEmpty property="order">
									/*+ index_desc(A, TB_RDFOLDER_IX07) */ 
								</isEmpty>
								<isEqual property="order" compareValue="0">
									/*+ index_desc(A, TB_RDFOLDER_IX07) */ 
								</isEqual>
								<isEqual property="order" compareValue="1">
									/*+ index(A, TB_RDFOLDER_IX07) */ 
								</isEqual>
								<isEqual property="order" compareValue="2">
									/*+ index(A, TB_RDFOLDER_IX12) */ 
								</isEqual>
							</isNotEqual>
						</dynamic> 
						  A.record_center_id
						, A.folder_id
						, A.creat_sys_cd
						, A.org_cd
						, A.cur_keep_org_cd
						, A.clss_div_cd
						, A.clss_id
						, A.clss_nm
						, A.new_clss_id
						, A.new_clss_nm
						, A.creat_yyyy
						, A.title
						, A.presv_term_cd
						, A.erecord_flag
						, A.folder_keep_state_cd
						, A.oper_read_range_cd
						, A.efile_del_flag
						, A.folder_reg_seq
						, A.ho_no
					FROM  TB_RDFOLDER A
					WHERE A.record_center_id = #recordCenterId:VARCHAR#
					<dynamic>
						<isNotEmpty prepend="AND" property="creatSysCd">
							A.creat_sys_cd = #creatSysCd:VARCHAR#
						</isNotEmpty>	
						<isNotEmpty prepend="AND" property="orgCd">
							A.org_cd = #orgCd:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="clssId">
						    <isEqual property="clssDivCd" compareValue="1">
								(A.clss_id = #clssId:VARCHAR# OR A.new_clss_id = #clssId:VARCHAR#)
							</isEqual>
							<isNotEqual property="clssDivCd" compareValue="1">
						    	A.clss_id = #clssId:VARCHAR#
						    </isNotEqual>
						</isNotEmpty>	
						<isNotEmpty prepend="AND" property="creatYyyy">
							A.creat_yyyy = #creatYyyy:VARCHAR#
						</isNotEmpty>	
						<isNotEmpty prepend="AND" property="folderRegSeq">
							A.folder_reg_seq = #folderRegSeq:VARCHAR#
						</isNotEmpty>	
						<isNotEmpty prepend="AND" property="hoNo">
							A.ho_no = #hoNo:VARCHAR#
						</isNotEmpty>	
						<isNotEmpty prepend="AND" property="arrTitle">
							<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">A.title LIKE #arrTitle[]:VARCHAR#</iterate>
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="innerTitle">
							A.title LIKE #innerTitle:VARCHAR#
						</isNotEmpty>
						<isNotEqual property="readRangType" compareValue="1">
							<isNotEqual prepend="AND" property="sesUserDiv" compareValue="3">
							    A.oper_read_range_cd != '03'
							</isNotEqual>
						</isNotEqual>
						<isNotEmpty prepend="AND" property="arrFolderKeepStateCd">
							A.folder_keep_state_cd IN <iterate property="arrFolderKeepStateCd" open="(" close=")" conjunction=",">#arrFolderKeepStateCd[]:VARCHAR#</iterate>
						</isNotEmpty>
						<isEqual property="checkParam" compareValue="Y">
							<isEmpty property="order">
								ORDER BY A.record_center_id, A.creat_yyyy DESC, A.title DESC
							</isEmpty>
							<isEqual property="order" compareValue="0">
								ORDER BY A.record_center_id, A.creat_yyyy DESC, A.title DESC
							</isEqual>
							<isEqual property="order" compareValue="1">
								ORDER BY A.record_center_id, A.creat_yyyy, A.title
							</isEqual>
							<isEqual property="order" compareValue="2">
								ORDER BY A.record_center_id, A.title, A.creat_yyyy
							</isEqual>
						</isEqual>
					</dynamic>
				) C
				WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
			) D
			WHERE D.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
		) E
		ORDER BY E.rnum
	</select>

	<!--
		조건별검색_기록물철분류번호
		: 기록물철 목록 조회 (보유 + 이관/폐기/기관간인계 목록 포함)
	-->
	<select id="countDetailsClssNoFolderPagedList_union" parameterClass="rms.srch.srch.domain.DetailsFolder" resultClass="java.lang.Long">
		SELECT COUNT(1)
		FROM (
			(
				SELECT A.folder_id
				FROM  TB_RDFOLDER A
				WHERE A.record_center_id = #recordCenterId:VARCHAR#
				<dynamic>
					<isNotEmpty prepend="AND" property="creatSysCd">
						A.creat_sys_cd = #creatSysCd:VARCHAR#
					</isNotEmpty>	
					<isNotEmpty prepend="AND" property="orgCd">
						A.org_cd = #orgCd:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="clssId">
					    <isEqual property="clssDivCd" compareValue="1">
							(A.clss_id = #clssId:VARCHAR# OR A.new_clss_id = #clssId:VARCHAR#)
						</isEqual>
						<isNotEqual property="clssDivCd" compareValue="1">
					    	A.clss_id = #clssId:VARCHAR#
					    </isNotEqual>
					</isNotEmpty>	
					<isNotEmpty prepend="AND" property="creatYyyy">
						A.creat_yyyy = #creatYyyy:VARCHAR#
					</isNotEmpty>	
					<isNotEmpty prepend="AND" property="folderRegSeq">
						A.folder_reg_seq = #folderRegSeq:VARCHAR#
					</isNotEmpty>	
					<isNotEmpty prepend="AND" property="hoNo">
						A.ho_no = #hoNo:VARCHAR#
					</isNotEmpty>	
					<isNotEqual property="readRangType" compareValue="1">
						<isNotEqual prepend="AND" property="sesUserDiv" compareValue="3">
						    A.oper_read_range_cd != '03'
						</isNotEqual>
					</isNotEqual>
					<isNotEmpty prepend="AND" property="arrTitle">
						<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">A.title LIKE #arrTitle[]:VARCHAR#</iterate>
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="innerTitle">
						A.title LIKE #innerTitle:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="arrFolderKeepStateCd">
						A.folder_keep_state_cd IN <iterate property="arrFolderKeepStateCd" open="(" close=")" conjunction=",">#arrFolderKeepStateCd[]:VARCHAR#</iterate>
					</isNotEmpty>
				</dynamic>
			)
			UNION ALL
			(
				SELECT A.folder_id
				FROM  TB_NKFOLDER A
				WHERE A.record_center_id = #recordCenterId:VARCHAR#
				<dynamic>
					<isNotEmpty prepend="AND" property="creatSysCd">
						A.creat_sys_cd = #creatSysCd:VARCHAR#
					</isNotEmpty>	
					<isNotEmpty prepend="AND" property="orgCd">
						A.org_cd = #orgCd:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="clssId">
					    <isEqual property="clssDivCd" compareValue="1">
							(A.clss_id = #clssId:VARCHAR# OR A.new_clss_id = #clssId:VARCHAR#)
						</isEqual>
						<isNotEqual property="clssDivCd" compareValue="1">
					    	A.clss_id = #clssId:VARCHAR#
					    </isNotEqual>
					</isNotEmpty>	
					<isNotEmpty prepend="AND" property="creatYyyy">
						A.creat_yyyy = #creatYyyy:VARCHAR#
					</isNotEmpty>	
					<isNotEmpty prepend="AND" property="folderRegSeq">
						A.folder_reg_seq = #folderRegSeq:VARCHAR#
					</isNotEmpty>	
					<isNotEmpty prepend="AND" property="hoNo">
						A.ho_no = #hoNo:VARCHAR#
					</isNotEmpty>	
					<isNotEqual property="readRangType" compareValue="1">
						<isNotEqual prepend="AND" property="sesUserDiv" compareValue="3">
						    A.oper_read_range_cd != '03'
						</isNotEqual>
					</isNotEqual>
					<isNotEmpty prepend="AND" property="arrTitle">
						<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">A.title LIKE #arrTitle[]:VARCHAR#</iterate>
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="innerTitle">
						A.title LIKE #innerTitle:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="arrFolderKeepStateCd">
						A.folder_keep_state_cd IN <iterate property="arrFolderKeepStateCd" open="(" close=")" conjunction=",">#arrFolderKeepStateCd[]:VARCHAR#</iterate>
					</isNotEmpty>
				</dynamic>
			)
		)
	</select>
	<select id="findDetailsClssNoFolderPagedList_union" parameterClass="rms.srch.srch.domain.DetailsFolder" resultMap="findDetailsClssNoFolderPagedList-result">
		SELECT E.record_center_id
			, E.org_cd
			, E.folder_id
			<dynamic>
				<isEmpty prepend="" property="clssId">
			    	, DECODE(E.clss_div_cd,'1',E.clss_nm
		            					  ,'2',DECODE(E.new_clss_id,NULL,E.clss_nm
		                                                                ,E.new_clss_nm)) clss_nm
				</isEmpty>
				<isNotEmpty prepend="" property="clssId">
					<isEqual property="clssDivCd" compareValue="1">
					       , DECODE(E.clss_div_cd,'1',E.clss_nm
					                             ,'2',E.new_clss_nm) clss_nm
					</isEqual>
					<isNotEqual property="clssDivCd" compareValue="1">
					       , E.clss_nm
					</isNotEqual>
				</isNotEmpty>
			</dynamic>
			, E.title
			, E.creat_yyyy
			, (SELECT Z.org_nm FROM TB_STORG Z WHERE Z.record_center_id=E.record_center_id AND Z.org_cd=E.org_cd) org_nm
			, (SELECT Z.org_abbr_nm FROM TB_STORG Z WHERE Z.record_center_id=E.record_center_id AND Z.org_cd=E.org_cd) org_abbr_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD07' AND Z.com_cd=E.presv_term_cd) presv_term_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD17' AND Z.com_cd=E.creat_sys_cd) creat_sys_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD23' AND Z.com_cd=E.erecord_flag) erecord_flag_nm
			, (SELECT Z.agent_nm FROM TB_RDFOLDERCREAT Z
			    WHERE Z.record_center_id=E.record_center_id
			    AND   Z.folder_id=E.folder_id
			    AND   Z.agent_sno=(SELECT MAX(Y.agent_sno) FROM TB_RDFOLDERCREAT Y WHERE Y.record_center_id=E.record_center_id AND Y.folder_id=E.folder_id)) agent_nm
			, E.folder_keep_state_cd
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD32' AND Z.com_cd=E.folder_keep_state_cd) folder_keep_state_nm
			, E.creat_sys_cd
			, (CASE WHEN (SELECT COUNT(1) FROM TB_RDRECORD Z WHERE Z.record_center_id=E.record_center_id AND Z.folder_id=E.folder_id AND Z.oper_read_range_cd IN ('02','03')) > 0 THEN '02' ELSE '01' END) AS oper_read_range_cd
		    , (CASE WHEN (SELECT COUNT(1) FROM TB_RDRECORD Z WHERE Z.record_center_id=E.record_center_id AND Z.folder_id=E.folder_id AND Z.oper_read_range_cd IN ('02','03')) > 0 THEN '열람제한' ELSE '열람가능' END) AS oper_read_range_nm
		    , (CASE WHEN '3'=#sesUserDiv:VARCHAR# AND E.record_center_id = (SELECT Z.record_center_id FROM TB_STUSER Z WHERE Z.USER_ID = #sesUserId:VARCHAR#) THEN 1
		    		WHEN E.oper_read_range_cd='01' THEN 1
					<isEqual property="orgUserAccsType" compareValue="1">
					WHEN (E.oper_read_range_cd='02' AND E.cur_keep_org_cd=#sesOrgCd:VARCHAR#) THEN 1
					</isEqual>
					<isEqual property="orgUserAccsType" compareValue="2">
					WHEN E.cur_keep_org_cd=#sesOrgCd:VARCHAR# THEN 1
					</isEqual>
		            WHEN (SELECT COUNT(1) FROM TB_RDFOLDERACCS Z WHERE Z.record_center_id=E.record_center_id AND Z.folder_id=E.folder_id AND Z.accs_type_cd='2' AND Z.accs_dept_cd=#sesOrgCd:VARCHAR#) > 0 THEN 1 
		            WHEN (SELECT COUNT(1) FROM TB_RDFOLDERACCS Z WHERE Z.record_center_id=E.record_center_id AND Z.folder_id=E.folder_id AND Z.accs_type_cd='1' AND Z.accs_user_id=#sesUserId:VARCHAR#) > 0 THEN 1
		            WHEN (SELECT COUNT(1) FROM TB_RDFOLDERREADDETL Z WHERE Z.record_center_id=E.record_center_id AND Z.folder_id=E.folder_id AND Z.read_aprov_cd='2' AND EXISTS (SELECT 1 FROM TB_RDREADREQ Y WHERE Y.record_center_id=Z.record_center_id AND Y.read_reqno=Z.read_reqno AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN Y.read_start_ymd AND Y.read_close_ymd)) > 0 THEN 1
		            ELSE 0
		       END) accs_flag
		    , E.efile_del_flag
			, E.creat_sys_cd||'-'||E.org_cd||'-'||E.clss_id||'-'||E.creat_yyyy||'-'||E.folder_reg_seq AS folder_key
			, E.ho_no
			, (SELECT COUNT(1) FROM TB_RDFOLDER F WHERE F.creat_sys_cd=E.creat_sys_cd AND F.org_cd=E.org_cd AND F.clss_id=E.clss_id AND F.creat_yyyy=E.creat_yyyy AND F.folder_reg_seq=E.folder_reg_seq) AS ho_no_cnt
		FROM (
			SELECT D.*
			FROM (
				SELECT ROWNUM AS rnum
					, C.*
				FROM (
					(
						SELECT
							<dynamic>
								<isNotEqual property="checkParam" compareValue="Y">
									<isEmpty property="order">
										/*+ index_desc(A, TB_RDFOLDER_IX07) */ 
									</isEmpty>
									<isEqual property="order" compareValue="0">
										/*+ index_desc(A, TB_RDFOLDER_IX07) */ 
									</isEqual>
									<isEqual property="order" compareValue="1">
										/*+ index(A, TB_RDFOLDER_IX07) */ 
									</isEqual>
									<isEqual property="order" compareValue="2">
										/*+ index(A, TB_RDFOLDER_IX12) */ 
									</isEqual>
								</isNotEqual>
							</dynamic> 
							  A.record_center_id
							, A.folder_id
							, A.creat_sys_cd
							, A.org_cd
							, A.cur_keep_org_cd
							, A.clss_div_cd
							, A.clss_id
							, A.clss_nm
							, A.new_clss_id
							, A.new_clss_nm
							, A.creat_yyyy
							, A.title
							, A.presv_term_cd
							, A.erecord_flag
							, A.folder_keep_state_cd
							, A.oper_read_range_cd
							, A.efile_del_flag
							, A.folder_reg_seq
							, A.ho_no
						FROM  TB_RDFOLDER A
						WHERE A.record_center_id = #recordCenterId:VARCHAR#
						<dynamic>
							<isNotEmpty prepend="AND" property="creatSysCd">
								A.creat_sys_cd = #creatSysCd:VARCHAR#
							</isNotEmpty>	
							<isNotEmpty prepend="AND" property="orgCd">
								A.org_cd = #orgCd:VARCHAR#
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="clssId">
							    <isEqual property="clssDivCd" compareValue="1">
									(A.clss_id = #clssId:VARCHAR# OR A.new_clss_id = #clssId:VARCHAR#)
								</isEqual>
								<isNotEqual property="clssDivCd" compareValue="1">
							    	A.clss_id = #clssId:VARCHAR#
							    </isNotEqual>
							</isNotEmpty>	
							<isNotEmpty prepend="AND" property="creatYyyy">
								A.creat_yyyy = #creatYyyy:VARCHAR#
							</isNotEmpty>	
							<isNotEmpty prepend="AND" property="folderRegSeq">
								A.folder_reg_seq = #folderRegSeq:VARCHAR#
							</isNotEmpty>	
							<isNotEmpty prepend="AND" property="hoNo">
								A.ho_no = #hoNo:VARCHAR#
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="arrTitle">
								<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">A.title LIKE #arrTitle[]:VARCHAR#</iterate>
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="innerTitle">
								A.title LIKE #innerTitle:VARCHAR#
							</isNotEmpty>
							<isNotEqual property="readRangType" compareValue="1">
								<isNotEqual prepend="AND" property="sesUserDiv" compareValue="3">
								    A.oper_read_range_cd != '03'
								</isNotEqual>
							</isNotEqual>
							<isNotEmpty prepend="AND" property="arrFolderKeepStateCd">
								A.folder_keep_state_cd IN <iterate property="arrFolderKeepStateCd" open="(" close=")" conjunction=",">#arrFolderKeepStateCd[]:VARCHAR#</iterate>
							</isNotEmpty>
						</dynamic>
					)
					UNION ALL
					(
						SELECT
							<dynamic>
								<isNotEqual property="checkParam" compareValue="Y">
									<isEmpty property="order">
										/*+ index_desc(A, TB_NKFOLDER_IX07) */ 
									</isEmpty>
									<isEqual property="order" compareValue="0">
										/*+ index_desc(A, TB_NKFOLDER_IX07) */ 
									</isEqual>
									<isEqual property="order" compareValue="1">
										/*+ index(A, TB_NKFOLDER_IX07) */ 
									</isEqual>
									<isEqual property="order" compareValue="2">
										/*+ index(A, TB_NKFOLDER_IX12) */ 
									</isEqual>
								</isNotEqual>
							</dynamic> 
							  A.record_center_id
							, A.folder_id
							, A.creat_sys_cd
							, A.org_cd
							, A.cur_keep_org_cd
							, A.clss_div_cd
							, A.clss_id
							, A.clss_nm
							, A.new_clss_id
							, A.new_clss_nm
							, A.creat_yyyy
							, A.title
							, A.presv_term_cd
							, A.erecord_flag
							, A.folder_keep_state_cd
							, A.oper_read_range_cd
							, A.efile_del_flag
							, A.folder_reg_seq
							, A.ho_no
						FROM  TB_NKFOLDER A
						WHERE A.record_center_id = #recordCenterId:VARCHAR#
						<dynamic>
							<isNotEmpty prepend="AND" property="creatSysCd">
								A.creat_sys_cd = #creatSysCd:VARCHAR#
							</isNotEmpty>	
							<isNotEmpty prepend="AND" property="orgCd">
								A.org_cd = #orgCd:VARCHAR#
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="clssId">
							    <isEqual property="clssDivCd" compareValue="1">
									(A.clss_id = #clssId:VARCHAR# OR A.new_clss_id = #clssId:VARCHAR#)
								</isEqual>
								<isNotEqual property="clssDivCd" compareValue="1">
							    	A.clss_id = #clssId:VARCHAR#
							    </isNotEqual>
							</isNotEmpty>	
							<isNotEmpty prepend="AND" property="creatYyyy">
								A.creat_yyyy = #creatYyyy:VARCHAR#
							</isNotEmpty>	
							<isNotEmpty prepend="AND" property="folderRegSeq">
								A.folder_reg_seq = #folderRegSeq:VARCHAR#
							</isNotEmpty>	
							<isNotEmpty prepend="AND" property="hoNo">
								A.ho_no = #hoNo:VARCHAR#
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="arrTitle">
								<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">A.title LIKE #arrTitle[]:VARCHAR#</iterate>
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="innerTitle">
								A.title LIKE #innerTitle:VARCHAR#
							</isNotEmpty>
							<isNotEqual property="readRangType" compareValue="1">
								<isNotEqual prepend="AND" property="sesUserDiv" compareValue="3">
								    A.oper_read_range_cd != '03'
								</isNotEqual>
							</isNotEqual>
							<isNotEmpty prepend="AND" property="arrFolderKeepStateCd">
								A.folder_keep_state_cd IN <iterate property="arrFolderKeepStateCd" open="(" close=")" conjunction=",">#arrFolderKeepStateCd[]:VARCHAR#</iterate>
							</isNotEmpty>
						</dynamic>
					)
					<isEqual property="checkParam" compareValue="Y">
						<isEmpty property="order">
							ORDER BY record_center_id, creat_yyyy DESC, title DESC
						</isEmpty>
						<isEqual property="order" compareValue="0">
							ORDER BY record_center_id, creat_yyyy DESC, title DESC
						</isEqual>
						<isEqual property="order" compareValue="1">
							ORDER BY record_center_id, creat_yyyy, title
						</isEqual>
						<isEqual property="order" compareValue="2">
							ORDER BY record_center_id, title, creat_yyyy
						</isEqual>
					</isEqual>
				) C
				WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
			) D
			WHERE D.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
		) E
		ORDER BY E.rnum
	</select>

	<!--
		조건별검색_기록물건등록번호
		: 기록물건 목록 조회
	-->
	<resultMap id="findDetailsRegNoRecordPagedList-result" class="rms.srch.srch.domain.DetailsRecord">
		<result property = "recordCenterId" 	column = "RECORD_CENTER_ID"     />
		<result property = "folderOrgCd" 		column = "FOLDER_ORG_CD"        /> 
		<result property = "recordOrgCd" 		column = "RECORD_ORG_CD"        /> 		
		<result property = "folderId" 			column = "FOLDER_ID"			/>
		<result property = "recordId" 			column = "RECORD_ID"			/>
		<result property = "folderTitle" 		column = "FOLDER_TITLE"			/>
		<result property = "title" 				column = "TITLE"				/>
		<result property = "orgNm" 				column = "ORG_NM"				/>
		<result property = "orgAbbrNm" 			column = "ORG_ABBR_NM"      	/>
		<result property = "creatRegDtime" 		column = "CREAT_REG_DTIME"		/>
		<result property = "recordDetlTypeNm" 	column = "RECORD_DETL_TYPE_NM"	/>
		<result property = "openDivNm" 			column = "OPEN_DIV_NM"			/>
		<result property = "erecordFlagNm" 		column = "ERECORD_FLAG_NM"		/>
		<result property = "creatSysNm" 		column = "CREAT_SYS_NM"			/>
		<result property = "spclRecordTypeNm" 	column = "SPCL_RECORD_TYPE_NM"	/>
		<result property = "scanFinFlag" 	    column = "SCAN_FIN_FLAG"		/>
		<result property = "folderKeepStateCd" 	column = "FOLDER_KEEP_STATE_CD"	/>
		<result property = "folderKeepStateNm" 	column = "FOLDER_KEEP_STATE_NM"	/>
		<result property = "creatSysCd" 	    column = "CREAT_SYS_CD"			/>
		<result property = "scanProgStateCd" 	column = "SCAN_PROG_STATE_CD"	/>
		<result property = "folderReadRangeCd" 	column = "FOLDER_READ_RANGE_CD"	/>
		<result property = "operReadRangeCd" 	column = "OPER_READ_RANGE_CD"	/>
		<result property = "operReadRangeNm"    column = "OPER_READ_RANGE_NM"	/>
		<result property = "folderAccsFlag" 	column = "FOLDER_ACCS_FLAG"		/>
		<result property = "accsFlag" 			column = "ACCS_FLAG"			/>
		<result property = "dutyChrgrNm" 		column = "DUTY_CHRGR_NM"		/>
		<result property = "efileDelFlag" 		column = "EFILE_DEL_FLAG"		/>
		<result property = "folderKey" 			column = "folder_key"			/>
		<result property = "hoNo" 				column = "ho_no"				/>
		<result property = "creatYyyy" 			column = "creat_yyyy"			/>
		<result property = "creatRegNo" 		column = "creat_reg_no"			/>
		<result property = "dtchRegNo" 			column = "dtch_reg_no"			/>
		<result property = "creatSysRecordId" 	column = "creat_sys_record_id"	/>
		<result property = "recordDetlTypeCd" 	column = "record_detl_type_cd"	/>
		<result property = "docNo" 				column = "doc_no"				/>
		<result property = "creatRegNoSub" 		column = "creat_reg_no_sub"		/>
		<result property = "prodTypeCd" 		column = "prod_type_cd"			/>
	</resultMap>
	<select id="countDetailsRegNoRecordPagedList" parameterClass="rms.srch.srch.domain.DetailsRecord" resultClass="java.lang.Long">
		SELECT COUNT(1)
		FROM (
			SELECT 	B.*
					, (SELECT cur_keep_org_cd      FROM TB_RDFOLDER Z WHERE B.record_center_id = Z.record_center_id AND B.folder_id = Z.folder_id) AS folder_cur_keep_org_cd
					, (SELECT folder_keep_state_cd FROM TB_RDFOLDER Z WHERE B.record_center_id = Z.record_center_id AND B.folder_id = Z.folder_id) AS folder_keep_state_cd
					, (SELECT oper_read_range_cd   FROM TB_RDFOLDER Z WHERE B.record_center_id = Z.record_center_id AND B.folder_id = Z.folder_id) AS folder_read_range_cd
			FROM TB_RDRECORD  B
		) A
		WHERE A.record_center_id = #recordCenterId:VARCHAR#
		<dynamic>
			<isNotEmpty prepend="AND" property="creatSysCd">
				A.creat_sys_cd = #creatSysCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="orgCd">
				A.org_cd = #orgCd:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="creatFromYyyy">
				A.creat_yyyy = #creatFromYyyy:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="creatRegNo">
				A.creat_reg_no = #creatRegNo:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="dtchRegNo">
				A.dtch_reg_no = #dtchRegNo:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="arrTitle">
				<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">A.title LIKE #arrTitle[]:VARCHAR#</iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="innerTitle">
				A.title LIKE #innerTitle:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="oldRecordDocno">
				(A.doc_no LIKE #oldRecordDocno:VARCHAR# OR A.old_record_docno LIKE #oldRecordDocno:VARCHAR#)
			</isNotEmpty>
			<isNotEqual property="readRangType" compareValue="1">
				<isNotEqual prepend="AND" property="sesUserDiv" compareValue="3">
				    A.oper_read_range_cd != '03' AND A.folder_read_range_cd != '03'
				</isNotEqual>
			</isNotEqual>
			<isNotEmpty prepend="AND" property="arrFolderKeepStateCd">
				A.folder_keep_state_cd IN <iterate property="arrFolderKeepStateCd" open="(" close=")" conjunction=",">#arrFolderKeepStateCd[]:VARCHAR#</iterate>
			</isNotEmpty>
		</dynamic>
	</select>
	<select id="findDetailsRegNoRecordPagedList" parameterClass="rms.srch.srch.domain.DetailsRecord" resultMap="findDetailsRegNoRecordPagedList-result">
		SELECT E.record_center_id
			, E.folder_org_cd
			, E.record_org_cd
			, E.folder_id
			, E.record_id
			, E.folder_title
			, E.title
			, (SELECT Z.org_nm FROM TB_STORG Z WHERE Z.record_center_id=E.record_center_id AND Z.org_cd=E.record_org_cd) org_nm
			, (SELECT Z.org_abbr_nm FROM TB_STORG Z WHERE Z.record_center_id=E.record_center_id AND Z.org_cd=E.record_org_cd) org_abbr_nm
			, SUBSTR(E.creat_reg_dtime,0,8) creat_reg_dtime
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD03' AND Z.com_cd=E.record_detl_type_cd) record_detl_type_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD05' AND Z.com_cd=E.open_div_cd) open_div_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD23' AND Z.com_cd=E.erecord_flag) erecord_flag_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD17' AND Z.com_cd=E.creat_sys_cd) creat_sys_nm
			, (DECODE(SUBSTR(E.spcl_record_type,1,1),'N','','Y',(SELECT com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='1'))
				||DECODE(SUBSTR(E.spcl_record_type,2,1),'N','','Y',(SELECT ','||com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='2'))
				||DECODE(SUBSTR(E.spcl_record_type,3,1),'N','','Y',(SELECT ','||com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='3'))
				||DECODE(SUBSTR(E.spcl_record_type,4,1),'N','','Y',(SELECT ','||com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='4'))
				||DECODE(SUBSTR(E.spcl_record_type,5,1),'N','','Y',(SELECT ','||com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='5'))) SPCL_RECORD_TYPE_NM
			, E.scan_fin_flag
			, E.folder_keep_state_cd
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD32' AND Z.com_cd=E.folder_keep_state_cd) folder_keep_state_nm
			, E.creat_sys_cd
			, E.scan_prog_state_cd
			, E.oper_read_range_cd
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD53' AND Z.com_cd=E.oper_read_range_cd) oper_read_range_nm
			, E.folder_read_range_cd
		    , (CASE WHEN '3'=#sesUserDiv:VARCHAR# AND E.record_center_id = (SELECT Z.record_center_id FROM TB_STUSER Z WHERE Z.USER_ID = #sesUserId:VARCHAR#) THEN 1
					WHEN E.folder_read_range_cd='01' THEN 1
					<isEqual property="orgUserAccsType" compareValue="1">
					WHEN (E.folder_read_range_cd='02' AND E.folder_cur_keep_org_cd=#sesOrgCd:VARCHAR#) THEN 1
					</isEqual>
					<isEqual property="orgUserAccsType" compareValue="2">
					WHEN E.folder_cur_keep_org_cd=#sesOrgCd:VARCHAR# THEN 1
					</isEqual>
		            WHEN (SELECT COUNT(1) FROM TB_RDFOLDERACCS Z WHERE Z.record_center_id=E.record_center_id AND Z.folder_id=E.folder_id AND Z.accs_type_cd='2' AND Z.accs_dept_cd=#sesOrgCd:VARCHAR#) > 0 THEN 1 
		            WHEN (SELECT COUNT(1) FROM TB_RDFOLDERACCS Z WHERE Z.record_center_id=E.record_center_id AND Z.folder_id=E.folder_id AND Z.accs_type_cd='1' AND Z.accs_user_id=#sesUserId:VARCHAR#) > 0 THEN 1
		            ELSE 0
		       END) folder_accs_flag
		    , (CASE WHEN #sesUserDiv:VARCHAR# = '3' AND E.record_center_id = (SELECT Z.record_center_id FROM TB_STUSER Z WHERE Z.USER_ID = #sesUserId:VARCHAR#) THEN 1
					WHEN E.oper_read_range_cd='01' THEN 1
					<isEqual property="orgUserAccsType" compareValue="1">
					WHEN (E.oper_read_range_cd='02' AND #sesOrgCd:VARCHAR# = (SELECT B.CUR_KEEP_ORG_CD FROM TB_RDFOLDER B WHERE B.folder_id=E.folder_id AND B.record_center_id=E.record_center_id)) THEN 1
					</isEqual>
					<isEqual property="orgUserAccsType" compareValue="2">
					WHEN #sesOrgCd:VARCHAR# = (SELECT B.CUR_KEEP_ORG_CD FROM TB_RDFOLDER B WHERE B.folder_id=E.folder_id AND B.record_center_id=E.record_center_id) THEN 1
					</isEqual>
		            WHEN (SELECT COUNT(1) FROM TB_RDRECORDACCS Z WHERE Z.record_center_id=E.record_center_id AND Z.record_id=E.record_id AND Z.accs_type_cd='2' AND Z.accs_dept_cd=#sesOrgCd:VARCHAR#) > 0 THEN 1 
		            WHEN (SELECT COUNT(1) FROM TB_RDRECORDACCS Z WHERE Z.record_center_id=E.record_center_id AND Z.record_id=E.record_id AND Z.accs_type_cd='1' AND Z.accs_user_id=#sesUserId:VARCHAR#) > 0 THEN 1
		            ELSE 0
		       END) accs_flag
		    , E.duty_chrgr_nm
		    , E.efile_del_flag
		    , E.prod_type_cd
       		, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd = 'RD02' AND Z.com_cd = E.record_reg_div_cd) record_reg_div_nm
       		, E.folder_key
       		, E.ho_no
       		, E.creat_yyyy, E.creat_reg_no, E.dtch_reg_no, E.creat_sys_record_id, E.record_detl_type_cd, E.doc_no
       		, SUBSTR(E.creat_reg_no, 8, 6) creat_reg_no_sub
		FROM (
			SELECT D.*
			FROM (
				SELECT ROWNUM AS rnum
					, C.*
				FROM (
						SELECT
							<dynamic>
								<isNotEqual property="checkParam" compareValue="Y">
									<isEmpty property="order">
										/*+ index_desc(A TB_RDRECORD_IX09) */ 
									</isEmpty>
									<isEqual property="order" compareValue="0">
										/*+ index_desc(A TB_RDRECORD_IX09) */ 
									</isEqual>
									<isEqual property="order" compareValue="1">
										/*+ index(A TB_RDRECORD_IX09) */ 
									</isEqual>
									<isEqual property="order" compareValue="2">
										/*+ index(A TB_RDRECORD_IX08) */ 
									</isEqual>
								</isNotEqual>
							</dynamic> 
						      A.record_center_id
							, A.org_cd AS record_org_cd
							, A.folder_id
							, A.record_id
							, A.title
							, A.creat_reg_dtime
							, A.record_detl_type_cd
							, A.open_div_cd
							, A.erecord_flag
							, A.creat_sys_cd
							, A.creat_yyyy
							, A.doc_no
							, A.old_record_docno
							, A.spcl_record_type
							, A.scan_fin_flag
							, A.oper_read_range_cd
							, A.duty_chrgr_nm
							, A.record_clss_cd
							, A.record_reg_div_cd
							, A.creat_reg_no
							, A.dtch_reg_no
							, A.creat_sys_record_id
<!-- 							, (CASE WHEN A.record_reg_div_cd IN ('1','3','5','6','8') THEN 0 ELSE 1 END) prod_type_cd -->
							, (CASE WHEN A.prod_type_cd is not null THEN A.prod_type_cd ELSE (CASE WHEN A.record_reg_div_cd IN ('1','3','5','6','7','8') THEN '0' ELSE '1' END) END) prod_type_cd
							, Z.org_cd	AS folder_org_cd
							, Z.cur_keep_org_cd AS folder_cur_keep_org_cd
							, Z.title	AS folder_title
							, Z.oper_read_range_cd   	AS folder_read_range_cd
							, Z.clss_id					AS clss_id
							, Z.new_clss_id				AS new_clss_id
							, Z.scan_prog_state_cd		AS scan_prog_state_cd
							, Z.folder_keep_state_cd 	AS folder_keep_state_cd
							, Z.efile_del_flag
							, Z.creat_sys_cd||'-'||Z.org_cd||'-'||Z.clss_id||'-'||Z.creat_yyyy||'-'||Z.folder_reg_seq AS folder_key
							, Z.ho_no
						FROM TB_RDRECORD A , TB_RDFOLDER Z
					   WHERE Z.record_center_id=A.record_center_id 
					     AND Z.folder_id=A.folder_id 
					     AND A.record_center_id = #recordCenterId:VARCHAR#
					<dynamic>
						<isNotEmpty prepend="AND" property="creatSysCd">
							A.creat_sys_cd = #creatSysCd:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="orgCd">
							A.org_cd = #orgCd:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="creatFromYyyy">
							A.creat_yyyy = #creatFromYyyy:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="creatRegNo">
							A.creat_reg_no = #creatRegNo:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="dtchRegNo">
							A.dtch_reg_no = #dtchRegNo:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="arrTitle">
							<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">A.title LIKE #arrTitle[]:VARCHAR#</iterate>
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="innerTitle">
							A.title LIKE #innerTitle:VARCHAR#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="oldRecordDocno">
							(A.doc_no LIKE #oldRecordDocno:VARCHAR# OR A.old_record_docno LIKE #oldRecordDocno:VARCHAR#)
						</isNotEmpty>
						<isNotEqual property="readRangType" compareValue="1">
							<isNotEqual prepend="AND" property="sesUserDiv" compareValue="3">
							    A.oper_read_range_cd != '03' AND Z.oper_read_range_cd != '03'
							</isNotEqual>
						</isNotEqual>
						<isNotEmpty prepend="AND" property="arrFolderKeepStateCd">
							Z.folder_keep_state_cd IN <iterate property="arrFolderKeepStateCd" open="(" close=")" conjunction=",">#arrFolderKeepStateCd[]:VARCHAR#</iterate>
						</isNotEmpty>
						<isEqual property="checkParam" compareValue="Y">
							<isEmpty property="order">
								ORDER BY A.record_center_id, A.creat_reg_dtime DESC, A.creat_reg_no DESC
							</isEmpty>
							<isEqual property="order" compareValue="0">
								ORDER BY A.record_center_id, A.creat_reg_dtime DESC, A.creat_reg_no DESC
							</isEqual>
							<isEqual property="order" compareValue="1">
								ORDER BY A.record_center_id, A.creat_reg_dtime, A.creat_reg_no
							</isEqual>
							<isEqual property="order" compareValue="2">
								ORDER BY A.record_center_id, A.title
							</isEqual>
						</isEqual>
					</dynamic>
					
				) C
				WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
			) D
			WHERE D.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
		) E
		ORDER BY E.rnum
	</select>
	<!--
		조건별검색_기록물건등록번호
		: 기록물건 목록 조회 (보유 + 이관/폐기/기관간인계 목록 포함)
	-->
	<select id="countDetailsRegNoRecordPagedList_union" parameterClass="rms.srch.srch.domain.DetailsRecord" resultClass="java.lang.Long">
		SELECT COUNT(1)
		FROM (
			(
				SELECT A.record_id
				FROM (
					SELECT 	B.*
							, (SELECT cur_keep_org_cd      FROM TB_RDFOLDER Z WHERE B.record_center_id = Z.record_center_id AND B.folder_id = Z.folder_id) AS folder_cur_keep_org_cd
							, (SELECT folder_keep_state_cd FROM TB_RDFOLDER Z WHERE B.record_center_id = Z.record_center_id AND B.folder_id = Z.folder_id) AS folder_keep_state_cd
							, (SELECT oper_read_range_cd   FROM TB_RDFOLDER Z WHERE B.record_center_id = Z.record_center_id AND B.folder_id = Z.folder_id) AS folder_read_range_cd
					FROM TB_RDRECORD  B
				) A
				WHERE A.record_center_id = #recordCenterId:VARCHAR#
				<dynamic>
					<isNotEmpty prepend="AND" property="creatSysCd">
						A.creat_sys_cd = #creatSysCd:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="orgCd">
						A.org_cd = #orgCd:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="creatFromYyyy">
						A.creat_yyyy = #creatFromYyyy:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="creatRegNo">
						A.creat_reg_no = #creatRegNo:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="dtchRegNo">
						A.dtch_reg_no = #dtchRegNo:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="arrTitle">
						<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">A.title LIKE #arrTitle[]:VARCHAR#</iterate>
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="innerTitle">
						A.title LIKE #innerTitle:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="oldRecordDocno">
						(A.doc_no LIKE #oldRecordDocno:VARCHAR# OR A.old_record_docno LIKE #oldRecordDocno:VARCHAR#)
					</isNotEmpty>
					<isNotEqual property="readRangType" compareValue="1">
						<isNotEqual prepend="AND" property="sesUserDiv" compareValue="3">
						    A.oper_read_range_cd != '03' AND A.folder_read_range_cd != '03'
						</isNotEqual>
					</isNotEqual>
					<isNotEmpty prepend="AND" property="arrFolderKeepStateCd">
						A.folder_keep_state_cd IN <iterate property="arrFolderKeepStateCd" open="(" close=")" conjunction=",">#arrFolderKeepStateCd[]:VARCHAR#</iterate>
					</isNotEmpty>
				</dynamic>
			)
			UNION ALL
			(
				SELECT A.record_id
				FROM (
					SELECT 	B.*
							, (SELECT cur_keep_org_cd      FROM TB_NKFOLDER Z WHERE B.record_center_id = Z.record_center_id AND B.folder_id = Z.folder_id) AS folder_cur_keep_org_cd
							, (SELECT folder_keep_state_cd FROM TB_NKFOLDER Z WHERE B.record_center_id = Z.record_center_id AND B.folder_id = Z.folder_id) AS folder_keep_state_cd
							, (SELECT oper_read_range_cd   FROM TB_NKFOLDER Z WHERE B.record_center_id = Z.record_center_id AND B.folder_id = Z.folder_id) AS folder_read_range_cd
					FROM TB_NKRECORD  B
				) A
				WHERE A.record_center_id = #recordCenterId:VARCHAR#
				<dynamic>
					<isNotEmpty prepend="AND" property="creatSysCd">
						A.creat_sys_cd = #creatSysCd:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="orgCd">
						A.org_cd = #orgCd:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="creatFromYyyy">
						A.creat_yyyy = #creatFromYyyy:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="creatRegNo">
						A.creat_reg_no = #creatRegNo:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="dtchRegNo">
						A.dtch_reg_no = #dtchRegNo:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="arrTitle">
						<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">A.title LIKE #arrTitle[]:VARCHAR#</iterate>
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="innerTitle">
						A.title LIKE #innerTitle:VARCHAR#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="oldRecordDocno">
						(A.doc_no LIKE #oldRecordDocno:VARCHAR# OR A.old_record_docno LIKE #oldRecordDocno:VARCHAR#)
					</isNotEmpty>
					<isNotEqual property="readRangType" compareValue="1">
						<isNotEqual prepend="AND" property="sesUserDiv" compareValue="3">
						    A.oper_read_range_cd != '03' AND A.folder_read_range_cd != '03'
						</isNotEqual>
					</isNotEqual>
					<isNotEmpty prepend="AND" property="arrFolderKeepStateCd">
						A.folder_keep_state_cd IN <iterate property="arrFolderKeepStateCd" open="(" close=")" conjunction=",">#arrFolderKeepStateCd[]:VARCHAR#</iterate>
					</isNotEmpty>
				</dynamic>
			)
		)
	</select>
	<select id="findDetailsRegNoRecordPagedList_union" parameterClass="rms.srch.srch.domain.DetailsRecord" resultMap="findDetailsRegNoRecordPagedList-result">
		SELECT E.record_center_id
			, E.folder_org_cd
			, E.record_org_cd
			, E.folder_id
			, E.record_id
			, E.folder_title
			, E.title
			, (SELECT Z.org_nm FROM TB_STORG Z WHERE Z.record_center_id=E.record_center_id AND Z.org_cd=E.record_org_cd) org_nm
			, (SELECT Z.org_abbr_nm FROM TB_STORG Z WHERE Z.record_center_id=E.record_center_id AND Z.org_cd=E.record_org_cd) org_abbr_nm
			, SUBSTR(E.creat_reg_dtime,0,8) creat_reg_dtime
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD03' AND Z.com_cd=E.record_detl_type_cd) record_detl_type_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD05' AND Z.com_cd=E.open_div_cd) open_div_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD23' AND Z.com_cd=E.erecord_flag) erecord_flag_nm
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD17' AND Z.com_cd=E.creat_sys_cd) creat_sys_nm
			, (DECODE(SUBSTR(E.spcl_record_type,1,1),'N','','Y',(SELECT com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='1'))
				||DECODE(SUBSTR(E.spcl_record_type,2,1),'N','','Y',(SELECT ','||com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='2'))
				||DECODE(SUBSTR(E.spcl_record_type,3,1),'N','','Y',(SELECT ','||com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='3'))
				||DECODE(SUBSTR(E.spcl_record_type,4,1),'N','','Y',(SELECT ','||com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='4'))
				||DECODE(SUBSTR(E.spcl_record_type,5,1),'N','','Y',(SELECT ','||com_cd_nm FROM TB_ZZCOMCD WHERE com_type_cd='RD18' AND com_cd='5'))) SPCL_RECORD_TYPE_NM
			, E.scan_fin_flag
			, E.folder_keep_state_cd
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD32' AND Z.com_cd=E.folder_keep_state_cd) folder_keep_state_nm
			, E.creat_sys_cd
			, E.scan_prog_state_cd
			, E.oper_read_range_cd
			, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd='RD53' AND Z.com_cd=E.oper_read_range_cd) oper_read_range_nm
			, E.folder_read_range_cd
		    , (CASE WHEN '3'=#sesUserDiv:VARCHAR# AND E.record_center_id = (SELECT Z.record_center_id FROM TB_STUSER Z WHERE Z.USER_ID = #sesUserId:VARCHAR#) THEN 1
					WHEN E.folder_read_range_cd='01' THEN 1
					<isEqual property="orgUserAccsType" compareValue="1">
					WHEN (E.folder_read_range_cd='02' AND E.folder_cur_keep_org_cd=#sesOrgCd:VARCHAR#) THEN 1
					</isEqual>
					<isEqual property="orgUserAccsType" compareValue="2">
					WHEN E.folder_cur_keep_org_cd=#sesOrgCd:VARCHAR# THEN 1
					</isEqual>
		            WHEN (SELECT COUNT(1) FROM TB_RDFOLDERACCS Z WHERE Z.record_center_id=E.record_center_id AND Z.folder_id=E.folder_id AND Z.accs_type_cd='2' AND Z.accs_dept_cd=#sesOrgCd:VARCHAR#) > 0 THEN 1 
		            WHEN (SELECT COUNT(1) FROM TB_RDFOLDERACCS Z WHERE Z.record_center_id=E.record_center_id AND Z.folder_id=E.folder_id AND Z.accs_type_cd='1' AND Z.accs_user_id=#sesUserId:VARCHAR#) > 0 THEN 1
		            ELSE 0
		       END) folder_accs_flag
		    , (CASE WHEN #sesUserDiv:VARCHAR# = '3' AND E.record_center_id = (SELECT Z.record_center_id FROM TB_STUSER Z WHERE Z.USER_ID = #sesUserId:VARCHAR#) THEN 1
					WHEN E.oper_read_range_cd='01' THEN 1
					<isEqual property="orgUserAccsType" compareValue="1">
					WHEN (E.oper_read_range_cd='02' AND #sesOrgCd:VARCHAR# = (SELECT B.CUR_KEEP_ORG_CD FROM TB_RDFOLDER B WHERE B.folder_id=E.folder_id AND B.record_center_id=E.record_center_id)) THEN 1
					</isEqual>
					<isEqual property="orgUserAccsType" compareValue="2">
					WHEN #sesOrgCd:VARCHAR# = (SELECT B.CUR_KEEP_ORG_CD FROM TB_RDFOLDER B WHERE B.folder_id=E.folder_id AND B.record_center_id=E.record_center_id) THEN 1
					</isEqual>
		            WHEN (SELECT COUNT(1) FROM TB_RDRECORDACCS Z WHERE Z.record_center_id=E.record_center_id AND Z.record_id=E.record_id AND Z.accs_type_cd='2' AND Z.accs_dept_cd=#sesOrgCd:VARCHAR#) > 0 THEN 1 
		            WHEN (SELECT COUNT(1) FROM TB_RDRECORDACCS Z WHERE Z.record_center_id=E.record_center_id AND Z.record_id=E.record_id AND Z.accs_type_cd='1' AND Z.accs_user_id=#sesUserId:VARCHAR#) > 0 THEN 1
		            ELSE 0
		       END) accs_flag
		    , E.duty_chrgr_nm
		    , E.efile_del_flag
		    , E.prod_type_cd
       		, (SELECT Z.com_cd_nm FROM TB_ZZCOMCD Z WHERE Z.com_type_cd = 'RD02' AND Z.com_cd = E.record_reg_div_cd) record_reg_div_nm
       		, E.folder_key
       		, E.ho_no
       		, E.creat_yyyy, E.creat_reg_no, E.dtch_reg_no, E.creat_sys_record_id, E.record_detl_type_cd, E.doc_no
       		, SUBSTR(E.creat_reg_no, 8, 6) creat_reg_no_sub
		FROM (
			SELECT D.*
			FROM (
				SELECT ROWNUM AS rnum
					, C.*
				FROM (
					(
						SELECT
							<dynamic>
								<isNotEqual property="checkParam" compareValue="Y">
									<isEmpty property="order">
										/*+ index_desc(A TB_RDRECORD_IX09) */ 
									</isEmpty>
									<isEqual property="order" compareValue="0">
										/*+ index_desc(A TB_RDRECORD_IX09) */ 
									</isEqual>
									<isEqual property="order" compareValue="1">
										/*+ index(A TB_RDRECORD_IX09) */ 
									</isEqual>
									<isEqual property="order" compareValue="2">
										/*+ index(A TB_RDRECORD_IX08) */ 
									</isEqual>
								</isNotEqual>
							</dynamic> 
						      A.record_center_id
							, A.org_cd AS record_org_cd
							, A.folder_id
							, A.record_id
							, A.title
							, A.creat_reg_dtime
							, A.record_detl_type_cd
							, A.open_div_cd
							, A.erecord_flag
							, A.creat_sys_cd
							, A.creat_yyyy
							, A.doc_no
							, A.old_record_docno
							, A.spcl_record_type
							, A.scan_fin_flag
							, A.oper_read_range_cd
							, A.duty_chrgr_nm
							, A.record_clss_cd
							, A.record_reg_div_cd
							, A.creat_reg_no
							, A.dtch_reg_no
							, A.creat_sys_record_id
<!-- 							, (CASE WHEN A.record_reg_div_cd IN ('1','3','5','6','8') THEN 0 ELSE 1 END) prod_type_cd -->
							, (CASE WHEN A.prod_type_cd is not null THEN A.prod_type_cd ELSE (CASE WHEN A.record_reg_div_cd IN ('1','3','5','6','7','8') THEN '0' ELSE '1' END) END) prod_type_cd
							, Z.org_cd	AS folder_org_cd
							, Z.cur_keep_org_cd AS folder_cur_keep_org_cd
							, Z.title	AS folder_title
							, Z.oper_read_range_cd   	AS folder_read_range_cd
							, Z.clss_id					AS clss_id
							, Z.new_clss_id				AS new_clss_id
							, Z.scan_prog_state_cd		AS scan_prog_state_cd
							, Z.folder_keep_state_cd 	AS folder_keep_state_cd
							, Z.efile_del_flag
							, Z.creat_sys_cd||'-'||Z.org_cd||'-'||Z.clss_id||'-'||Z.creat_yyyy||'-'||Z.folder_reg_seq AS folder_key
							, Z.ho_no
						FROM TB_RDRECORD A , TB_RDFOLDER Z
					   WHERE Z.record_center_id=A.record_center_id 
					     AND Z.folder_id=A.folder_id 
					     AND A.record_center_id = #recordCenterId:VARCHAR#
						<dynamic>
							<isNotEmpty prepend="AND" property="creatSysCd">
								A.creat_sys_cd = #creatSysCd:VARCHAR#
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="orgCd">
								A.org_cd = #orgCd:VARCHAR#
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="creatFromYyyy">
								A.creat_yyyy = #creatFromYyyy:VARCHAR#
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="creatRegNo">
								A.creat_reg_no = #creatRegNo:VARCHAR#
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="dtchRegNo">
								A.dtch_reg_no = #dtchRegNo:VARCHAR#
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="arrTitle">
								<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">A.title LIKE #arrTitle[]:VARCHAR#</iterate>
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="innerTitle">
								A.title LIKE #innerTitle:VARCHAR#
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="oldRecordDocno">
								(A.doc_no LIKE #oldRecordDocno:VARCHAR# OR A.old_record_docno LIKE #oldRecordDocno:VARCHAR#)
							</isNotEmpty>
							<isNotEqual property="readRangType" compareValue="1">
								<isNotEqual prepend="AND" property="sesUserDiv" compareValue="3">
								    A.oper_read_range_cd != '03' AND Z.oper_read_range_cd != '03'
								</isNotEqual>
							</isNotEqual>
							<isNotEmpty prepend="AND" property="arrFolderKeepStateCd">
								Z.folder_keep_state_cd IN <iterate property="arrFolderKeepStateCd" open="(" close=")" conjunction=",">#arrFolderKeepStateCd[]:VARCHAR#</iterate>
							</isNotEmpty>
						</dynamic>
					)
					UNION ALL
					(
						SELECT
							<dynamic>
								<isNotEqual property="checkParam" compareValue="Y">
									<isEmpty property="order">
										/*+ index_desc(A TB_NKRECORD_IX09) */ 
									</isEmpty>
									<isEqual property="order" compareValue="0">
										/*+ index_desc(A TB_NKRECORD_IX09) */ 
									</isEqual>
									<isEqual property="order" compareValue="1">
										/*+ index(A TB_NKRECORD_IX09) */ 
									</isEqual>
									<isEqual property="order" compareValue="2">
										/*+ index(A TB_NKRECORD_IX08) */ 
									</isEqual>
								</isNotEqual>
							</dynamic> 
						      A.record_center_id
							, A.org_cd AS record_org_cd
							, A.folder_id
							, A.record_id
							, A.title
							, A.creat_reg_dtime
							, A.record_detl_type_cd
							, A.open_div_cd
							, A.erecord_flag
							, A.creat_sys_cd
							, A.creat_yyyy
							, A.doc_no
							, A.old_record_docno
							, A.spcl_record_type
							, '' AS scan_fin_flag
							, A.oper_read_range_cd
							, A.duty_chrgr_nm
							, A.record_clss_cd
							, A.record_reg_div_cd
							, A.creat_reg_no
							, A.dtch_reg_no
							, A.creat_sys_record_id
<!-- 							, (CASE WHEN A.record_reg_div_cd IN ('1','3','5','6','8') THEN 0 ELSE 1 END) prod_type_cd -->
							, (CASE WHEN A.prod_type_cd is not null THEN A.prod_type_cd ELSE (CASE WHEN A.record_reg_div_cd IN ('1','3','5','6','7','8') THEN '0' ELSE '1' END) END) prod_type_cd
							, Z.org_cd	AS folder_org_cd
							, Z.cur_keep_org_cd AS folder_cur_keep_org_cd
							, Z.title	AS folder_title
							, Z.oper_read_range_cd   	AS folder_read_range_cd
							, Z.clss_id					AS clss_id
							, Z.new_clss_id				AS new_clss_id
							, Z.scan_prog_state_cd		AS scan_prog_state_cd
							, Z.folder_keep_state_cd 	AS folder_keep_state_cd
							, Z.efile_del_flag
							, Z.creat_sys_cd||'-'||Z.org_cd||'-'||Z.clss_id||'-'||Z.creat_yyyy||'-'||Z.folder_reg_seq AS folder_key
							, Z.ho_no
						FROM TB_NKRECORD A , TB_NKFOLDER Z
					   WHERE Z.record_center_id=A.record_center_id 
					     AND Z.folder_id=A.folder_id 
					     AND A.record_center_id = #recordCenterId:VARCHAR#
						<dynamic>
							<isNotEmpty prepend="AND" property="creatSysCd">
								A.creat_sys_cd = #creatSysCd:VARCHAR#
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="orgCd">
								A.org_cd = #orgCd:VARCHAR#
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="creatFromYyyy">
								A.creat_yyyy = #creatFromYyyy:VARCHAR#
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="creatRegNo">
								A.creat_reg_no = #creatRegNo:VARCHAR#
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="dtchRegNo">
								A.dtch_reg_no = #dtchRegNo:VARCHAR#
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="arrTitle">
								<iterate property="arrTitle" open="(" close=")" conjunction=" AND ">A.title LIKE #arrTitle[]:VARCHAR#</iterate>
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="innerTitle">
								A.title LIKE #innerTitle:VARCHAR#
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="oldRecordDocno">
								(A.doc_no LIKE #oldRecordDocno:VARCHAR# OR A.old_record_docno LIKE #oldRecordDocno:VARCHAR#)
							</isNotEmpty>
							<isNotEqual property="readRangType" compareValue="1">
								<isNotEqual prepend="AND" property="sesUserDiv" compareValue="3">
								    A.oper_read_range_cd != '03' AND Z.oper_read_range_cd != '03'
								</isNotEqual>
							</isNotEqual>
							<isNotEmpty prepend="AND" property="arrFolderKeepStateCd">
								Z.folder_keep_state_cd IN <iterate property="arrFolderKeepStateCd" open="(" close=")" conjunction=",">#arrFolderKeepStateCd[]:VARCHAR#</iterate>
							</isNotEmpty>
						</dynamic>
					)
					<isEqual property="checkParam" compareValue="Y">
						<isEmpty property="order">
							ORDER BY record_center_id, creat_reg_dtime DESC, creat_reg_no DESC
						</isEmpty>
						<isEqual property="order" compareValue="0">
							ORDER BY record_center_id, creat_reg_dtime DESC, creat_reg_no DESC
						</isEqual>
						<isEqual property="order" compareValue="1">
							ORDER BY record_center_id, creat_reg_dtime, creat_reg_no
						</isEqual>
						<isEqual property="order" compareValue="2">
							ORDER BY record_center_id, title
						</isEqual>
					</isEqual>
				) C
				WHERE ROWNUM <![CDATA[<=]]> #pagedEnd:NUMBER#
			) D
			WHERE D.rnum <![CDATA[>=]]> #pagedStart:NUMBER#
		) E
		ORDER BY E.rnum
	</select>
	
	<!-- 
		조건별검색_기록물철
		: 기록물철 열람신청 정보 저장
	 -->
	<select id="countReadReqFolderList" parameterClass="rms.srch.srch.domain.ReqListTemp" resultClass="int">
		SELECT COUNT(1) FROM TB_ZZREQLISTTEMP
		WHERE record_center_id = #recordCenterId:VARCHAR#
		AND   user_id = #userId:VARCHAR#
		AND   trgt_id = #trgtId:VARCHAR#
		AND   remk = 'READFOLDER'
	</select>
	<insert id="createReadReqFolderList" parameterClass="rms.srch.srch.domain.ReqListTemp">
		INSERT INTO TB_ZZREQLISTTEMP
		(
			record_center_id, user_id, trgt_id, remk, reg_dtime
		)
		VALUES
		(
			#recordCenterId:VARCHAR#, #userId:VARCHAR#, #trgtId:VARCHAR#, 'READFOLDER'
			<!--cubrid , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')-->
			, TO_CHAR(sys_datetime, 'YYYYMMDDHH24MISS')
		)
	</insert>
	<update id="updateReadReqFolderList" parameterClass="rms.srch.srch.domain.ReqListTemp">
		UPDATE TB_ZZREQLISTTEMP
		<!--cubrdi SET   reg_dtime = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')-->
		SET   reg_dtime = TO_CHAR(sys_datetime, 'YYYYMMDDHH24MISS')
		WHERE record_center_id = #recordCenterId:VARCHAR#
		AND   user_id = #userId:VARCHAR#
		AND   trgt_id = #trgtId:VARCHAR#
		AND   remk = 'READFOLDER'
	</update>
	
	<!-- 
		조건별검색_기록물건
		: 기록물건 열람신청 정보 저장
	 -->
	<select id="countReadReqRecordList" parameterClass="rms.srch.srch.domain.ReqListTemp" resultClass="int">
		SELECT COUNT(1) FROM TB_ZZREQLISTTEMP
		WHERE record_center_id = #recordCenterId:VARCHAR#
		AND   user_id = #userId:VARCHAR#
		AND   trgt_id = #trgtId:VARCHAR#
		AND   remk = 'READRECORD'
	</select>
	<insert id="createReadReqRecordList" parameterClass="rms.srch.srch.domain.ReqListTemp">
		INSERT INTO TB_ZZREQLISTTEMP
		(
			record_center_id, user_id, trgt_id, remk, reg_dtime
		)
		VALUES
		(
			#recordCenterId:VARCHAR#, #userId:VARCHAR#, #trgtId:VARCHAR#, 'READRECORD'
			<!--cubrid , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')-->
			, TO_CHAR(sys_datetime, 'YYYYMMDDHH24MISS')
		)
	</insert>
	<update id="updateReadReqRecordList" parameterClass="rms.srch.srch.domain.ReqListTemp">
		UPDATE TB_ZZREQLISTTEMP
		<!--cubrid SET   reg_dtime = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')-->
		SET   reg_dtime = TO_CHAR(sys_datetime, 'YYYYMMDDHH24MISS')
		WHERE record_center_id = #recordCenterId:VARCHAR#
		AND   user_id = #userId:VARCHAR#
		AND   trgt_id = #trgtId:VARCHAR#
		AND   remk = 'READRECORD'
	</update>
	
	<select id="checkReadReqFolderState" parameterClass="rms.srch.srch.domain.ReqListTemp" resultClass="string">
		SELECT TITLE		
		FROM   TB_RDFOLDER
		WHERE  FOLDER_ID IN (
								SELECT TRGT_ID FOLDER_ID
								FROM   TB_ZZREQLISTTEMP 
								WHERE  USER_ID = #userId:VARCHAR#
								AND    REMK = 'READFOLDER' 
								UNION ALL
								SELECT FOLDER_ID
								FROM   TB_RDFOLDERACCS
								WHERE  ((ACCS_USER_ID = #userId:VARCHAR# AND ACCS_TYPE_CD = '1') OR (ACCS_DEPT_CD = #userDeptCd:VARCHAR# AND ACCS_TYPE_CD = '2'))
								UNION ALL
                                SELECT A.FOLDER_ID
                                FROM TB_RDFOLDERREADDETL A,TB_RDREADREQ B
                                WHERE  A.KEEP_RECORD_CENTER_ID = #recordCenterId:VARCHAR#
                                AND A.READ_APROV_CD = '2'
                                AND A.READ_REQ_PROG_STATE_CD = '3'
                                AND A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
                                AND A.READ_REQNO = B.READ_REQNO
                                AND B.READ_REQ_DIV_CD = '1'
                                AND B.READ_USER_ID = #userId:VARCHAR#
                                AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN B.READ_START_YMD AND B.READ_CLOSE_YMD
                                UNION ALL
                                SELECT A.FOLDER_ID
                                FROM TB_RDFOLDERREADDETL A,TB_RDREADREQ B
                                WHERE  A.KEEP_RECORD_CENTER_ID = #recordCenterId:VARCHAR#
                                AND A.READ_APROV_CD = '1'
                                AND A.READ_REQ_PROG_STATE_CD = '1'
                                AND A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
                                AND A.READ_REQNO = B.READ_REQNO
                                AND B.READ_REQ_DIV_CD = '1'
                                <![CDATA[
								AND TO_CHAR(SYSDATE,'YYYYMMDD') >= B.READ_START_YMD
								]]>		                                
                                AND B.READ_USER_ID = #userId:VARCHAR#
							)
		AND    FOLDER_KEEP_STATE_CD IN ('01', '04')
        AND	   RECORD_CENTER_ID = #recordCenterId:VARCHAR#
        AND FOLDER_ID = #trgtId:VARCHAR#
	</select>
	
	<select id="checkReadReqRecordState" parameterClass="rms.srch.srch.domain.ReqListTemp" resultClass="string">
		SELECT TITLE		
		FROM   TB_RDRECORD
		WHERE  RECORD_ID IN (
								SELECT TRGT_ID RECORD_ID
								FROM   TB_ZZREQLISTTEMP 
								WHERE  USER_ID = #userId:VARCHAR#
								AND    REMK = 'READRECORD' 
								UNION ALL
								SELECT RECORD_ID
								FROM   TB_RDRECORDACCS
								WHERE  ((ACCS_USER_ID = #userId:VARCHAR# AND ACCS_TYPE_CD = '1') OR (ACCS_DEPT_CD = #userDeptCd:VARCHAR# AND ACCS_TYPE_CD = '2'))
								UNION ALL
								SELECT A.RECORD_ID
								FROM TB_RDRECORDREADDETL A,TB_RDREADREQ B
								WHERE  A.KEEP_RECORD_CENTER_ID = #recordCenterId:VARCHAR#
								AND A.READ_APROV_CD = '2'
								AND A.READ_REQ_PROG_STATE_CD = '3'
								AND A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
								AND A.READ_REQNO = B.READ_REQNO
								AND B.READ_REQ_DIV_CD = '2'
								AND B.READ_USER_ID = #userId:VARCHAR#
								AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN B.READ_START_YMD AND B.READ_CLOSE_YMD
								UNION ALL
								SELECT A.RECORD_ID
								FROM TB_RDRECORDREADDETL A,TB_RDREADREQ B
								WHERE  A.KEEP_RECORD_CENTER_ID = #recordCenterId:VARCHAR#
								AND A.READ_APROV_CD = '1'
								AND A.READ_REQ_PROG_STATE_CD = '1'
								AND A.RECORD_CENTER_ID = B.RECORD_CENTER_ID
								AND A.READ_REQNO = B.READ_REQNO
								AND B.READ_REQ_DIV_CD = '2'                
								AND B.READ_USER_ID = #userId:VARCHAR#
								<![CDATA[
								AND TO_CHAR(SYSDATE,'YYYYMMDD') >= B.READ_START_YMD
								]]>		  
							)		
        AND	   RECORD_CENTER_ID = #recordCenterId:VARCHAR#
        AND RECORD_ID = #trgtId:VARCHAR#
	</select>
	
</sqlMap>
